//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coordinate", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.CsPoint))]
    public partial class Coordinate : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.NotifyModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> YField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double M {
            get {
                return this.MField;
            }
            set {
                if ((this.MField.Equals(value) != true)) {
                    this.MField = value;
                    this.RaisePropertyChanged("M");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotifyModel", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Station))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Sensor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeStampValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.PolyLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Polygon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.CrossSection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.ShapeFile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate))]
    public partial class NotifyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseViewModel", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Station))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Sensor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeStampValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.PolyLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Polygon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.CrossSection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.ShapeFile))]
    public partial class BaseViewModel : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.NotifyModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDirtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDirty {
            get {
                return this.IsDirtyField;
            }
            set {
                if ((this.IsDirtyField.Equals(value) != true)) {
                    this.IsDirtyField = value;
                    this.RaisePropertyChanged("IsDirty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class Station : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BatteryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Sensor[] SensorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((this.BatteryStatusField.Equals(value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Sensor[] Sensors {
            get {
                return this.SensorsField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorsField, value) != true)) {
                    this.SensorsField = value;
                    this.RaisePropertyChanged("Sensors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sensor", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class Sensor : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BatteryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeStampValue[] HeightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((this.BatteryStatusField.Equals(value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeStampValue[] Heights {
            get {
                return this.HeightsField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightsField, value) != true)) {
                    this.HeightsField = value;
                    this.RaisePropertyChanged("Heights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorType {
            get {
                return this.SensorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeField, value) != true)) {
                    this.SensorTypeField = value;
                    this.RaisePropertyChanged("SensorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeStampValue", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class TimeStampValue : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeSpanValue", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class TimeSpanValue : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolyLine", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Polygon))]
    public partial class PolyLine : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate[] CoordinatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate[] Coordinates {
            get {
                return this.CoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinatesField, value) != true)) {
                    this.CoordinatesField = value;
                    this.RaisePropertyChanged("Coordinates");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Polygon", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class Polygon : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.PolyLine {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrossSection", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class CrossSection : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ChainageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.PolyLine ExtentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasurementTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.CsPoint[] PointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Chainage {
            get {
                return this.ChainageField;
            }
            set {
                if ((this.ChainageField.Equals(value) != true)) {
                    this.ChainageField = value;
                    this.RaisePropertyChanged("Chainage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.PolyLine Extent {
            get {
                return this.ExtentField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtentField, value) != true)) {
                    this.ExtentField = value;
                    this.RaisePropertyChanged("Extent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasurementTime {
            get {
                return this.MeasurementTimeField;
            }
            set {
                if ((this.MeasurementTimeField.Equals(value) != true)) {
                    this.MeasurementTimeField = value;
                    this.RaisePropertyChanged("MeasurementTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.CsPoint[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShapeFile", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class ShapeFile : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Polygon[] GeometriesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Polygon[] Geometries {
            get {
                return this.GeometriesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeometriesField, value) != true)) {
                    this.GeometriesField = value;
                    this.RaisePropertyChanged("Geometries");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataSegmentSpan", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class DataSegmentSpan : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.NotifyModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SegmentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel ZoomLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SegmentNumber {
            get {
                return this.SegmentNumberField;
            }
            set {
                if ((this.SegmentNumberField.Equals(value) != true)) {
                    this.SegmentNumberField = value;
                    this.RaisePropertyChanged("SegmentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.BaseViewModel ZoomLevel {
            get {
                return this.ZoomLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoomLevelField, value) != true)) {
                    this.ZoomLevelField = value;
                    this.RaisePropertyChanged("ZoomLevel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataSegment", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class DataSegment : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.NotifyModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SegmentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoomLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SegmentNumber {
            get {
                return this.SegmentNumberField;
            }
            set {
                if ((this.SegmentNumberField.Equals(value) != true)) {
                    this.SegmentNumberField = value;
                    this.RaisePropertyChanged("SegmentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoomLevel {
            get {
                return this.ZoomLevelField;
            }
            set {
                if ((this.ZoomLevelField.Equals(value) != true)) {
                    this.ZoomLevelField = value;
                    this.RaisePropertyChanged("ZoomLevel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CsPoint", Namespace="http://schemas.datacontract.org/2004/07/JacobGudbjerg.CommonCode")]
    [System.SerializableAttribute()]
    public partial class CsPoint : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RelativeXField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RelativeX {
            get {
                return this.RelativeXField;
            }
            set {
                if ((this.RelativeXField.Equals(value) != true)) {
                    this.RelativeXField = value;
                    this.RaisePropertyChanged("RelativeX");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoggerPageConfig", Namespace="http://schemas.datacontract.org/2004/07/HydroInform.WebServices")]
    [System.SerializableAttribute()]
    public partial class LoggerPageConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, int> LoggerIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MapCenterLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MapCenterLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MapZoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] RainGaugeIDSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.WMSServerAddress[] WmsServersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, int> LoggerIDs {
            get {
                return this.LoggerIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggerIDsField, value) != true)) {
                    this.LoggerIDsField = value;
                    this.RaisePropertyChanged("LoggerIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MapCenterLatitude {
            get {
                return this.MapCenterLatitudeField;
            }
            set {
                if ((this.MapCenterLatitudeField.Equals(value) != true)) {
                    this.MapCenterLatitudeField = value;
                    this.RaisePropertyChanged("MapCenterLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MapCenterLongitude {
            get {
                return this.MapCenterLongitudeField;
            }
            set {
                if ((this.MapCenterLongitudeField.Equals(value) != true)) {
                    this.MapCenterLongitudeField = value;
                    this.RaisePropertyChanged("MapCenterLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MapZoom {
            get {
                return this.MapZoomField;
            }
            set {
                if ((this.MapZoomField.Equals(value) != true)) {
                    this.MapZoomField = value;
                    this.RaisePropertyChanged("MapZoom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] RainGaugeIDS {
            get {
                return this.RainGaugeIDSField;
            }
            set {
                if ((object.ReferenceEquals(this.RainGaugeIDSField, value) != true)) {
                    this.RainGaugeIDSField = value;
                    this.RaisePropertyChanged("RainGaugeIDS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.WMSServerAddress[] WmsServers {
            get {
                return this.WmsServersField;
            }
            set {
                if ((object.ReferenceEquals(this.WmsServersField, value) != true)) {
                    this.WmsServersField = value;
                    this.RaisePropertyChanged("WmsServers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WMSServerAddress", Namespace="http://schemas.datacontract.org/2004/07/HydroInform.WebServices")]
    [System.SerializableAttribute()]
    public partial class WMSServerAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinZoomLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Layers {
            get {
                return this.LayersField;
            }
            set {
                if ((object.ReferenceEquals(this.LayersField, value) != true)) {
                    this.LayersField = value;
                    this.RaisePropertyChanged("Layers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MapServer {
            get {
                return this.MapServerField;
            }
            set {
                if ((object.ReferenceEquals(this.MapServerField, value) != true)) {
                    this.MapServerField = value;
                    this.RaisePropertyChanged("MapServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinZoomLevel {
            get {
                return this.MinZoomLevelField;
            }
            set {
                if ((this.MinZoomLevelField.Equals(value) != true)) {
                    this.MinZoomLevelField = value;
                    this.RaisePropertyChanged("MinZoomLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ServiceReference1.LoggerData")]
    public interface LoggerData {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetHeight", ReplyAction="urn:LoggerData/GetHeightResponse")]
        System.Nullable<double> GetHeight(double Latitude, double Longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/PostNumberBoundary", ReplyAction="urn:LoggerData/PostNumberBoundaryResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate[] PostNumberBoundary(int PostalNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetStationsFromOrbicon", ReplyAction="urn:LoggerData/GetStationsFromOrbiconResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Station[] GetStationsFromOrbicon();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetConfig", ReplyAction="urn:LoggerData/GetConfigResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.LoggerPageConfig GetConfig(int PageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetStation", ReplyAction="urn:LoggerData/GetStationResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Station GetStation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetTimeSpanSeriesDefinition", ReplyAction="urn:LoggerData/GetTimeSpanSeriesDefinitionResponse")]
        System.Collections.Generic.Dictionary<int, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan[]> GetTimeSpanSeriesDefinition(int sensorid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetTimeSpanSeriesSegment", ReplyAction="urn:LoggerData/GetTimeSpanSeriesSegmentResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue[] GetTimeSpanSeriesSegment(int UniqueSensorID, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan segment);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetGridBlock", ReplyAction="urn:LoggerData/GetGridBlockResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Polygon GetGridBlock(int GridBlockId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetGridTimeSpanSeriesDefinition", ReplyAction="urn:LoggerData/GetGridTimeSpanSeriesDefinitionResponse")]
        System.Collections.Generic.Dictionary<int, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan[]> GetGridTimeSpanSeriesDefinition(int gridid, int gridblockid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetGridTimeSpanSeriesSegment", ReplyAction="urn:LoggerData/GetGridTimeSpanSeriesSegmentResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue[] GetGridTimeSpanSeriesSegment(int gridid, int gridblockid, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan segment);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetTimeSeriesAtlevel", ReplyAction="urn:LoggerData/GetTimeSeriesAtlevelResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeStampValue[] GetTimeSeriesAtlevel(int UniqueSensorID, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegment segment);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetTimeSeriesDefinition", ReplyAction="urn:LoggerData/GetTimeSeriesDefinitionResponse")]
        System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegment>> GetTimeSeriesDefinition(int sensorid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetTimeSeries", ReplyAction="urn:LoggerData/GetTimeSeriesResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeStampValue[] GetTimeSeries(int UniqueSensorid, int NumberOfDecimals);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetRainData", ReplyAction="urn:LoggerData/GetRainDataResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue[] GetRainData(int UniqueSensorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetCrossSection", ReplyAction="urn:LoggerData/GetCrossSectionResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.CrossSection GetCrossSection(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetSensor", ReplyAction="urn:LoggerData/GetSensorResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Sensor GetSensor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LoggerData/GetShapes", ReplyAction="urn:LoggerData/GetShapesResponse")]
        HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.ShapeFile GetShapes(int shapefileid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LoggerDataChannel : HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.LoggerData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggerDataClient : System.ServiceModel.ClientBase<HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.LoggerData>, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.LoggerData {
        
        public LoggerDataClient() {
        }
        
        public LoggerDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggerDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggerDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggerDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Nullable<double> GetHeight(double Latitude, double Longitude) {
            return base.Channel.GetHeight(Latitude, Longitude);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Coordinate[] PostNumberBoundary(int PostalNumber) {
            return base.Channel.PostNumberBoundary(PostalNumber);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Station[] GetStationsFromOrbicon() {
            return base.Channel.GetStationsFromOrbicon();
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.LoggerPageConfig GetConfig(int PageNumber) {
            return base.Channel.GetConfig(PageNumber);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Station GetStation(int id) {
            return base.Channel.GetStation(id);
        }
        
        public System.Collections.Generic.Dictionary<int, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan[]> GetTimeSpanSeriesDefinition(int sensorid) {
            return base.Channel.GetTimeSpanSeriesDefinition(sensorid);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue[] GetTimeSpanSeriesSegment(int UniqueSensorID, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan segment) {
            return base.Channel.GetTimeSpanSeriesSegment(UniqueSensorID, segment);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Polygon GetGridBlock(int GridBlockId) {
            return base.Channel.GetGridBlock(GridBlockId);
        }
        
        public System.Collections.Generic.Dictionary<int, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan[]> GetGridTimeSpanSeriesDefinition(int gridid, int gridblockid) {
            return base.Channel.GetGridTimeSpanSeriesDefinition(gridid, gridblockid);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue[] GetGridTimeSpanSeriesSegment(int gridid, int gridblockid, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegmentSpan segment) {
            return base.Channel.GetGridTimeSpanSeriesSegment(gridid, gridblockid, segment);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeStampValue[] GetTimeSeriesAtlevel(int UniqueSensorID, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegment segment) {
            return base.Channel.GetTimeSeriesAtlevel(UniqueSensorID, segment);
        }
        
        public System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.DataSegment>> GetTimeSeriesDefinition(int sensorid) {
            return base.Channel.GetTimeSeriesDefinition(sensorid);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeStampValue[] GetTimeSeries(int UniqueSensorid, int NumberOfDecimals) {
            return base.Channel.GetTimeSeries(UniqueSensorid, NumberOfDecimals);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.TimeSpanValue[] GetRainData(int UniqueSensorID) {
            return base.Channel.GetRainData(UniqueSensorID);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.CrossSection GetCrossSection(int id) {
            return base.Channel.GetCrossSection(id);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.Sensor GetSensor(int id) {
            return base.Channel.GetSensor(id);
        }
        
        public HydroNumerics.MikeSheTools.MikeUrban.ServiceReference1.ShapeFile GetShapes(int shapefileid) {
            return base.Channel.GetShapes(shapefileid);
        }
    }
}
