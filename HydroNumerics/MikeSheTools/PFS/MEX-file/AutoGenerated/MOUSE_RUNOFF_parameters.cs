using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;
using HydroNumerics.MikeSheTools.PFS.SheFile;

namespace HydroNumerics.MikeSheTools.PFS.MEX
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class MOUSE_RUNOFF_parameters: PFSMapper
  {


    internal MOUSE_RUNOFF_parameters(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public bool TRAP_Computation
    {
      get
      {
        return _pfsHandle.GetKeyword("TRAP_Computation", 1).GetParameter(1).ToBoolean();
      }
      set
      {
        _pfsHandle.GetKeyword("TRAP_Computation", 1).GetParameter(1).Value = value;
      }
    }

    public string Simulation_start
    {
      get
      {
        return _pfsHandle.GetKeyword("Simulation_start", 1).GetParameter(1).ToString();
      }
      set
      {
        _pfsHandle.GetKeyword("Simulation_start", 1).GetParameter(1).Value = value;
      }
    }

    public string Simulation_end
    {
      get
      {
        return _pfsHandle.GetKeyword("Simulation_end", 1).GetParameter(1).ToString();
      }
      set
      {
        _pfsHandle.GetKeyword("Simulation_end", 1).GetParameter(1).Value = value;
      }
    }

    public int Dt_FixedSec
    {
      get
      {
        return _pfsHandle.GetKeyword("Dt_FixedSec", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Dt_FixedSec", 1).GetParameter(1).Value = value;
      }
    }

    public int Dt_WetPeriodSec
    {
      get
      {
        return _pfsHandle.GetKeyword("Dt_WetPeriodSec", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Dt_WetPeriodSec", 1).GetParameter(1).Value = value;
      }
    }

    public int Dt_DryPeriodSec
    {
      get
      {
        return _pfsHandle.GetKeyword("Dt_DryPeriodSec", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Dt_DryPeriodSec", 1).GetParameter(1).Value = value;
      }
    }

    public int RDII_dtSRC_hour
    {
      get
      {
        return _pfsHandle.GetKeyword("RDII_dtSRC_hour", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("RDII_dtSRC_hour", 1).GetParameter(1).Value = value;
      }
    }

    public int RDII_dtFRC_sec
    {
      get
      {
        return _pfsHandle.GetKeyword("RDII_dtFRC_sec", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("RDII_dtFRC_sec", 1).GetParameter(1).Value = value;
      }
    }

    public bool Allow_OverWrite
    {
      get
      {
        return _pfsHandle.GetKeyword("Allow_OverWrite", 1).GetParameter(1).ToBoolean();
      }
      set
      {
        _pfsHandle.GetKeyword("Allow_OverWrite", 1).GetParameter(1).Value = value;
      }
    }

  }
}
