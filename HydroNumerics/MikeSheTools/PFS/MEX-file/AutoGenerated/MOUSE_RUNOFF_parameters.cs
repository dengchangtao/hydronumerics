using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;
using HydroNumerics.MikeSheTools.PFS.SheFile;

namespace HydroNumerics.MikeSheTools.PFS.MEX
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class MOUSE_RUNOFF_parameters: PFSMapper
  {


    internal MOUSE_RUNOFF_parameters(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }

      Model_type = new Model_type(_pfsHandle.GetKeyword("Model_type", 1));
    }

    public MOUSE_RUNOFF_parameters()
    {
      _pfsHandle = new PFSSection("MOUSE_RUNOFF_parameters");

      _pfsHandle.AddKeyword(new PFSKeyword("TRAP_Computation", PFSParameterType.Boolean, true));
      _pfsHandle.AddKeyword(new PFSKeyword("Simulation_start", PFSParameterType.String, ""));
      _pfsHandle.AddKeyword(new PFSKeyword("Simulation_end", PFSParameterType.String, ""));
      _pfsHandle.AddKeyword(new PFSKeyword("Dt_FixedSec", PFSParameterType.Integer, 0));
      _pfsHandle.AddKeyword(new PFSKeyword("Dt_WetPeriodSec", PFSParameterType.Integer, 0));
      _pfsHandle.AddKeyword(new PFSKeyword("Dt_DryPeriodSec", PFSParameterType.Integer, 0));
      _pfsHandle.AddKeyword(new PFSKeyword("RDII_dtSRC_hour", PFSParameterType.Integer, 0));
      _pfsHandle.AddKeyword(new PFSKeyword("RDII_dtFRC_sec", PFSParameterType.Integer, 0));
      _pfsHandle.AddKeyword(new PFSKeyword("Allow_OverWrite", PFSParameterType.Boolean, true));
    }

    public Model_type Model_type{get; private set;}
    public bool TRAP_Computation1
    {
      get
      {
        return _pfsHandle.GetKeyword("TRAP_Computation", 1).GetParameter(1).ToBoolean();
      }
      set
      {
        _pfsHandle.GetKeyword("TRAP_Computation", 1).GetParameter(1).Value = value;
      }
    }

    public string Simulation_start1
    {
      get
      {
        return _pfsHandle.GetKeyword("Simulation_start", 1).GetParameter(1).ToString();
      }
      set
      {
        _pfsHandle.GetKeyword("Simulation_start", 1).GetParameter(1).Value = value;
      }
    }

    public string Simulation_end1
    {
      get
      {
        return _pfsHandle.GetKeyword("Simulation_end", 1).GetParameter(1).ToString();
      }
      set
      {
        _pfsHandle.GetKeyword("Simulation_end", 1).GetParameter(1).Value = value;
      }
    }

    public int Dt_FixedSec1
    {
      get
      {
        return _pfsHandle.GetKeyword("Dt_FixedSec", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Dt_FixedSec", 1).GetParameter(1).Value = value;
      }
    }

    public int Dt_WetPeriodSec1
    {
      get
      {
        return _pfsHandle.GetKeyword("Dt_WetPeriodSec", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Dt_WetPeriodSec", 1).GetParameter(1).Value = value;
      }
    }

    public int Dt_DryPeriodSec1
    {
      get
      {
        return _pfsHandle.GetKeyword("Dt_DryPeriodSec", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Dt_DryPeriodSec", 1).GetParameter(1).Value = value;
      }
    }

    public int RDII_dtSRC_hour1
    {
      get
      {
        return _pfsHandle.GetKeyword("RDII_dtSRC_hour", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("RDII_dtSRC_hour", 1).GetParameter(1).Value = value;
      }
    }

    public int RDII_dtFRC_sec1
    {
      get
      {
        return _pfsHandle.GetKeyword("RDII_dtFRC_sec", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("RDII_dtFRC_sec", 1).GetParameter(1).Value = value;
      }
    }

    public bool Allow_OverWrite1
    {
      get
      {
        return _pfsHandle.GetKeyword("Allow_OverWrite", 1).GetParameter(1).ToBoolean();
      }
      set
      {
        _pfsHandle.GetKeyword("Allow_OverWrite", 1).GetParameter(1).Value = value;
      }
    }

  }
}
