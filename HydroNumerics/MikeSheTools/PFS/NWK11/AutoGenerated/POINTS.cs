using System;
using System.Linq;
using System.Collections.Generic;
using DHI.Generic.MikeZero;
using HydroNumerics.MikeSheTools.PFS.SheFile;

namespace HydroNumerics.MikeSheTools.PFS.NWK11
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class POINTS: PFSMapper
  {


    internal POINTS(PFSSection Section)
    {
      _pfsHandle = Section;

      points = new List<point>();
      int knumber =Section.GetKeywordsNo("point");


      var sectionstring = Section.ToString().Split(new string[]{"\n"}, StringSplitOptions.RemoveEmptyEntries);

     

      for (int i = 1; i < sectionstring.Count()-1; i++)
      {
        var pdata = sectionstring[i].Split(new string[] { "=", "," }, StringSplitOptions.RemoveEmptyEntries);
       var pp =  new point("point");
       pp.Par1 = (int) double.Parse(pdata[1]);
       pp.Par2 = double.Parse(pdata[2]);
       pp.Par3 = double.Parse(pdata[3]);
       pp.Par4 = (int)double.Parse(pdata[4]);

       if (pdata.Count() > 5)
       {
         pp.Par5 = double.Parse(pdata[5]);
         pp.Par6 = (int)double.Parse(pdata[6]);
       }
       points.Add(pp);
      }


      //for (int i = 1; i <= knumber; i++)
      //{
      //  points.Add(new point(Section.GetKeyword("point", i)));
      //}
      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }

    }

    public POINTS(string pfsname)
    {
      _pfsHandle = new PFSSection(pfsname);

      points = new List<point>();
    }

    public List<point> points {get; private set;}
  }
}
