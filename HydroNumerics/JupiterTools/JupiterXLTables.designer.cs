#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HydroNumerics.JupiterTools
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Jupiter")]
	public partial class JupiterXLTablesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBOREHOLE(BOREHOLE instance);
    partial void UpdateBOREHOLE(BOREHOLE instance);
    partial void DeleteBOREHOLE(BOREHOLE instance);
    partial void InsertCASING(CASING instance);
    partial void UpdateCASING(CASING instance);
    partial void DeleteCASING(CASING instance);
    partial void InsertDRWPLANTINTAKE(DRWPLANTINTAKE instance);
    partial void UpdateDRWPLANTINTAKE(DRWPLANTINTAKE instance);
    partial void DeleteDRWPLANTINTAKE(DRWPLANTINTAKE instance);
    partial void InsertDRWPLANT(DRWPLANT instance);
    partial void UpdateDRWPLANT(DRWPLANT instance);
    partial void DeleteDRWPLANT(DRWPLANT instance);
    partial void InsertINTAKE(INTAKE instance);
    partial void UpdateINTAKE(INTAKE instance);
    partial void DeleteINTAKE(INTAKE instance);
    partial void InsertINTAKECATCHMENT(INTAKECATCHMENT instance);
    partial void UpdateINTAKECATCHMENT(INTAKECATCHMENT instance);
    partial void DeleteINTAKECATCHMENT(INTAKECATCHMENT instance);
    partial void InsertLITHSAMP(LITHSAMP instance);
    partial void UpdateLITHSAMP(LITHSAMP instance);
    partial void DeleteLITHSAMP(LITHSAMP instance);
    partial void InsertSCREEN(SCREEN instance);
    partial void UpdateSCREEN(SCREEN instance);
    partial void DeleteSCREEN(SCREEN instance);
    partial void InsertWATLEVEL(WATLEVEL instance);
    partial void UpdateWATLEVEL(WATLEVEL instance);
    partial void DeleteWATLEVEL(WATLEVEL instance);
    partial void InsertGRWCHEMSAMPLE(GRWCHEMSAMPLE instance);
    partial void UpdateGRWCHEMSAMPLE(GRWCHEMSAMPLE instance);
    partial void DeleteGRWCHEMSAMPLE(GRWCHEMSAMPLE instance);
    partial void InsertGRWCHEMANALYSI(GRWCHEMANALYSI instance);
    partial void UpdateGRWCHEMANALYSI(GRWCHEMANALYSI instance);
    partial void DeleteGRWCHEMANALYSI(GRWCHEMANALYSI instance);
    partial void InsertCOMPOUNDLIST(COMPOUNDLIST instance);
    partial void UpdateCOMPOUNDLIST(COMPOUNDLIST instance);
    partial void DeleteCOMPOUNDLIST(COMPOUNDLIST instance);
    partial void InsertWRRCATCHMENT(WRRCATCHMENT instance);
    partial void UpdateWRRCATCHMENT(WRRCATCHMENT instance);
    partial void DeleteWRRCATCHMENT(WRRCATCHMENT instance);
    #endregion
		
		public JupiterXLTablesDataContext() : 
				base(global::HydroNumerics.JupiterTools.Properties.Settings.Default.JupiterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public JupiterXLTablesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JupiterXLTablesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JupiterXLTablesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JupiterXLTablesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BOREHOLE> BOREHOLEs
		{
			get
			{
				return this.GetTable<BOREHOLE>();
			}
		}
		
		public System.Data.Linq.Table<CASING> CASINGs
		{
			get
			{
				return this.GetTable<CASING>();
			}
		}
		
		public System.Data.Linq.Table<DRWPLANTINTAKE> DRWPLANTINTAKEs
		{
			get
			{
				return this.GetTable<DRWPLANTINTAKE>();
			}
		}
		
		public System.Data.Linq.Table<DRWPLANT> DRWPLANTs
		{
			get
			{
				return this.GetTable<DRWPLANT>();
			}
		}
		
		public System.Data.Linq.Table<INTAKE> INTAKEs
		{
			get
			{
				return this.GetTable<INTAKE>();
			}
		}
		
		public System.Data.Linq.Table<INTAKECATCHMENT> INTAKECATCHMENTs
		{
			get
			{
				return this.GetTable<INTAKECATCHMENT>();
			}
		}
		
		public System.Data.Linq.Table<LITHSAMP> LITHSAMPs
		{
			get
			{
				return this.GetTable<LITHSAMP>();
			}
		}
		
		public System.Data.Linq.Table<SCREEN> SCREENs
		{
			get
			{
				return this.GetTable<SCREEN>();
			}
		}
		
		public System.Data.Linq.Table<WATLEVEL> WATLEVELs
		{
			get
			{
				return this.GetTable<WATLEVEL>();
			}
		}
		
		public System.Data.Linq.Table<GRWCHEMSAMPLE> GRWCHEMSAMPLEs
		{
			get
			{
				return this.GetTable<GRWCHEMSAMPLE>();
			}
		}
		
		public System.Data.Linq.Table<GRWCHEMANALYSI> GRWCHEMANALYSIs
		{
			get
			{
				return this.GetTable<GRWCHEMANALYSI>();
			}
		}
		
		public System.Data.Linq.Table<COMPOUNDLIST> COMPOUNDLISTs
		{
			get
			{
				return this.GetTable<COMPOUNDLIST>();
			}
		}
		
		public System.Data.Linq.Table<WRRCATCHMENT> WRRCATCHMENTs
		{
			get
			{
				return this.GetTable<WRRCATCHMENT>();
			}
		}
		
		public System.Data.Linq.Table<BorIntScre> BorIntScres
		{
			get
			{
				return this.GetTable<BorIntScre>();
			}
		}
	}
	
	[Table(Name="dbo.BOREHOLE")]
	public partial class BOREHOLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BOREHOLENO;
		
		private string _NAMINGSYS;
		
		private string _PURPOSE;
		
		private string _USE;
		
		private string _STATUS;
		
		private System.Nullable<double> _DRILLDEPTH;
		
		private System.Nullable<double> _ELEVATION;
		
		private System.Nullable<double> _CTRPELEVA;
		
		private string _VERTICAREF;
		
		private string _CTRPDESCR;
		
		private System.Nullable<float> _CTRPPRECIS;
		
		private System.Nullable<float> _CTRPZPRECIS;
		
		private System.Nullable<float> _CTRPHEIGHT;
		
		private string _ELEVAMETHO;
		
		private string _ELEVAQUALI;
		
		private System.Nullable<char> _ELEVASOURC;
		
		private string _LOCATION;
		
		private string _COMMENTS;
		
		private string _VARIOUS;
		
		private System.Nullable<double> _XUTM;
		
		private System.Nullable<double> _YUTM;
		
		private System.Nullable<int> _UTMZONE;
		
		private string _DATUM;
		
		private string _MAPSHEET;
		
		private System.Nullable<double> _MAPDISTX;
		
		private System.Nullable<double> _MAPDISTY;
		
		private System.Nullable<double> _SYS34X;
		
		private System.Nullable<double> _SYS34Y;
		
		private System.Nullable<int> _SYS34ZONE;
		
		private System.Nullable<double> _LATITUDE;
		
		private System.Nullable<double> _LONGITUDE;
		
		private string _LOCATMETHO;
		
		private string _LOCATQUALI;
		
		private string _LOCATSOURC;
		
		private System.Nullable<int> _BORHPOSTC;
		
		private System.Nullable<int> _BORHTOWNNO;
		
		private System.Nullable<int> _COUNTYNO;
		
		private string _MUNICIPAL;
		
		private System.Nullable<int> _HOUSEOWNAS;
		
		private string _LANDREGNO;
		
		private string _DRILLER;
		
		private string _DRILLLOGNO;
		
		private string _DRILLBORNO;
		
		private System.Nullable<char> _REPORTEDBY;
		
		private string _CONSULTANT;
		
		private string _CONSULOGNO;
		
		private string _CONSUBORNO;
		
		private string _DRILLEDFOR;
		
		private string _DRFORADRES;
		
		private System.Nullable<int> _DRFORPOSTC;
		
		private System.Nullable<System.DateTime> _DRILSTDATE;
		
		private System.Nullable<System.DateTime> _DRILENDATE;
		
		private System.Nullable<System.DateTime> _ABANDONDAT;
		
		private string _PREVBORHNO;
		
		private System.Nullable<int> _NUMSUPLBOR;
		
		private System.Nullable<System.DateTime> _SAMRECEDAT;
		
		private System.Nullable<System.DateTime> _SAMDESCDAT;
		
		private System.Nullable<int> _NUMOFSAMPL;
		
		private System.Nullable<int> _NUMSAMSTO;
		
		private string _LITHOLNOTE;
		
		private System.Nullable<System.DateTime> _TOGEUSDATE;
		
		private System.Nullable<int> _GRUMOCOUNTYNO;
		
		private System.Nullable<int> _GRUMOBORNO;
		
		private System.Nullable<int> _GRUMOBORTYPE;
		
		private System.Nullable<int> _GRUMOAREANO;
		
		private System.Nullable<int> _BORHTOWNNO2007;
		
		private string _LOCQUALI;
		
		private System.Nullable<int> _LOOPAREANO;
		
		private System.Nullable<int> _LOOPSTATION;
		
		private System.Nullable<int> _LOOPTYPE;
		
		private System.Nullable<System.DateTime> _USECHANGEDATE;
		
		private System.Nullable<int> _ENVCEN;
		
		private System.Nullable<char> _ABANDCAUSE;
		
		private string _ABANDCONTR;
		
		private string _STARTDAYUNKNOWN;
		
		private string _STARTMNTHUNKNWN;
		
		private string _WWBOREHOLENO;
		
		private System.Nullable<double> _XUTM32EUREF89;
		
		private System.Nullable<double> _YUTM32EUREF89;
		
		private System.Nullable<double> _ZDVR90;
		
		private string _INSTALLATION;
		
		private string _WORKINGCONDITIONS;
		
		private string _APPROACH;
		
		private string _ACCESSREMARK;
		
		private string _LOCATEPERSONEMAIL;
		
		private System.Nullable<int> _PRESERVATIONZONE;
		
		private System.Nullable<int> _PROTECTIONZONE;
		
		private System.Nullable<int> _REGION;
		
		private System.Nullable<int> _USECHANGECAUSE;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntitySet<CASING> _CASINGs;
		
		private EntitySet<GRWCHEMSAMPLE> _GRWCHEMSAMPLEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBOREHOLENOChanging(string value);
    partial void OnBOREHOLENOChanged();
    partial void OnNAMINGSYSChanging(string value);
    partial void OnNAMINGSYSChanged();
    partial void OnPURPOSEChanging(string value);
    partial void OnPURPOSEChanged();
    partial void OnUSEChanging(string value);
    partial void OnUSEChanged();
    partial void OnSTATUSChanging(string value);
    partial void OnSTATUSChanged();
    partial void OnDRILLDEPTHChanging(System.Nullable<double> value);
    partial void OnDRILLDEPTHChanged();
    partial void OnELEVATIONChanging(System.Nullable<double> value);
    partial void OnELEVATIONChanged();
    partial void OnCTRPELEVAChanging(System.Nullable<double> value);
    partial void OnCTRPELEVAChanged();
    partial void OnVERTICAREFChanging(string value);
    partial void OnVERTICAREFChanged();
    partial void OnCTRPDESCRChanging(string value);
    partial void OnCTRPDESCRChanged();
    partial void OnCTRPPRECISChanging(System.Nullable<float> value);
    partial void OnCTRPPRECISChanged();
    partial void OnCTRPZPRECISChanging(System.Nullable<float> value);
    partial void OnCTRPZPRECISChanged();
    partial void OnCTRPHEIGHTChanging(System.Nullable<float> value);
    partial void OnCTRPHEIGHTChanged();
    partial void OnELEVAMETHOChanging(string value);
    partial void OnELEVAMETHOChanged();
    partial void OnELEVAQUALIChanging(string value);
    partial void OnELEVAQUALIChanged();
    partial void OnELEVASOURCChanging(System.Nullable<char> value);
    partial void OnELEVASOURCChanged();
    partial void OnLOCATIONChanging(string value);
    partial void OnLOCATIONChanged();
    partial void OnCOMMENTSChanging(string value);
    partial void OnCOMMENTSChanged();
    partial void OnVARIOUSChanging(string value);
    partial void OnVARIOUSChanged();
    partial void OnXUTMChanging(System.Nullable<double> value);
    partial void OnXUTMChanged();
    partial void OnYUTMChanging(System.Nullable<double> value);
    partial void OnYUTMChanged();
    partial void OnUTMZONEChanging(System.Nullable<int> value);
    partial void OnUTMZONEChanged();
    partial void OnDATUMChanging(string value);
    partial void OnDATUMChanged();
    partial void OnMAPSHEETChanging(string value);
    partial void OnMAPSHEETChanged();
    partial void OnMAPDISTXChanging(System.Nullable<double> value);
    partial void OnMAPDISTXChanged();
    partial void OnMAPDISTYChanging(System.Nullable<double> value);
    partial void OnMAPDISTYChanged();
    partial void OnSYS34XChanging(System.Nullable<double> value);
    partial void OnSYS34XChanged();
    partial void OnSYS34YChanging(System.Nullable<double> value);
    partial void OnSYS34YChanged();
    partial void OnSYS34ZONEChanging(System.Nullable<int> value);
    partial void OnSYS34ZONEChanged();
    partial void OnLATITUDEChanging(System.Nullable<double> value);
    partial void OnLATITUDEChanged();
    partial void OnLONGITUDEChanging(System.Nullable<double> value);
    partial void OnLONGITUDEChanged();
    partial void OnLOCATMETHOChanging(string value);
    partial void OnLOCATMETHOChanged();
    partial void OnLOCATQUALIChanging(string value);
    partial void OnLOCATQUALIChanged();
    partial void OnLOCATSOURCChanging(string value);
    partial void OnLOCATSOURCChanged();
    partial void OnBORHPOSTCChanging(System.Nullable<int> value);
    partial void OnBORHPOSTCChanged();
    partial void OnBORHTOWNNOChanging(System.Nullable<int> value);
    partial void OnBORHTOWNNOChanged();
    partial void OnCOUNTYNOChanging(System.Nullable<int> value);
    partial void OnCOUNTYNOChanged();
    partial void OnMUNICIPALChanging(string value);
    partial void OnMUNICIPALChanged();
    partial void OnHOUSEOWNASChanging(System.Nullable<int> value);
    partial void OnHOUSEOWNASChanged();
    partial void OnLANDREGNOChanging(string value);
    partial void OnLANDREGNOChanged();
    partial void OnDRILLERChanging(string value);
    partial void OnDRILLERChanged();
    partial void OnDRILLLOGNOChanging(string value);
    partial void OnDRILLLOGNOChanged();
    partial void OnDRILLBORNOChanging(string value);
    partial void OnDRILLBORNOChanged();
    partial void OnREPORTEDBYChanging(System.Nullable<char> value);
    partial void OnREPORTEDBYChanged();
    partial void OnCONSULTANTChanging(string value);
    partial void OnCONSULTANTChanged();
    partial void OnCONSULOGNOChanging(string value);
    partial void OnCONSULOGNOChanged();
    partial void OnCONSUBORNOChanging(string value);
    partial void OnCONSUBORNOChanged();
    partial void OnDRILLEDFORChanging(string value);
    partial void OnDRILLEDFORChanged();
    partial void OnDRFORADRESChanging(string value);
    partial void OnDRFORADRESChanged();
    partial void OnDRFORPOSTCChanging(System.Nullable<int> value);
    partial void OnDRFORPOSTCChanged();
    partial void OnDRILSTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDRILSTDATEChanged();
    partial void OnDRILENDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDRILENDATEChanged();
    partial void OnABANDONDATChanging(System.Nullable<System.DateTime> value);
    partial void OnABANDONDATChanged();
    partial void OnPREVBORHNOChanging(string value);
    partial void OnPREVBORHNOChanged();
    partial void OnNUMSUPLBORChanging(System.Nullable<int> value);
    partial void OnNUMSUPLBORChanged();
    partial void OnSAMRECEDATChanging(System.Nullable<System.DateTime> value);
    partial void OnSAMRECEDATChanged();
    partial void OnSAMDESCDATChanging(System.Nullable<System.DateTime> value);
    partial void OnSAMDESCDATChanged();
    partial void OnNUMOFSAMPLChanging(System.Nullable<int> value);
    partial void OnNUMOFSAMPLChanged();
    partial void OnNUMSAMSTOChanging(System.Nullable<int> value);
    partial void OnNUMSAMSTOChanged();
    partial void OnLITHOLNOTEChanging(string value);
    partial void OnLITHOLNOTEChanged();
    partial void OnTOGEUSDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnTOGEUSDATEChanged();
    partial void OnGRUMOCOUNTYNOChanging(System.Nullable<int> value);
    partial void OnGRUMOCOUNTYNOChanged();
    partial void OnGRUMOBORNOChanging(System.Nullable<int> value);
    partial void OnGRUMOBORNOChanged();
    partial void OnGRUMOBORTYPEChanging(System.Nullable<int> value);
    partial void OnGRUMOBORTYPEChanged();
    partial void OnGRUMOAREANOChanging(System.Nullable<int> value);
    partial void OnGRUMOAREANOChanged();
    partial void OnBORHTOWNNO2007Changing(System.Nullable<int> value);
    partial void OnBORHTOWNNO2007Changed();
    partial void OnLOCQUALIChanging(string value);
    partial void OnLOCQUALIChanged();
    partial void OnLOOPAREANOChanging(System.Nullable<int> value);
    partial void OnLOOPAREANOChanged();
    partial void OnLOOPSTATIONChanging(System.Nullable<int> value);
    partial void OnLOOPSTATIONChanged();
    partial void OnLOOPTYPEChanging(System.Nullable<int> value);
    partial void OnLOOPTYPEChanged();
    partial void OnUSECHANGEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUSECHANGEDATEChanged();
    partial void OnENVCENChanging(System.Nullable<int> value);
    partial void OnENVCENChanged();
    partial void OnABANDCAUSEChanging(System.Nullable<char> value);
    partial void OnABANDCAUSEChanged();
    partial void OnABANDCONTRChanging(string value);
    partial void OnABANDCONTRChanged();
    partial void OnSTARTDAYUNKNOWNChanging(string value);
    partial void OnSTARTDAYUNKNOWNChanged();
    partial void OnSTARTMNTHUNKNWNChanging(string value);
    partial void OnSTARTMNTHUNKNWNChanged();
    partial void OnWWBOREHOLENOChanging(string value);
    partial void OnWWBOREHOLENOChanged();
    partial void OnXUTM32EUREF89Changing(System.Nullable<double> value);
    partial void OnXUTM32EUREF89Changed();
    partial void OnYUTM32EUREF89Changing(System.Nullable<double> value);
    partial void OnYUTM32EUREF89Changed();
    partial void OnZDVR90Changing(System.Nullable<double> value);
    partial void OnZDVR90Changed();
    partial void OnINSTALLATIONChanging(string value);
    partial void OnINSTALLATIONChanged();
    partial void OnWORKINGCONDITIONSChanging(string value);
    partial void OnWORKINGCONDITIONSChanged();
    partial void OnAPPROACHChanging(string value);
    partial void OnAPPROACHChanged();
    partial void OnACCESSREMARKChanging(string value);
    partial void OnACCESSREMARKChanged();
    partial void OnLOCATEPERSONEMAILChanging(string value);
    partial void OnLOCATEPERSONEMAILChanged();
    partial void OnPRESERVATIONZONEChanging(System.Nullable<int> value);
    partial void OnPRESERVATIONZONEChanged();
    partial void OnPROTECTIONZONEChanging(System.Nullable<int> value);
    partial void OnPROTECTIONZONEChanged();
    partial void OnREGIONChanging(System.Nullable<int> value);
    partial void OnREGIONChanged();
    partial void OnUSECHANGECAUSEChanging(System.Nullable<int> value);
    partial void OnUSECHANGECAUSEChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public BOREHOLE()
		{
			this._CASINGs = new EntitySet<CASING>(new Action<CASING>(this.attach_CASINGs), new Action<CASING>(this.detach_CASINGs));
			this._GRWCHEMSAMPLEs = new EntitySet<GRWCHEMSAMPLE>(new Action<GRWCHEMSAMPLE>(this.attach_GRWCHEMSAMPLEs), new Action<GRWCHEMSAMPLE>(this.detach_GRWCHEMSAMPLEs));
			OnCreated();
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					this.OnBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._BOREHOLENO = value;
					this.SendPropertyChanged("BOREHOLENO");
					this.OnBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_NAMINGSYS", DbType="VarChar(10)")]
		public string NAMINGSYS
		{
			get
			{
				return this._NAMINGSYS;
			}
			set
			{
				if ((this._NAMINGSYS != value))
				{
					this.OnNAMINGSYSChanging(value);
					this.SendPropertyChanging();
					this._NAMINGSYS = value;
					this.SendPropertyChanged("NAMINGSYS");
					this.OnNAMINGSYSChanged();
				}
			}
		}
		
		[Column(Storage="_PURPOSE", DbType="VarChar(2)")]
		public string PURPOSE
		{
			get
			{
				return this._PURPOSE;
			}
			set
			{
				if ((this._PURPOSE != value))
				{
					this.OnPURPOSEChanging(value);
					this.SendPropertyChanging();
					this._PURPOSE = value;
					this.SendPropertyChanged("PURPOSE");
					this.OnPURPOSEChanged();
				}
			}
		}
		
		[Column(Name="[USE]", Storage="_USE", DbType="VarChar(2)")]
		public string USE
		{
			get
			{
				return this._USE;
			}
			set
			{
				if ((this._USE != value))
				{
					this.OnUSEChanging(value);
					this.SendPropertyChanging();
					this._USE = value;
					this.SendPropertyChanged("USE");
					this.OnUSEChanged();
				}
			}
		}
		
		[Column(Storage="_STATUS", DbType="VarChar(2)")]
		public string STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLDEPTH", DbType="Float")]
		public System.Nullable<double> DRILLDEPTH
		{
			get
			{
				return this._DRILLDEPTH;
			}
			set
			{
				if ((this._DRILLDEPTH != value))
				{
					this.OnDRILLDEPTHChanging(value);
					this.SendPropertyChanging();
					this._DRILLDEPTH = value;
					this.SendPropertyChanged("DRILLDEPTH");
					this.OnDRILLDEPTHChanged();
				}
			}
		}
		
		[Column(Storage="_ELEVATION", DbType="Float")]
		public System.Nullable<double> ELEVATION
		{
			get
			{
				return this._ELEVATION;
			}
			set
			{
				if ((this._ELEVATION != value))
				{
					this.OnELEVATIONChanging(value);
					this.SendPropertyChanging();
					this._ELEVATION = value;
					this.SendPropertyChanged("ELEVATION");
					this.OnELEVATIONChanged();
				}
			}
		}
		
		[Column(Storage="_CTRPELEVA", DbType="Float")]
		public System.Nullable<double> CTRPELEVA
		{
			get
			{
				return this._CTRPELEVA;
			}
			set
			{
				if ((this._CTRPELEVA != value))
				{
					this.OnCTRPELEVAChanging(value);
					this.SendPropertyChanging();
					this._CTRPELEVA = value;
					this.SendPropertyChanged("CTRPELEVA");
					this.OnCTRPELEVAChanged();
				}
			}
		}
		
		[Column(Storage="_VERTICAREF", DbType="VarChar(5)")]
		public string VERTICAREF
		{
			get
			{
				return this._VERTICAREF;
			}
			set
			{
				if ((this._VERTICAREF != value))
				{
					this.OnVERTICAREFChanging(value);
					this.SendPropertyChanging();
					this._VERTICAREF = value;
					this.SendPropertyChanged("VERTICAREF");
					this.OnVERTICAREFChanged();
				}
			}
		}
		
		[Column(Storage="_CTRPDESCR", DbType="VarChar(2)")]
		public string CTRPDESCR
		{
			get
			{
				return this._CTRPDESCR;
			}
			set
			{
				if ((this._CTRPDESCR != value))
				{
					this.OnCTRPDESCRChanging(value);
					this.SendPropertyChanging();
					this._CTRPDESCR = value;
					this.SendPropertyChanged("CTRPDESCR");
					this.OnCTRPDESCRChanged();
				}
			}
		}
		
		[Column(Storage="_CTRPPRECIS", DbType="Real")]
		public System.Nullable<float> CTRPPRECIS
		{
			get
			{
				return this._CTRPPRECIS;
			}
			set
			{
				if ((this._CTRPPRECIS != value))
				{
					this.OnCTRPPRECISChanging(value);
					this.SendPropertyChanging();
					this._CTRPPRECIS = value;
					this.SendPropertyChanged("CTRPPRECIS");
					this.OnCTRPPRECISChanged();
				}
			}
		}
		
		[Column(Storage="_CTRPZPRECIS", DbType="Real")]
		public System.Nullable<float> CTRPZPRECIS
		{
			get
			{
				return this._CTRPZPRECIS;
			}
			set
			{
				if ((this._CTRPZPRECIS != value))
				{
					this.OnCTRPZPRECISChanging(value);
					this.SendPropertyChanging();
					this._CTRPZPRECIS = value;
					this.SendPropertyChanged("CTRPZPRECIS");
					this.OnCTRPZPRECISChanged();
				}
			}
		}
		
		[Column(Storage="_CTRPHEIGHT", DbType="Real")]
		public System.Nullable<float> CTRPHEIGHT
		{
			get
			{
				return this._CTRPHEIGHT;
			}
			set
			{
				if ((this._CTRPHEIGHT != value))
				{
					this.OnCTRPHEIGHTChanging(value);
					this.SendPropertyChanging();
					this._CTRPHEIGHT = value;
					this.SendPropertyChanged("CTRPHEIGHT");
					this.OnCTRPHEIGHTChanged();
				}
			}
		}
		
		[Column(Storage="_ELEVAMETHO", DbType="VarChar(2)")]
		public string ELEVAMETHO
		{
			get
			{
				return this._ELEVAMETHO;
			}
			set
			{
				if ((this._ELEVAMETHO != value))
				{
					this.OnELEVAMETHOChanging(value);
					this.SendPropertyChanging();
					this._ELEVAMETHO = value;
					this.SendPropertyChanged("ELEVAMETHO");
					this.OnELEVAMETHOChanged();
				}
			}
		}
		
		[Column(Storage="_ELEVAQUALI", DbType="VarChar(2)")]
		public string ELEVAQUALI
		{
			get
			{
				return this._ELEVAQUALI;
			}
			set
			{
				if ((this._ELEVAQUALI != value))
				{
					this.OnELEVAQUALIChanging(value);
					this.SendPropertyChanging();
					this._ELEVAQUALI = value;
					this.SendPropertyChanged("ELEVAQUALI");
					this.OnELEVAQUALIChanged();
				}
			}
		}
		
		[Column(Storage="_ELEVASOURC", DbType="VarChar(1)")]
		public System.Nullable<char> ELEVASOURC
		{
			get
			{
				return this._ELEVASOURC;
			}
			set
			{
				if ((this._ELEVASOURC != value))
				{
					this.OnELEVASOURCChanging(value);
					this.SendPropertyChanging();
					this._ELEVASOURC = value;
					this.SendPropertyChanged("ELEVASOURC");
					this.OnELEVASOURCChanged();
				}
			}
		}
		
		[Column(Storage="_LOCATION", DbType="VarChar(128)")]
		public string LOCATION
		{
			get
			{
				return this._LOCATION;
			}
			set
			{
				if ((this._LOCATION != value))
				{
					this.OnLOCATIONChanging(value);
					this.SendPropertyChanging();
					this._LOCATION = value;
					this.SendPropertyChanged("LOCATION");
					this.OnLOCATIONChanged();
				}
			}
		}
		
		[Column(Storage="_COMMENTS", DbType="VarChar(60)")]
		public string COMMENTS
		{
			get
			{
				return this._COMMENTS;
			}
			set
			{
				if ((this._COMMENTS != value))
				{
					this.OnCOMMENTSChanging(value);
					this.SendPropertyChanging();
					this._COMMENTS = value;
					this.SendPropertyChanged("COMMENTS");
					this.OnCOMMENTSChanged();
				}
			}
		}
		
		[Column(Storage="_VARIOUS", DbType="VarChar(20)")]
		public string VARIOUS
		{
			get
			{
				return this._VARIOUS;
			}
			set
			{
				if ((this._VARIOUS != value))
				{
					this.OnVARIOUSChanging(value);
					this.SendPropertyChanging();
					this._VARIOUS = value;
					this.SendPropertyChanged("VARIOUS");
					this.OnVARIOUSChanged();
				}
			}
		}
		
		[Column(Storage="_XUTM", DbType="Float")]
		public System.Nullable<double> XUTM
		{
			get
			{
				return this._XUTM;
			}
			set
			{
				if ((this._XUTM != value))
				{
					this.OnXUTMChanging(value);
					this.SendPropertyChanging();
					this._XUTM = value;
					this.SendPropertyChanged("XUTM");
					this.OnXUTMChanged();
				}
			}
		}
		
		[Column(Storage="_YUTM", DbType="Float")]
		public System.Nullable<double> YUTM
		{
			get
			{
				return this._YUTM;
			}
			set
			{
				if ((this._YUTM != value))
				{
					this.OnYUTMChanging(value);
					this.SendPropertyChanging();
					this._YUTM = value;
					this.SendPropertyChanged("YUTM");
					this.OnYUTMChanged();
				}
			}
		}
		
		[Column(Storage="_UTMZONE", DbType="Int")]
		public System.Nullable<int> UTMZONE
		{
			get
			{
				return this._UTMZONE;
			}
			set
			{
				if ((this._UTMZONE != value))
				{
					this.OnUTMZONEChanging(value);
					this.SendPropertyChanging();
					this._UTMZONE = value;
					this.SendPropertyChanged("UTMZONE");
					this.OnUTMZONEChanged();
				}
			}
		}
		
		[Column(Storage="_DATUM", DbType="VarChar(7)")]
		public string DATUM
		{
			get
			{
				return this._DATUM;
			}
			set
			{
				if ((this._DATUM != value))
				{
					this.OnDATUMChanging(value);
					this.SendPropertyChanging();
					this._DATUM = value;
					this.SendPropertyChanged("DATUM");
					this.OnDATUMChanged();
				}
			}
		}
		
		[Column(Storage="_MAPSHEET", DbType="VarChar(9)")]
		public string MAPSHEET
		{
			get
			{
				return this._MAPSHEET;
			}
			set
			{
				if ((this._MAPSHEET != value))
				{
					this.OnMAPSHEETChanging(value);
					this.SendPropertyChanging();
					this._MAPSHEET = value;
					this.SendPropertyChanged("MAPSHEET");
					this.OnMAPSHEETChanged();
				}
			}
		}
		
		[Column(Storage="_MAPDISTX", DbType="Float")]
		public System.Nullable<double> MAPDISTX
		{
			get
			{
				return this._MAPDISTX;
			}
			set
			{
				if ((this._MAPDISTX != value))
				{
					this.OnMAPDISTXChanging(value);
					this.SendPropertyChanging();
					this._MAPDISTX = value;
					this.SendPropertyChanged("MAPDISTX");
					this.OnMAPDISTXChanged();
				}
			}
		}
		
		[Column(Storage="_MAPDISTY", DbType="Float")]
		public System.Nullable<double> MAPDISTY
		{
			get
			{
				return this._MAPDISTY;
			}
			set
			{
				if ((this._MAPDISTY != value))
				{
					this.OnMAPDISTYChanging(value);
					this.SendPropertyChanging();
					this._MAPDISTY = value;
					this.SendPropertyChanged("MAPDISTY");
					this.OnMAPDISTYChanged();
				}
			}
		}
		
		[Column(Storage="_SYS34X", DbType="Float")]
		public System.Nullable<double> SYS34X
		{
			get
			{
				return this._SYS34X;
			}
			set
			{
				if ((this._SYS34X != value))
				{
					this.OnSYS34XChanging(value);
					this.SendPropertyChanging();
					this._SYS34X = value;
					this.SendPropertyChanged("SYS34X");
					this.OnSYS34XChanged();
				}
			}
		}
		
		[Column(Storage="_SYS34Y", DbType="Float")]
		public System.Nullable<double> SYS34Y
		{
			get
			{
				return this._SYS34Y;
			}
			set
			{
				if ((this._SYS34Y != value))
				{
					this.OnSYS34YChanging(value);
					this.SendPropertyChanging();
					this._SYS34Y = value;
					this.SendPropertyChanged("SYS34Y");
					this.OnSYS34YChanged();
				}
			}
		}
		
		[Column(Storage="_SYS34ZONE", DbType="Int")]
		public System.Nullable<int> SYS34ZONE
		{
			get
			{
				return this._SYS34ZONE;
			}
			set
			{
				if ((this._SYS34ZONE != value))
				{
					this.OnSYS34ZONEChanging(value);
					this.SendPropertyChanging();
					this._SYS34ZONE = value;
					this.SendPropertyChanged("SYS34ZONE");
					this.OnSYS34ZONEChanged();
				}
			}
		}
		
		[Column(Storage="_LATITUDE", DbType="Float")]
		public System.Nullable<double> LATITUDE
		{
			get
			{
				return this._LATITUDE;
			}
			set
			{
				if ((this._LATITUDE != value))
				{
					this.OnLATITUDEChanging(value);
					this.SendPropertyChanging();
					this._LATITUDE = value;
					this.SendPropertyChanged("LATITUDE");
					this.OnLATITUDEChanged();
				}
			}
		}
		
		[Column(Storage="_LONGITUDE", DbType="Float")]
		public System.Nullable<double> LONGITUDE
		{
			get
			{
				return this._LONGITUDE;
			}
			set
			{
				if ((this._LONGITUDE != value))
				{
					this.OnLONGITUDEChanging(value);
					this.SendPropertyChanging();
					this._LONGITUDE = value;
					this.SendPropertyChanged("LONGITUDE");
					this.OnLONGITUDEChanged();
				}
			}
		}
		
		[Column(Storage="_LOCATMETHO", DbType="VarChar(3)")]
		public string LOCATMETHO
		{
			get
			{
				return this._LOCATMETHO;
			}
			set
			{
				if ((this._LOCATMETHO != value))
				{
					this.OnLOCATMETHOChanging(value);
					this.SendPropertyChanging();
					this._LOCATMETHO = value;
					this.SendPropertyChanged("LOCATMETHO");
					this.OnLOCATMETHOChanged();
				}
			}
		}
		
		[Column(Storage="_LOCATQUALI", DbType="VarChar(2)")]
		public string LOCATQUALI
		{
			get
			{
				return this._LOCATQUALI;
			}
			set
			{
				if ((this._LOCATQUALI != value))
				{
					this.OnLOCATQUALIChanging(value);
					this.SendPropertyChanging();
					this._LOCATQUALI = value;
					this.SendPropertyChanged("LOCATQUALI");
					this.OnLOCATQUALIChanged();
				}
			}
		}
		
		[Column(Storage="_LOCATSOURC", DbType="VarChar(2)")]
		public string LOCATSOURC
		{
			get
			{
				return this._LOCATSOURC;
			}
			set
			{
				if ((this._LOCATSOURC != value))
				{
					this.OnLOCATSOURCChanging(value);
					this.SendPropertyChanging();
					this._LOCATSOURC = value;
					this.SendPropertyChanged("LOCATSOURC");
					this.OnLOCATSOURCChanged();
				}
			}
		}
		
		[Column(Storage="_BORHPOSTC", DbType="Int")]
		public System.Nullable<int> BORHPOSTC
		{
			get
			{
				return this._BORHPOSTC;
			}
			set
			{
				if ((this._BORHPOSTC != value))
				{
					this.OnBORHPOSTCChanging(value);
					this.SendPropertyChanging();
					this._BORHPOSTC = value;
					this.SendPropertyChanged("BORHPOSTC");
					this.OnBORHPOSTCChanged();
				}
			}
		}
		
		[Column(Storage="_BORHTOWNNO", DbType="Int")]
		public System.Nullable<int> BORHTOWNNO
		{
			get
			{
				return this._BORHTOWNNO;
			}
			set
			{
				if ((this._BORHTOWNNO != value))
				{
					this.OnBORHTOWNNOChanging(value);
					this.SendPropertyChanging();
					this._BORHTOWNNO = value;
					this.SendPropertyChanged("BORHTOWNNO");
					this.OnBORHTOWNNOChanged();
				}
			}
		}
		
		[Column(Storage="_COUNTYNO", DbType="Int")]
		public System.Nullable<int> COUNTYNO
		{
			get
			{
				return this._COUNTYNO;
			}
			set
			{
				if ((this._COUNTYNO != value))
				{
					this.OnCOUNTYNOChanging(value);
					this.SendPropertyChanging();
					this._COUNTYNO = value;
					this.SendPropertyChanged("COUNTYNO");
					this.OnCOUNTYNOChanged();
				}
			}
		}
		
		[Column(Storage="_MUNICIPAL", DbType="VarChar(25)")]
		public string MUNICIPAL
		{
			get
			{
				return this._MUNICIPAL;
			}
			set
			{
				if ((this._MUNICIPAL != value))
				{
					this.OnMUNICIPALChanging(value);
					this.SendPropertyChanging();
					this._MUNICIPAL = value;
					this.SendPropertyChanged("MUNICIPAL");
					this.OnMUNICIPALChanged();
				}
			}
		}
		
		[Column(Storage="_HOUSEOWNAS", DbType="Int")]
		public System.Nullable<int> HOUSEOWNAS
		{
			get
			{
				return this._HOUSEOWNAS;
			}
			set
			{
				if ((this._HOUSEOWNAS != value))
				{
					this.OnHOUSEOWNASChanging(value);
					this.SendPropertyChanging();
					this._HOUSEOWNAS = value;
					this.SendPropertyChanged("HOUSEOWNAS");
					this.OnHOUSEOWNASChanged();
				}
			}
		}
		
		[Column(Storage="_LANDREGNO", DbType="VarChar(10)")]
		public string LANDREGNO
		{
			get
			{
				return this._LANDREGNO;
			}
			set
			{
				if ((this._LANDREGNO != value))
				{
					this.OnLANDREGNOChanging(value);
					this.SendPropertyChanging();
					this._LANDREGNO = value;
					this.SendPropertyChanged("LANDREGNO");
					this.OnLANDREGNOChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLER", DbType="VarChar(18)")]
		public string DRILLER
		{
			get
			{
				return this._DRILLER;
			}
			set
			{
				if ((this._DRILLER != value))
				{
					this.OnDRILLERChanging(value);
					this.SendPropertyChanging();
					this._DRILLER = value;
					this.SendPropertyChanged("DRILLER");
					this.OnDRILLERChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLLOGNO", DbType="VarChar(20)")]
		public string DRILLLOGNO
		{
			get
			{
				return this._DRILLLOGNO;
			}
			set
			{
				if ((this._DRILLLOGNO != value))
				{
					this.OnDRILLLOGNOChanging(value);
					this.SendPropertyChanging();
					this._DRILLLOGNO = value;
					this.SendPropertyChanged("DRILLLOGNO");
					this.OnDRILLLOGNOChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLBORNO", DbType="VarChar(20)")]
		public string DRILLBORNO
		{
			get
			{
				return this._DRILLBORNO;
			}
			set
			{
				if ((this._DRILLBORNO != value))
				{
					this.OnDRILLBORNOChanging(value);
					this.SendPropertyChanging();
					this._DRILLBORNO = value;
					this.SendPropertyChanged("DRILLBORNO");
					this.OnDRILLBORNOChanged();
				}
			}
		}
		
		[Column(Storage="_REPORTEDBY", DbType="VarChar(1)")]
		public System.Nullable<char> REPORTEDBY
		{
			get
			{
				return this._REPORTEDBY;
			}
			set
			{
				if ((this._REPORTEDBY != value))
				{
					this.OnREPORTEDBYChanging(value);
					this.SendPropertyChanging();
					this._REPORTEDBY = value;
					this.SendPropertyChanged("REPORTEDBY");
					this.OnREPORTEDBYChanged();
				}
			}
		}
		
		[Column(Storage="_CONSULTANT", DbType="VarChar(20)")]
		public string CONSULTANT
		{
			get
			{
				return this._CONSULTANT;
			}
			set
			{
				if ((this._CONSULTANT != value))
				{
					this.OnCONSULTANTChanging(value);
					this.SendPropertyChanging();
					this._CONSULTANT = value;
					this.SendPropertyChanged("CONSULTANT");
					this.OnCONSULTANTChanged();
				}
			}
		}
		
		[Column(Storage="_CONSULOGNO", DbType="VarChar(20)")]
		public string CONSULOGNO
		{
			get
			{
				return this._CONSULOGNO;
			}
			set
			{
				if ((this._CONSULOGNO != value))
				{
					this.OnCONSULOGNOChanging(value);
					this.SendPropertyChanging();
					this._CONSULOGNO = value;
					this.SendPropertyChanged("CONSULOGNO");
					this.OnCONSULOGNOChanged();
				}
			}
		}
		
		[Column(Storage="_CONSUBORNO", DbType="VarChar(20)")]
		public string CONSUBORNO
		{
			get
			{
				return this._CONSUBORNO;
			}
			set
			{
				if ((this._CONSUBORNO != value))
				{
					this.OnCONSUBORNOChanging(value);
					this.SendPropertyChanging();
					this._CONSUBORNO = value;
					this.SendPropertyChanged("CONSUBORNO");
					this.OnCONSUBORNOChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLEDFOR", DbType="VarChar(50)")]
		public string DRILLEDFOR
		{
			get
			{
				return this._DRILLEDFOR;
			}
			set
			{
				if ((this._DRILLEDFOR != value))
				{
					this.OnDRILLEDFORChanging(value);
					this.SendPropertyChanging();
					this._DRILLEDFOR = value;
					this.SendPropertyChanged("DRILLEDFOR");
					this.OnDRILLEDFORChanged();
				}
			}
		}
		
		[Column(Storage="_DRFORADRES", DbType="VarChar(50)")]
		public string DRFORADRES
		{
			get
			{
				return this._DRFORADRES;
			}
			set
			{
				if ((this._DRFORADRES != value))
				{
					this.OnDRFORADRESChanging(value);
					this.SendPropertyChanging();
					this._DRFORADRES = value;
					this.SendPropertyChanged("DRFORADRES");
					this.OnDRFORADRESChanged();
				}
			}
		}
		
		[Column(Storage="_DRFORPOSTC", DbType="Int")]
		public System.Nullable<int> DRFORPOSTC
		{
			get
			{
				return this._DRFORPOSTC;
			}
			set
			{
				if ((this._DRFORPOSTC != value))
				{
					this.OnDRFORPOSTCChanging(value);
					this.SendPropertyChanging();
					this._DRFORPOSTC = value;
					this.SendPropertyChanged("DRFORPOSTC");
					this.OnDRFORPOSTCChanged();
				}
			}
		}
		
		[Column(Storage="_DRILSTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DRILSTDATE
		{
			get
			{
				return this._DRILSTDATE;
			}
			set
			{
				if ((this._DRILSTDATE != value))
				{
					this.OnDRILSTDATEChanging(value);
					this.SendPropertyChanging();
					this._DRILSTDATE = value;
					this.SendPropertyChanged("DRILSTDATE");
					this.OnDRILSTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_DRILENDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DRILENDATE
		{
			get
			{
				return this._DRILENDATE;
			}
			set
			{
				if ((this._DRILENDATE != value))
				{
					this.OnDRILENDATEChanging(value);
					this.SendPropertyChanging();
					this._DRILENDATE = value;
					this.SendPropertyChanged("DRILENDATE");
					this.OnDRILENDATEChanged();
				}
			}
		}
		
		[Column(Storage="_ABANDONDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> ABANDONDAT
		{
			get
			{
				return this._ABANDONDAT;
			}
			set
			{
				if ((this._ABANDONDAT != value))
				{
					this.OnABANDONDATChanging(value);
					this.SendPropertyChanging();
					this._ABANDONDAT = value;
					this.SendPropertyChanged("ABANDONDAT");
					this.OnABANDONDATChanged();
				}
			}
		}
		
		[Column(Storage="_PREVBORHNO", DbType="VarChar(10)")]
		public string PREVBORHNO
		{
			get
			{
				return this._PREVBORHNO;
			}
			set
			{
				if ((this._PREVBORHNO != value))
				{
					this.OnPREVBORHNOChanging(value);
					this.SendPropertyChanging();
					this._PREVBORHNO = value;
					this.SendPropertyChanged("PREVBORHNO");
					this.OnPREVBORHNOChanged();
				}
			}
		}
		
		[Column(Storage="_NUMSUPLBOR", DbType="Int")]
		public System.Nullable<int> NUMSUPLBOR
		{
			get
			{
				return this._NUMSUPLBOR;
			}
			set
			{
				if ((this._NUMSUPLBOR != value))
				{
					this.OnNUMSUPLBORChanging(value);
					this.SendPropertyChanging();
					this._NUMSUPLBOR = value;
					this.SendPropertyChanged("NUMSUPLBOR");
					this.OnNUMSUPLBORChanged();
				}
			}
		}
		
		[Column(Storage="_SAMRECEDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> SAMRECEDAT
		{
			get
			{
				return this._SAMRECEDAT;
			}
			set
			{
				if ((this._SAMRECEDAT != value))
				{
					this.OnSAMRECEDATChanging(value);
					this.SendPropertyChanging();
					this._SAMRECEDAT = value;
					this.SendPropertyChanged("SAMRECEDAT");
					this.OnSAMRECEDATChanged();
				}
			}
		}
		
		[Column(Storage="_SAMDESCDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> SAMDESCDAT
		{
			get
			{
				return this._SAMDESCDAT;
			}
			set
			{
				if ((this._SAMDESCDAT != value))
				{
					this.OnSAMDESCDATChanging(value);
					this.SendPropertyChanging();
					this._SAMDESCDAT = value;
					this.SendPropertyChanged("SAMDESCDAT");
					this.OnSAMDESCDATChanged();
				}
			}
		}
		
		[Column(Storage="_NUMOFSAMPL", DbType="Int")]
		public System.Nullable<int> NUMOFSAMPL
		{
			get
			{
				return this._NUMOFSAMPL;
			}
			set
			{
				if ((this._NUMOFSAMPL != value))
				{
					this.OnNUMOFSAMPLChanging(value);
					this.SendPropertyChanging();
					this._NUMOFSAMPL = value;
					this.SendPropertyChanged("NUMOFSAMPL");
					this.OnNUMOFSAMPLChanged();
				}
			}
		}
		
		[Column(Storage="_NUMSAMSTO", DbType="Int")]
		public System.Nullable<int> NUMSAMSTO
		{
			get
			{
				return this._NUMSAMSTO;
			}
			set
			{
				if ((this._NUMSAMSTO != value))
				{
					this.OnNUMSAMSTOChanging(value);
					this.SendPropertyChanging();
					this._NUMSAMSTO = value;
					this.SendPropertyChanged("NUMSAMSTO");
					this.OnNUMSAMSTOChanged();
				}
			}
		}
		
		[Column(Storage="_LITHOLNOTE", DbType="VarChar(255)")]
		public string LITHOLNOTE
		{
			get
			{
				return this._LITHOLNOTE;
			}
			set
			{
				if ((this._LITHOLNOTE != value))
				{
					this.OnLITHOLNOTEChanging(value);
					this.SendPropertyChanging();
					this._LITHOLNOTE = value;
					this.SendPropertyChanged("LITHOLNOTE");
					this.OnLITHOLNOTEChanged();
				}
			}
		}
		
		[Column(Storage="_TOGEUSDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> TOGEUSDATE
		{
			get
			{
				return this._TOGEUSDATE;
			}
			set
			{
				if ((this._TOGEUSDATE != value))
				{
					this.OnTOGEUSDATEChanging(value);
					this.SendPropertyChanging();
					this._TOGEUSDATE = value;
					this.SendPropertyChanged("TOGEUSDATE");
					this.OnTOGEUSDATEChanged();
				}
			}
		}
		
		[Column(Storage="_GRUMOCOUNTYNO", DbType="Int")]
		public System.Nullable<int> GRUMOCOUNTYNO
		{
			get
			{
				return this._GRUMOCOUNTYNO;
			}
			set
			{
				if ((this._GRUMOCOUNTYNO != value))
				{
					this.OnGRUMOCOUNTYNOChanging(value);
					this.SendPropertyChanging();
					this._GRUMOCOUNTYNO = value;
					this.SendPropertyChanged("GRUMOCOUNTYNO");
					this.OnGRUMOCOUNTYNOChanged();
				}
			}
		}
		
		[Column(Storage="_GRUMOBORNO", DbType="Int")]
		public System.Nullable<int> GRUMOBORNO
		{
			get
			{
				return this._GRUMOBORNO;
			}
			set
			{
				if ((this._GRUMOBORNO != value))
				{
					this.OnGRUMOBORNOChanging(value);
					this.SendPropertyChanging();
					this._GRUMOBORNO = value;
					this.SendPropertyChanged("GRUMOBORNO");
					this.OnGRUMOBORNOChanged();
				}
			}
		}
		
		[Column(Storage="_GRUMOBORTYPE", DbType="Int")]
		public System.Nullable<int> GRUMOBORTYPE
		{
			get
			{
				return this._GRUMOBORTYPE;
			}
			set
			{
				if ((this._GRUMOBORTYPE != value))
				{
					this.OnGRUMOBORTYPEChanging(value);
					this.SendPropertyChanging();
					this._GRUMOBORTYPE = value;
					this.SendPropertyChanged("GRUMOBORTYPE");
					this.OnGRUMOBORTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_GRUMOAREANO", DbType="Int")]
		public System.Nullable<int> GRUMOAREANO
		{
			get
			{
				return this._GRUMOAREANO;
			}
			set
			{
				if ((this._GRUMOAREANO != value))
				{
					this.OnGRUMOAREANOChanging(value);
					this.SendPropertyChanging();
					this._GRUMOAREANO = value;
					this.SendPropertyChanged("GRUMOAREANO");
					this.OnGRUMOAREANOChanged();
				}
			}
		}
		
		[Column(Storage="_BORHTOWNNO2007", DbType="Int")]
		public System.Nullable<int> BORHTOWNNO2007
		{
			get
			{
				return this._BORHTOWNNO2007;
			}
			set
			{
				if ((this._BORHTOWNNO2007 != value))
				{
					this.OnBORHTOWNNO2007Changing(value);
					this.SendPropertyChanging();
					this._BORHTOWNNO2007 = value;
					this.SendPropertyChanged("BORHTOWNNO2007");
					this.OnBORHTOWNNO2007Changed();
				}
			}
		}
		
		[Column(Storage="_LOCQUALI", DbType="VarChar(2)")]
		public string LOCQUALI
		{
			get
			{
				return this._LOCQUALI;
			}
			set
			{
				if ((this._LOCQUALI != value))
				{
					this.OnLOCQUALIChanging(value);
					this.SendPropertyChanging();
					this._LOCQUALI = value;
					this.SendPropertyChanged("LOCQUALI");
					this.OnLOCQUALIChanged();
				}
			}
		}
		
		[Column(Storage="_LOOPAREANO", DbType="Int")]
		public System.Nullable<int> LOOPAREANO
		{
			get
			{
				return this._LOOPAREANO;
			}
			set
			{
				if ((this._LOOPAREANO != value))
				{
					this.OnLOOPAREANOChanging(value);
					this.SendPropertyChanging();
					this._LOOPAREANO = value;
					this.SendPropertyChanged("LOOPAREANO");
					this.OnLOOPAREANOChanged();
				}
			}
		}
		
		[Column(Storage="_LOOPSTATION", DbType="Int")]
		public System.Nullable<int> LOOPSTATION
		{
			get
			{
				return this._LOOPSTATION;
			}
			set
			{
				if ((this._LOOPSTATION != value))
				{
					this.OnLOOPSTATIONChanging(value);
					this.SendPropertyChanging();
					this._LOOPSTATION = value;
					this.SendPropertyChanged("LOOPSTATION");
					this.OnLOOPSTATIONChanged();
				}
			}
		}
		
		[Column(Storage="_LOOPTYPE", DbType="Int")]
		public System.Nullable<int> LOOPTYPE
		{
			get
			{
				return this._LOOPTYPE;
			}
			set
			{
				if ((this._LOOPTYPE != value))
				{
					this.OnLOOPTYPEChanging(value);
					this.SendPropertyChanging();
					this._LOOPTYPE = value;
					this.SendPropertyChanged("LOOPTYPE");
					this.OnLOOPTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_USECHANGEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> USECHANGEDATE
		{
			get
			{
				return this._USECHANGEDATE;
			}
			set
			{
				if ((this._USECHANGEDATE != value))
				{
					this.OnUSECHANGEDATEChanging(value);
					this.SendPropertyChanging();
					this._USECHANGEDATE = value;
					this.SendPropertyChanged("USECHANGEDATE");
					this.OnUSECHANGEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_ENVCEN", DbType="Int")]
		public System.Nullable<int> ENVCEN
		{
			get
			{
				return this._ENVCEN;
			}
			set
			{
				if ((this._ENVCEN != value))
				{
					this.OnENVCENChanging(value);
					this.SendPropertyChanging();
					this._ENVCEN = value;
					this.SendPropertyChanged("ENVCEN");
					this.OnENVCENChanged();
				}
			}
		}
		
		[Column(Storage="_ABANDCAUSE", DbType="VarChar(1)")]
		public System.Nullable<char> ABANDCAUSE
		{
			get
			{
				return this._ABANDCAUSE;
			}
			set
			{
				if ((this._ABANDCAUSE != value))
				{
					this.OnABANDCAUSEChanging(value);
					this.SendPropertyChanging();
					this._ABANDCAUSE = value;
					this.SendPropertyChanged("ABANDCAUSE");
					this.OnABANDCAUSEChanged();
				}
			}
		}
		
		[Column(Storage="_ABANDCONTR", DbType="VarChar(18)")]
		public string ABANDCONTR
		{
			get
			{
				return this._ABANDCONTR;
			}
			set
			{
				if ((this._ABANDCONTR != value))
				{
					this.OnABANDCONTRChanging(value);
					this.SendPropertyChanging();
					this._ABANDCONTR = value;
					this.SendPropertyChanged("ABANDCONTR");
					this.OnABANDCONTRChanged();
				}
			}
		}
		
		[Column(Storage="_STARTDAYUNKNOWN", DbType="VarChar(4)")]
		public string STARTDAYUNKNOWN
		{
			get
			{
				return this._STARTDAYUNKNOWN;
			}
			set
			{
				if ((this._STARTDAYUNKNOWN != value))
				{
					this.OnSTARTDAYUNKNOWNChanging(value);
					this.SendPropertyChanging();
					this._STARTDAYUNKNOWN = value;
					this.SendPropertyChanged("STARTDAYUNKNOWN");
					this.OnSTARTDAYUNKNOWNChanged();
				}
			}
		}
		
		[Column(Storage="_STARTMNTHUNKNWN", DbType="VarChar(4)")]
		public string STARTMNTHUNKNWN
		{
			get
			{
				return this._STARTMNTHUNKNWN;
			}
			set
			{
				if ((this._STARTMNTHUNKNWN != value))
				{
					this.OnSTARTMNTHUNKNWNChanging(value);
					this.SendPropertyChanging();
					this._STARTMNTHUNKNWN = value;
					this.SendPropertyChanged("STARTMNTHUNKNWN");
					this.OnSTARTMNTHUNKNWNChanged();
				}
			}
		}
		
		[Column(Storage="_WWBOREHOLENO", DbType="VarChar(20)")]
		public string WWBOREHOLENO
		{
			get
			{
				return this._WWBOREHOLENO;
			}
			set
			{
				if ((this._WWBOREHOLENO != value))
				{
					this.OnWWBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._WWBOREHOLENO = value;
					this.SendPropertyChanged("WWBOREHOLENO");
					this.OnWWBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_XUTM32EUREF89", DbType="Float")]
		public System.Nullable<double> XUTM32EUREF89
		{
			get
			{
				return this._XUTM32EUREF89;
			}
			set
			{
				if ((this._XUTM32EUREF89 != value))
				{
					this.OnXUTM32EUREF89Changing(value);
					this.SendPropertyChanging();
					this._XUTM32EUREF89 = value;
					this.SendPropertyChanged("XUTM32EUREF89");
					this.OnXUTM32EUREF89Changed();
				}
			}
		}
		
		[Column(Storage="_YUTM32EUREF89", DbType="Float")]
		public System.Nullable<double> YUTM32EUREF89
		{
			get
			{
				return this._YUTM32EUREF89;
			}
			set
			{
				if ((this._YUTM32EUREF89 != value))
				{
					this.OnYUTM32EUREF89Changing(value);
					this.SendPropertyChanging();
					this._YUTM32EUREF89 = value;
					this.SendPropertyChanged("YUTM32EUREF89");
					this.OnYUTM32EUREF89Changed();
				}
			}
		}
		
		[Column(Storage="_ZDVR90", DbType="Float")]
		public System.Nullable<double> ZDVR90
		{
			get
			{
				return this._ZDVR90;
			}
			set
			{
				if ((this._ZDVR90 != value))
				{
					this.OnZDVR90Changing(value);
					this.SendPropertyChanging();
					this._ZDVR90 = value;
					this.SendPropertyChanged("ZDVR90");
					this.OnZDVR90Changed();
				}
			}
		}
		
		[Column(Storage="_INSTALLATION", DbType="VarChar(2)")]
		public string INSTALLATION
		{
			get
			{
				return this._INSTALLATION;
			}
			set
			{
				if ((this._INSTALLATION != value))
				{
					this.OnINSTALLATIONChanging(value);
					this.SendPropertyChanging();
					this._INSTALLATION = value;
					this.SendPropertyChanged("INSTALLATION");
					this.OnINSTALLATIONChanged();
				}
			}
		}
		
		[Column(Storage="_WORKINGCONDITIONS", DbType="VarChar(2)")]
		public string WORKINGCONDITIONS
		{
			get
			{
				return this._WORKINGCONDITIONS;
			}
			set
			{
				if ((this._WORKINGCONDITIONS != value))
				{
					this.OnWORKINGCONDITIONSChanging(value);
					this.SendPropertyChanging();
					this._WORKINGCONDITIONS = value;
					this.SendPropertyChanged("WORKINGCONDITIONS");
					this.OnWORKINGCONDITIONSChanged();
				}
			}
		}
		
		[Column(Storage="_APPROACH", DbType="VarChar(2)")]
		public string APPROACH
		{
			get
			{
				return this._APPROACH;
			}
			set
			{
				if ((this._APPROACH != value))
				{
					this.OnAPPROACHChanging(value);
					this.SendPropertyChanging();
					this._APPROACH = value;
					this.SendPropertyChanged("APPROACH");
					this.OnAPPROACHChanged();
				}
			}
		}
		
		[Column(Storage="_ACCESSREMARK", DbType="VarChar(255)")]
		public string ACCESSREMARK
		{
			get
			{
				return this._ACCESSREMARK;
			}
			set
			{
				if ((this._ACCESSREMARK != value))
				{
					this.OnACCESSREMARKChanging(value);
					this.SendPropertyChanging();
					this._ACCESSREMARK = value;
					this.SendPropertyChanged("ACCESSREMARK");
					this.OnACCESSREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_LOCATEPERSONEMAIL", DbType="VarChar(64)")]
		public string LOCATEPERSONEMAIL
		{
			get
			{
				return this._LOCATEPERSONEMAIL;
			}
			set
			{
				if ((this._LOCATEPERSONEMAIL != value))
				{
					this.OnLOCATEPERSONEMAILChanging(value);
					this.SendPropertyChanging();
					this._LOCATEPERSONEMAIL = value;
					this.SendPropertyChanged("LOCATEPERSONEMAIL");
					this.OnLOCATEPERSONEMAILChanged();
				}
			}
		}
		
		[Column(Storage="_PRESERVATIONZONE", DbType="Int")]
		public System.Nullable<int> PRESERVATIONZONE
		{
			get
			{
				return this._PRESERVATIONZONE;
			}
			set
			{
				if ((this._PRESERVATIONZONE != value))
				{
					this.OnPRESERVATIONZONEChanging(value);
					this.SendPropertyChanging();
					this._PRESERVATIONZONE = value;
					this.SendPropertyChanged("PRESERVATIONZONE");
					this.OnPRESERVATIONZONEChanged();
				}
			}
		}
		
		[Column(Storage="_PROTECTIONZONE", DbType="Int")]
		public System.Nullable<int> PROTECTIONZONE
		{
			get
			{
				return this._PROTECTIONZONE;
			}
			set
			{
				if ((this._PROTECTIONZONE != value))
				{
					this.OnPROTECTIONZONEChanging(value);
					this.SendPropertyChanging();
					this._PROTECTIONZONE = value;
					this.SendPropertyChanged("PROTECTIONZONE");
					this.OnPROTECTIONZONEChanged();
				}
			}
		}
		
		[Column(Storage="_REGION", DbType="Int")]
		public System.Nullable<int> REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[Column(Storage="_USECHANGECAUSE", DbType="Int")]
		public System.Nullable<int> USECHANGECAUSE
		{
			get
			{
				return this._USECHANGECAUSE;
			}
			set
			{
				if ((this._USECHANGECAUSE != value))
				{
					this.OnUSECHANGECAUSEChanging(value);
					this.SendPropertyChanging();
					this._USECHANGECAUSE = value;
					this.SendPropertyChanged("USECHANGECAUSE");
					this.OnUSECHANGECAUSEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="BOREHOLE_CASING", Storage="_CASINGs", ThisKey="BOREHOLENO", OtherKey="BOREHOLENO")]
		public EntitySet<CASING> CASINGs
		{
			get
			{
				return this._CASINGs;
			}
			set
			{
				this._CASINGs.Assign(value);
			}
		}
		
		[Association(Name="BOREHOLE_GRWCHEMSAMPLE", Storage="_GRWCHEMSAMPLEs", ThisKey="BOREHOLENO", OtherKey="BOREHOLENO")]
		public EntitySet<GRWCHEMSAMPLE> GRWCHEMSAMPLEs
		{
			get
			{
				return this._GRWCHEMSAMPLEs;
			}
			set
			{
				this._GRWCHEMSAMPLEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CASINGs(CASING entity)
		{
			this.SendPropertyChanging();
			entity.BOREHOLE = this;
		}
		
		private void detach_CASINGs(CASING entity)
		{
			this.SendPropertyChanging();
			entity.BOREHOLE = null;
		}
		
		private void attach_GRWCHEMSAMPLEs(GRWCHEMSAMPLE entity)
		{
			this.SendPropertyChanging();
			entity.BOREHOLE = this;
		}
		
		private void detach_GRWCHEMSAMPLEs(GRWCHEMSAMPLE entity)
		{
			this.SendPropertyChanging();
			entity.BOREHOLE = null;
		}
	}
	
	[Table(Name="dbo.CASING")]
	public partial class CASING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BOREHOLENO;
		
		private int _CASINGNO;
		
		private System.Nullable<int> _STRINGNO;
		
		private System.Nullable<double> _TOP;
		
		private System.Nullable<double> _BOTTOM;
		
		private System.Nullable<double> _DIAMETER;
		
		private string _UNIT;
		
		private System.Nullable<int> _DIAMETERMM;
		
		private string _MATERIAL;
		
		private System.Nullable<int> _STRENGTH;
		
		private System.Nullable<char> _FITTING;
		
		private System.Nullable<int> _WALLTHICKN;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntityRef<BOREHOLE> _BOREHOLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBOREHOLENOChanging(string value);
    partial void OnBOREHOLENOChanged();
    partial void OnCASINGNOChanging(int value);
    partial void OnCASINGNOChanged();
    partial void OnSTRINGNOChanging(System.Nullable<int> value);
    partial void OnSTRINGNOChanged();
    partial void OnTOPChanging(System.Nullable<double> value);
    partial void OnTOPChanged();
    partial void OnBOTTOMChanging(System.Nullable<double> value);
    partial void OnBOTTOMChanged();
    partial void OnDIAMETERChanging(System.Nullable<double> value);
    partial void OnDIAMETERChanged();
    partial void OnUNITChanging(string value);
    partial void OnUNITChanged();
    partial void OnDIAMETERMMChanging(System.Nullable<int> value);
    partial void OnDIAMETERMMChanged();
    partial void OnMATERIALChanging(string value);
    partial void OnMATERIALChanged();
    partial void OnSTRENGTHChanging(System.Nullable<int> value);
    partial void OnSTRENGTHChanged();
    partial void OnFITTINGChanging(System.Nullable<char> value);
    partial void OnFITTINGChanged();
    partial void OnWALLTHICKNChanging(System.Nullable<int> value);
    partial void OnWALLTHICKNChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public CASING()
		{
			this._BOREHOLE = default(EntityRef<BOREHOLE>);
			OnCreated();
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					if (this._BOREHOLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._BOREHOLENO = value;
					this.SendPropertyChanged("BOREHOLENO");
					this.OnBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_CASINGNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CASINGNO
		{
			get
			{
				return this._CASINGNO;
			}
			set
			{
				if ((this._CASINGNO != value))
				{
					this.OnCASINGNOChanging(value);
					this.SendPropertyChanging();
					this._CASINGNO = value;
					this.SendPropertyChanged("CASINGNO");
					this.OnCASINGNOChanged();
				}
			}
		}
		
		[Column(Storage="_STRINGNO", DbType="Int")]
		public System.Nullable<int> STRINGNO
		{
			get
			{
				return this._STRINGNO;
			}
			set
			{
				if ((this._STRINGNO != value))
				{
					this.OnSTRINGNOChanging(value);
					this.SendPropertyChanging();
					this._STRINGNO = value;
					this.SendPropertyChanged("STRINGNO");
					this.OnSTRINGNOChanged();
				}
			}
		}
		
		[Column(Name="[TOP]", Storage="_TOP", DbType="Float")]
		public System.Nullable<double> TOP
		{
			get
			{
				return this._TOP;
			}
			set
			{
				if ((this._TOP != value))
				{
					this.OnTOPChanging(value);
					this.SendPropertyChanging();
					this._TOP = value;
					this.SendPropertyChanged("TOP");
					this.OnTOPChanged();
				}
			}
		}
		
		[Column(Storage="_BOTTOM", DbType="Float")]
		public System.Nullable<double> BOTTOM
		{
			get
			{
				return this._BOTTOM;
			}
			set
			{
				if ((this._BOTTOM != value))
				{
					this.OnBOTTOMChanging(value);
					this.SendPropertyChanging();
					this._BOTTOM = value;
					this.SendPropertyChanged("BOTTOM");
					this.OnBOTTOMChanged();
				}
			}
		}
		
		[Column(Storage="_DIAMETER", DbType="Float")]
		public System.Nullable<double> DIAMETER
		{
			get
			{
				return this._DIAMETER;
			}
			set
			{
				if ((this._DIAMETER != value))
				{
					this.OnDIAMETERChanging(value);
					this.SendPropertyChanging();
					this._DIAMETER = value;
					this.SendPropertyChanged("DIAMETER");
					this.OnDIAMETERChanged();
				}
			}
		}
		
		[Column(Storage="_UNIT", DbType="VarChar(2)")]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[Column(Storage="_DIAMETERMM", DbType="Int")]
		public System.Nullable<int> DIAMETERMM
		{
			get
			{
				return this._DIAMETERMM;
			}
			set
			{
				if ((this._DIAMETERMM != value))
				{
					this.OnDIAMETERMMChanging(value);
					this.SendPropertyChanging();
					this._DIAMETERMM = value;
					this.SendPropertyChanged("DIAMETERMM");
					this.OnDIAMETERMMChanged();
				}
			}
		}
		
		[Column(Storage="_MATERIAL", DbType="VarChar(2)")]
		public string MATERIAL
		{
			get
			{
				return this._MATERIAL;
			}
			set
			{
				if ((this._MATERIAL != value))
				{
					this.OnMATERIALChanging(value);
					this.SendPropertyChanging();
					this._MATERIAL = value;
					this.SendPropertyChanged("MATERIAL");
					this.OnMATERIALChanged();
				}
			}
		}
		
		[Column(Storage="_STRENGTH", DbType="Int")]
		public System.Nullable<int> STRENGTH
		{
			get
			{
				return this._STRENGTH;
			}
			set
			{
				if ((this._STRENGTH != value))
				{
					this.OnSTRENGTHChanging(value);
					this.SendPropertyChanging();
					this._STRENGTH = value;
					this.SendPropertyChanged("STRENGTH");
					this.OnSTRENGTHChanged();
				}
			}
		}
		
		[Column(Storage="_FITTING", DbType="VarChar(1)")]
		public System.Nullable<char> FITTING
		{
			get
			{
				return this._FITTING;
			}
			set
			{
				if ((this._FITTING != value))
				{
					this.OnFITTINGChanging(value);
					this.SendPropertyChanging();
					this._FITTING = value;
					this.SendPropertyChanged("FITTING");
					this.OnFITTINGChanged();
				}
			}
		}
		
		[Column(Storage="_WALLTHICKN", DbType="Int")]
		public System.Nullable<int> WALLTHICKN
		{
			get
			{
				return this._WALLTHICKN;
			}
			set
			{
				if ((this._WALLTHICKN != value))
				{
					this.OnWALLTHICKNChanging(value);
					this.SendPropertyChanging();
					this._WALLTHICKN = value;
					this.SendPropertyChanged("WALLTHICKN");
					this.OnWALLTHICKNChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="BOREHOLE_CASING", Storage="_BOREHOLE", ThisKey="BOREHOLENO", OtherKey="BOREHOLENO", IsForeignKey=true)]
		public BOREHOLE BOREHOLE
		{
			get
			{
				return this._BOREHOLE.Entity;
			}
			set
			{
				BOREHOLE previousValue = this._BOREHOLE.Entity;
				if (((previousValue != value) 
							|| (this._BOREHOLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOREHOLE.Entity = null;
						previousValue.CASINGs.Remove(this);
					}
					this._BOREHOLE.Entity = value;
					if ((value != null))
					{
						value.CASINGs.Add(this);
						this._BOREHOLENO = value.BOREHOLENO;
					}
					else
					{
						this._BOREHOLENO = default(string);
					}
					this.SendPropertyChanged("BOREHOLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DRWPLANTINTAKE")]
	public partial class DRWPLANTINTAKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INTAKEPLANTID;
		
		private System.Nullable<int> _PLANTID;
		
		private string _BOREHOLENO;
		
		private System.Nullable<int> _INTAKENO;
		
		private System.Nullable<System.DateTime> _STARTDATE;
		
		private System.Nullable<System.DateTime> _ENDDATE;
		
		private string _INTAKEUSAGE;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntitySet<INTAKECATCHMENT> _INTAKECATCHMENTs;
		
		private EntityRef<DRWPLANT> _DRWPLANT;
		
		private EntityRef<INTAKE> _INTAKE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINTAKEPLANTIDChanging(int value);
    partial void OnINTAKEPLANTIDChanged();
    partial void OnPLANTIDChanging(System.Nullable<int> value);
    partial void OnPLANTIDChanged();
    partial void OnBOREHOLENOChanging(string value);
    partial void OnBOREHOLENOChanged();
    partial void OnINTAKENOChanging(System.Nullable<int> value);
    partial void OnINTAKENOChanged();
    partial void OnSTARTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnENDDATEChanged();
    partial void OnINTAKEUSAGEChanging(string value);
    partial void OnINTAKEUSAGEChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public DRWPLANTINTAKE()
		{
			this._INTAKECATCHMENTs = new EntitySet<INTAKECATCHMENT>(new Action<INTAKECATCHMENT>(this.attach_INTAKECATCHMENTs), new Action<INTAKECATCHMENT>(this.detach_INTAKECATCHMENTs));
			this._DRWPLANT = default(EntityRef<DRWPLANT>);
			this._INTAKE = default(EntityRef<INTAKE>);
			OnCreated();
		}
		
		[Column(Storage="_INTAKEPLANTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int INTAKEPLANTID
		{
			get
			{
				return this._INTAKEPLANTID;
			}
			set
			{
				if ((this._INTAKEPLANTID != value))
				{
					this.OnINTAKEPLANTIDChanging(value);
					this.SendPropertyChanging();
					this._INTAKEPLANTID = value;
					this.SendPropertyChanged("INTAKEPLANTID");
					this.OnINTAKEPLANTIDChanged();
				}
			}
		}
		
		[Column(Storage="_PLANTID", DbType="Int")]
		public System.Nullable<int> PLANTID
		{
			get
			{
				return this._PLANTID;
			}
			set
			{
				if ((this._PLANTID != value))
				{
					if (this._DRWPLANT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPLANTIDChanging(value);
					this.SendPropertyChanging();
					this._PLANTID = value;
					this.SendPropertyChanged("PLANTID");
					this.OnPLANTIDChanged();
				}
			}
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10)")]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					if (this._INTAKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._BOREHOLENO = value;
					this.SendPropertyChanged("BOREHOLENO");
					this.OnBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_INTAKENO", DbType="Int")]
		public System.Nullable<int> INTAKENO
		{
			get
			{
				return this._INTAKENO;
			}
			set
			{
				if ((this._INTAKENO != value))
				{
					if (this._INTAKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINTAKENOChanging(value);
					this.SendPropertyChanging();
					this._INTAKENO = value;
					this.SendPropertyChanged("INTAKENO");
					this.OnINTAKENOChanged();
				}
			}
		}
		
		[Column(Storage="_STARTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_ENDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INTAKEUSAGE", DbType="VarChar(2)")]
		public string INTAKEUSAGE
		{
			get
			{
				return this._INTAKEUSAGE;
			}
			set
			{
				if ((this._INTAKEUSAGE != value))
				{
					this.OnINTAKEUSAGEChanging(value);
					this.SendPropertyChanging();
					this._INTAKEUSAGE = value;
					this.SendPropertyChanged("INTAKEUSAGE");
					this.OnINTAKEUSAGEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="DRWPLANTINTAKE_INTAKECATCHMENT", Storage="_INTAKECATCHMENTs", ThisKey="INTAKEPLANTID", OtherKey="INTAKEPLANTID")]
		public EntitySet<INTAKECATCHMENT> INTAKECATCHMENTs
		{
			get
			{
				return this._INTAKECATCHMENTs;
			}
			set
			{
				this._INTAKECATCHMENTs.Assign(value);
			}
		}
		
		[Association(Name="DRWPLANT_DRWPLANTINTAKE", Storage="_DRWPLANT", ThisKey="PLANTID", OtherKey="PLANTID", IsForeignKey=true)]
		public DRWPLANT DRWPLANT
		{
			get
			{
				return this._DRWPLANT.Entity;
			}
			set
			{
				DRWPLANT previousValue = this._DRWPLANT.Entity;
				if (((previousValue != value) 
							|| (this._DRWPLANT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DRWPLANT.Entity = null;
						previousValue.DRWPLANTINTAKEs.Remove(this);
					}
					this._DRWPLANT.Entity = value;
					if ((value != null))
					{
						value.DRWPLANTINTAKEs.Add(this);
						this._PLANTID = value.PLANTID;
					}
					else
					{
						this._PLANTID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DRWPLANT");
				}
			}
		}
		
		[Association(Name="INTAKE_DRWPLANTINTAKE", Storage="_INTAKE", ThisKey="BOREHOLENO,INTAKENO", OtherKey="BOREHOLENO,INTAKENO", IsForeignKey=true)]
		public INTAKE INTAKE
		{
			get
			{
				return this._INTAKE.Entity;
			}
			set
			{
				INTAKE previousValue = this._INTAKE.Entity;
				if (((previousValue != value) 
							|| (this._INTAKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INTAKE.Entity = null;
						previousValue.DRWPLANTINTAKEs.Remove(this);
					}
					this._INTAKE.Entity = value;
					if ((value != null))
					{
						value.DRWPLANTINTAKEs.Add(this);
						this._BOREHOLENO = value.BOREHOLENO;
						this._INTAKENO = value.INTAKENO;
					}
					else
					{
						this._BOREHOLENO = default(string);
						this._INTAKENO = default(Nullable<int>);
					}
					this.SendPropertyChanged("INTAKE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INTAKECATCHMENTs(INTAKECATCHMENT entity)
		{
			this.SendPropertyChanging();
			entity.DRWPLANTINTAKE = this;
		}
		
		private void detach_INTAKECATCHMENTs(INTAKECATCHMENT entity)
		{
			this.SendPropertyChanging();
			entity.DRWPLANTINTAKE = null;
		}
	}
	
	[Table(Name="dbo.DRWPLANT")]
	public partial class DRWPLANT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PLANTID;
		
		private System.Nullable<int> _MUNICIPALITYNO2007;
		
		private System.Nullable<int> _ENVCEN;
		
		private System.Nullable<int> _REGION;
		
		private System.Nullable<int> _ADMINISTRATORID;
		
		private System.Nullable<int> _ACTIVE;
		
		private System.Nullable<int> _PLANTTYPE;
		
		private System.Nullable<int> _PERMIT;
		
		private System.Nullable<int> _MUNICIPALITYNO;
		
		private System.Nullable<int> _PLANTTYPENO;
		
		private System.Nullable<int> _SERIALNO;
		
		private System.Nullable<int> _SUBNO;
		
		private string _COMPANYTYPE;
		
		private string _COUNTYJOURNALNO;
		
		private System.Nullable<int> _MUNICIPALITYNO2;
		
		private System.Nullable<int> _UTMZONE;
		
		private string _DATUM;
		
		private System.Nullable<double> _XUTM;
		
		private System.Nullable<double> _YUTM;
		
		private string _PLANTNAME;
		
		private string _PLANTADDRESS;
		
		private System.Nullable<int> _PLANTPOSTALCODE;
		
		private System.Nullable<System.DateTime> _PERMITDATE;
		
		private System.Nullable<int> _PERMITAMOUNT;
		
		private System.Nullable<System.DateTime> _PERMITEXPIREDATE;
		
		private System.Nullable<char> _WATERTYPE;
		
		private System.Nullable<char> _OWNER;
		
		private System.Nullable<int> _VRRPURPOSE;
		
		private System.Nullable<int> _REPORTINGCOUNTY;
		
		private System.Nullable<int> _COMPANYSERIALNO;
		
		private string _DISCHARGETO;
		
		private System.Nullable<int> _SUPPLANT;
		
		private string _LOCATREMARK;
		
		private System.Nullable<System.DateTime> _STARTDATE;
		
		private System.Nullable<System.DateTime> _ENDDATE;
		
		private string _VERTICAREF;
		
		private string _GRIDTYPE;
		
		private string _LOCATMETHO;
		
		private string _ELEVAMETHO;
		
		private System.Nullable<float> _AREAHA;
		
		private System.Nullable<double> _XUTM32EUREF89;
		
		private System.Nullable<double> _YUTM32EUREF89;
		
		private string _PROPERTYNO;
		
		private string _FEEDUTY;
		
		private System.Nullable<double> _FEEDUTYAMOUNT;
		
		private System.Nullable<int> _FEEADDRESSID;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntitySet<DRWPLANTINTAKE> _DRWPLANTINTAKEs;
		
		private EntitySet<WRRCATCHMENT> _WRRCATCHMENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPLANTIDChanging(int value);
    partial void OnPLANTIDChanged();
    partial void OnMUNICIPALITYNO2007Changing(System.Nullable<int> value);
    partial void OnMUNICIPALITYNO2007Changed();
    partial void OnENVCENChanging(System.Nullable<int> value);
    partial void OnENVCENChanged();
    partial void OnREGIONChanging(System.Nullable<int> value);
    partial void OnREGIONChanged();
    partial void OnADMINISTRATORIDChanging(System.Nullable<int> value);
    partial void OnADMINISTRATORIDChanged();
    partial void OnACTIVEChanging(System.Nullable<int> value);
    partial void OnACTIVEChanged();
    partial void OnPLANTTYPEChanging(System.Nullable<int> value);
    partial void OnPLANTTYPEChanged();
    partial void OnPERMITChanging(System.Nullable<int> value);
    partial void OnPERMITChanged();
    partial void OnMUNICIPALITYNOChanging(System.Nullable<int> value);
    partial void OnMUNICIPALITYNOChanged();
    partial void OnPLANTTYPENOChanging(System.Nullable<int> value);
    partial void OnPLANTTYPENOChanged();
    partial void OnSERIALNOChanging(System.Nullable<int> value);
    partial void OnSERIALNOChanged();
    partial void OnSUBNOChanging(System.Nullable<int> value);
    partial void OnSUBNOChanged();
    partial void OnCOMPANYTYPEChanging(string value);
    partial void OnCOMPANYTYPEChanged();
    partial void OnCOUNTYJOURNALNOChanging(string value);
    partial void OnCOUNTYJOURNALNOChanged();
    partial void OnMUNICIPALITYNO2Changing(System.Nullable<int> value);
    partial void OnMUNICIPALITYNO2Changed();
    partial void OnUTMZONEChanging(System.Nullable<int> value);
    partial void OnUTMZONEChanged();
    partial void OnDATUMChanging(string value);
    partial void OnDATUMChanged();
    partial void OnXUTMChanging(System.Nullable<double> value);
    partial void OnXUTMChanged();
    partial void OnYUTMChanging(System.Nullable<double> value);
    partial void OnYUTMChanged();
    partial void OnPLANTNAMEChanging(string value);
    partial void OnPLANTNAMEChanged();
    partial void OnPLANTADDRESSChanging(string value);
    partial void OnPLANTADDRESSChanged();
    partial void OnPLANTPOSTALCODEChanging(System.Nullable<int> value);
    partial void OnPLANTPOSTALCODEChanged();
    partial void OnPERMITDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPERMITDATEChanged();
    partial void OnPERMITAMOUNTChanging(System.Nullable<int> value);
    partial void OnPERMITAMOUNTChanged();
    partial void OnPERMITEXPIREDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPERMITEXPIREDATEChanged();
    partial void OnWATERTYPEChanging(System.Nullable<char> value);
    partial void OnWATERTYPEChanged();
    partial void OnOWNERChanging(System.Nullable<char> value);
    partial void OnOWNERChanged();
    partial void OnVRRPURPOSEChanging(System.Nullable<int> value);
    partial void OnVRRPURPOSEChanged();
    partial void OnREPORTINGCOUNTYChanging(System.Nullable<int> value);
    partial void OnREPORTINGCOUNTYChanged();
    partial void OnCOMPANYSERIALNOChanging(System.Nullable<int> value);
    partial void OnCOMPANYSERIALNOChanged();
    partial void OnDISCHARGETOChanging(string value);
    partial void OnDISCHARGETOChanged();
    partial void OnSUPPLANTChanging(System.Nullable<int> value);
    partial void OnSUPPLANTChanged();
    partial void OnLOCATREMARKChanging(string value);
    partial void OnLOCATREMARKChanged();
    partial void OnSTARTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnENDDATEChanged();
    partial void OnVERTICAREFChanging(string value);
    partial void OnVERTICAREFChanged();
    partial void OnGRIDTYPEChanging(string value);
    partial void OnGRIDTYPEChanged();
    partial void OnLOCATMETHOChanging(string value);
    partial void OnLOCATMETHOChanged();
    partial void OnELEVAMETHOChanging(string value);
    partial void OnELEVAMETHOChanged();
    partial void OnAREAHAChanging(System.Nullable<float> value);
    partial void OnAREAHAChanged();
    partial void OnXUTM32EUREF89Changing(System.Nullable<double> value);
    partial void OnXUTM32EUREF89Changed();
    partial void OnYUTM32EUREF89Changing(System.Nullable<double> value);
    partial void OnYUTM32EUREF89Changed();
    partial void OnPROPERTYNOChanging(string value);
    partial void OnPROPERTYNOChanged();
    partial void OnFEEDUTYChanging(string value);
    partial void OnFEEDUTYChanged();
    partial void OnFEEDUTYAMOUNTChanging(System.Nullable<double> value);
    partial void OnFEEDUTYAMOUNTChanged();
    partial void OnFEEADDRESSIDChanging(System.Nullable<int> value);
    partial void OnFEEADDRESSIDChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public DRWPLANT()
		{
			this._DRWPLANTINTAKEs = new EntitySet<DRWPLANTINTAKE>(new Action<DRWPLANTINTAKE>(this.attach_DRWPLANTINTAKEs), new Action<DRWPLANTINTAKE>(this.detach_DRWPLANTINTAKEs));
			this._WRRCATCHMENTs = new EntitySet<WRRCATCHMENT>(new Action<WRRCATCHMENT>(this.attach_WRRCATCHMENTs), new Action<WRRCATCHMENT>(this.detach_WRRCATCHMENTs));
			OnCreated();
		}
		
		[Column(Storage="_PLANTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PLANTID
		{
			get
			{
				return this._PLANTID;
			}
			set
			{
				if ((this._PLANTID != value))
				{
					this.OnPLANTIDChanging(value);
					this.SendPropertyChanging();
					this._PLANTID = value;
					this.SendPropertyChanged("PLANTID");
					this.OnPLANTIDChanged();
				}
			}
		}
		
		[Column(Storage="_MUNICIPALITYNO2007", DbType="Int")]
		public System.Nullable<int> MUNICIPALITYNO2007
		{
			get
			{
				return this._MUNICIPALITYNO2007;
			}
			set
			{
				if ((this._MUNICIPALITYNO2007 != value))
				{
					this.OnMUNICIPALITYNO2007Changing(value);
					this.SendPropertyChanging();
					this._MUNICIPALITYNO2007 = value;
					this.SendPropertyChanged("MUNICIPALITYNO2007");
					this.OnMUNICIPALITYNO2007Changed();
				}
			}
		}
		
		[Column(Storage="_ENVCEN", DbType="Int")]
		public System.Nullable<int> ENVCEN
		{
			get
			{
				return this._ENVCEN;
			}
			set
			{
				if ((this._ENVCEN != value))
				{
					this.OnENVCENChanging(value);
					this.SendPropertyChanging();
					this._ENVCEN = value;
					this.SendPropertyChanged("ENVCEN");
					this.OnENVCENChanged();
				}
			}
		}
		
		[Column(Storage="_REGION", DbType="Int")]
		public System.Nullable<int> REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[Column(Storage="_ADMINISTRATORID", DbType="Int")]
		public System.Nullable<int> ADMINISTRATORID
		{
			get
			{
				return this._ADMINISTRATORID;
			}
			set
			{
				if ((this._ADMINISTRATORID != value))
				{
					this.OnADMINISTRATORIDChanging(value);
					this.SendPropertyChanging();
					this._ADMINISTRATORID = value;
					this.SendPropertyChanged("ADMINISTRATORID");
					this.OnADMINISTRATORIDChanged();
				}
			}
		}
		
		[Column(Storage="_ACTIVE", DbType="Int")]
		public System.Nullable<int> ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[Column(Storage="_PLANTTYPE", DbType="Int")]
		public System.Nullable<int> PLANTTYPE
		{
			get
			{
				return this._PLANTTYPE;
			}
			set
			{
				if ((this._PLANTTYPE != value))
				{
					this.OnPLANTTYPEChanging(value);
					this.SendPropertyChanging();
					this._PLANTTYPE = value;
					this.SendPropertyChanged("PLANTTYPE");
					this.OnPLANTTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_PERMIT", DbType="Int")]
		public System.Nullable<int> PERMIT
		{
			get
			{
				return this._PERMIT;
			}
			set
			{
				if ((this._PERMIT != value))
				{
					this.OnPERMITChanging(value);
					this.SendPropertyChanging();
					this._PERMIT = value;
					this.SendPropertyChanged("PERMIT");
					this.OnPERMITChanged();
				}
			}
		}
		
		[Column(Storage="_MUNICIPALITYNO", DbType="Int")]
		public System.Nullable<int> MUNICIPALITYNO
		{
			get
			{
				return this._MUNICIPALITYNO;
			}
			set
			{
				if ((this._MUNICIPALITYNO != value))
				{
					this.OnMUNICIPALITYNOChanging(value);
					this.SendPropertyChanging();
					this._MUNICIPALITYNO = value;
					this.SendPropertyChanged("MUNICIPALITYNO");
					this.OnMUNICIPALITYNOChanged();
				}
			}
		}
		
		[Column(Storage="_PLANTTYPENO", DbType="Int")]
		public System.Nullable<int> PLANTTYPENO
		{
			get
			{
				return this._PLANTTYPENO;
			}
			set
			{
				if ((this._PLANTTYPENO != value))
				{
					this.OnPLANTTYPENOChanging(value);
					this.SendPropertyChanging();
					this._PLANTTYPENO = value;
					this.SendPropertyChanged("PLANTTYPENO");
					this.OnPLANTTYPENOChanged();
				}
			}
		}
		
		[Column(Storage="_SERIALNO", DbType="Int")]
		public System.Nullable<int> SERIALNO
		{
			get
			{
				return this._SERIALNO;
			}
			set
			{
				if ((this._SERIALNO != value))
				{
					this.OnSERIALNOChanging(value);
					this.SendPropertyChanging();
					this._SERIALNO = value;
					this.SendPropertyChanged("SERIALNO");
					this.OnSERIALNOChanged();
				}
			}
		}
		
		[Column(Storage="_SUBNO", DbType="Int")]
		public System.Nullable<int> SUBNO
		{
			get
			{
				return this._SUBNO;
			}
			set
			{
				if ((this._SUBNO != value))
				{
					this.OnSUBNOChanging(value);
					this.SendPropertyChanging();
					this._SUBNO = value;
					this.SendPropertyChanged("SUBNO");
					this.OnSUBNOChanged();
				}
			}
		}
		
		[Column(Storage="_COMPANYTYPE", DbType="VarChar(3)")]
		public string COMPANYTYPE
		{
			get
			{
				return this._COMPANYTYPE;
			}
			set
			{
				if ((this._COMPANYTYPE != value))
				{
					this.OnCOMPANYTYPEChanging(value);
					this.SendPropertyChanging();
					this._COMPANYTYPE = value;
					this.SendPropertyChanged("COMPANYTYPE");
					this.OnCOMPANYTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_COUNTYJOURNALNO", DbType="VarChar(40)")]
		public string COUNTYJOURNALNO
		{
			get
			{
				return this._COUNTYJOURNALNO;
			}
			set
			{
				if ((this._COUNTYJOURNALNO != value))
				{
					this.OnCOUNTYJOURNALNOChanging(value);
					this.SendPropertyChanging();
					this._COUNTYJOURNALNO = value;
					this.SendPropertyChanged("COUNTYJOURNALNO");
					this.OnCOUNTYJOURNALNOChanged();
				}
			}
		}
		
		[Column(Storage="_MUNICIPALITYNO2", DbType="Int")]
		public System.Nullable<int> MUNICIPALITYNO2
		{
			get
			{
				return this._MUNICIPALITYNO2;
			}
			set
			{
				if ((this._MUNICIPALITYNO2 != value))
				{
					this.OnMUNICIPALITYNO2Changing(value);
					this.SendPropertyChanging();
					this._MUNICIPALITYNO2 = value;
					this.SendPropertyChanged("MUNICIPALITYNO2");
					this.OnMUNICIPALITYNO2Changed();
				}
			}
		}
		
		[Column(Storage="_UTMZONE", DbType="Int")]
		public System.Nullable<int> UTMZONE
		{
			get
			{
				return this._UTMZONE;
			}
			set
			{
				if ((this._UTMZONE != value))
				{
					this.OnUTMZONEChanging(value);
					this.SendPropertyChanging();
					this._UTMZONE = value;
					this.SendPropertyChanged("UTMZONE");
					this.OnUTMZONEChanged();
				}
			}
		}
		
		[Column(Storage="_DATUM", DbType="VarChar(7)")]
		public string DATUM
		{
			get
			{
				return this._DATUM;
			}
			set
			{
				if ((this._DATUM != value))
				{
					this.OnDATUMChanging(value);
					this.SendPropertyChanging();
					this._DATUM = value;
					this.SendPropertyChanged("DATUM");
					this.OnDATUMChanged();
				}
			}
		}
		
		[Column(Storage="_XUTM", DbType="Float")]
		public System.Nullable<double> XUTM
		{
			get
			{
				return this._XUTM;
			}
			set
			{
				if ((this._XUTM != value))
				{
					this.OnXUTMChanging(value);
					this.SendPropertyChanging();
					this._XUTM = value;
					this.SendPropertyChanged("XUTM");
					this.OnXUTMChanged();
				}
			}
		}
		
		[Column(Storage="_YUTM", DbType="Float")]
		public System.Nullable<double> YUTM
		{
			get
			{
				return this._YUTM;
			}
			set
			{
				if ((this._YUTM != value))
				{
					this.OnYUTMChanging(value);
					this.SendPropertyChanging();
					this._YUTM = value;
					this.SendPropertyChanged("YUTM");
					this.OnYUTMChanged();
				}
			}
		}
		
		[Column(Storage="_PLANTNAME", DbType="VarChar(50)")]
		public string PLANTNAME
		{
			get
			{
				return this._PLANTNAME;
			}
			set
			{
				if ((this._PLANTNAME != value))
				{
					this.OnPLANTNAMEChanging(value);
					this.SendPropertyChanging();
					this._PLANTNAME = value;
					this.SendPropertyChanged("PLANTNAME");
					this.OnPLANTNAMEChanged();
				}
			}
		}
		
		[Column(Storage="_PLANTADDRESS", DbType="VarChar(64)")]
		public string PLANTADDRESS
		{
			get
			{
				return this._PLANTADDRESS;
			}
			set
			{
				if ((this._PLANTADDRESS != value))
				{
					this.OnPLANTADDRESSChanging(value);
					this.SendPropertyChanging();
					this._PLANTADDRESS = value;
					this.SendPropertyChanged("PLANTADDRESS");
					this.OnPLANTADDRESSChanged();
				}
			}
		}
		
		[Column(Storage="_PLANTPOSTALCODE", DbType="Int")]
		public System.Nullable<int> PLANTPOSTALCODE
		{
			get
			{
				return this._PLANTPOSTALCODE;
			}
			set
			{
				if ((this._PLANTPOSTALCODE != value))
				{
					this.OnPLANTPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._PLANTPOSTALCODE = value;
					this.SendPropertyChanged("PLANTPOSTALCODE");
					this.OnPLANTPOSTALCODEChanged();
				}
			}
		}
		
		[Column(Storage="_PERMITDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PERMITDATE
		{
			get
			{
				return this._PERMITDATE;
			}
			set
			{
				if ((this._PERMITDATE != value))
				{
					this.OnPERMITDATEChanging(value);
					this.SendPropertyChanging();
					this._PERMITDATE = value;
					this.SendPropertyChanged("PERMITDATE");
					this.OnPERMITDATEChanged();
				}
			}
		}
		
		[Column(Storage="_PERMITAMOUNT", DbType="Int")]
		public System.Nullable<int> PERMITAMOUNT
		{
			get
			{
				return this._PERMITAMOUNT;
			}
			set
			{
				if ((this._PERMITAMOUNT != value))
				{
					this.OnPERMITAMOUNTChanging(value);
					this.SendPropertyChanging();
					this._PERMITAMOUNT = value;
					this.SendPropertyChanged("PERMITAMOUNT");
					this.OnPERMITAMOUNTChanged();
				}
			}
		}
		
		[Column(Storage="_PERMITEXPIREDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PERMITEXPIREDATE
		{
			get
			{
				return this._PERMITEXPIREDATE;
			}
			set
			{
				if ((this._PERMITEXPIREDATE != value))
				{
					this.OnPERMITEXPIREDATEChanging(value);
					this.SendPropertyChanging();
					this._PERMITEXPIREDATE = value;
					this.SendPropertyChanged("PERMITEXPIREDATE");
					this.OnPERMITEXPIREDATEChanged();
				}
			}
		}
		
		[Column(Storage="_WATERTYPE", DbType="VarChar(1)")]
		public System.Nullable<char> WATERTYPE
		{
			get
			{
				return this._WATERTYPE;
			}
			set
			{
				if ((this._WATERTYPE != value))
				{
					this.OnWATERTYPEChanging(value);
					this.SendPropertyChanging();
					this._WATERTYPE = value;
					this.SendPropertyChanged("WATERTYPE");
					this.OnWATERTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_OWNER", DbType="VarChar(1)")]
		public System.Nullable<char> OWNER
		{
			get
			{
				return this._OWNER;
			}
			set
			{
				if ((this._OWNER != value))
				{
					this.OnOWNERChanging(value);
					this.SendPropertyChanging();
					this._OWNER = value;
					this.SendPropertyChanged("OWNER");
					this.OnOWNERChanged();
				}
			}
		}
		
		[Column(Storage="_VRRPURPOSE", DbType="Int")]
		public System.Nullable<int> VRRPURPOSE
		{
			get
			{
				return this._VRRPURPOSE;
			}
			set
			{
				if ((this._VRRPURPOSE != value))
				{
					this.OnVRRPURPOSEChanging(value);
					this.SendPropertyChanging();
					this._VRRPURPOSE = value;
					this.SendPropertyChanged("VRRPURPOSE");
					this.OnVRRPURPOSEChanged();
				}
			}
		}
		
		[Column(Storage="_REPORTINGCOUNTY", DbType="Int")]
		public System.Nullable<int> REPORTINGCOUNTY
		{
			get
			{
				return this._REPORTINGCOUNTY;
			}
			set
			{
				if ((this._REPORTINGCOUNTY != value))
				{
					this.OnREPORTINGCOUNTYChanging(value);
					this.SendPropertyChanging();
					this._REPORTINGCOUNTY = value;
					this.SendPropertyChanged("REPORTINGCOUNTY");
					this.OnREPORTINGCOUNTYChanged();
				}
			}
		}
		
		[Column(Storage="_COMPANYSERIALNO", DbType="Int")]
		public System.Nullable<int> COMPANYSERIALNO
		{
			get
			{
				return this._COMPANYSERIALNO;
			}
			set
			{
				if ((this._COMPANYSERIALNO != value))
				{
					this.OnCOMPANYSERIALNOChanging(value);
					this.SendPropertyChanging();
					this._COMPANYSERIALNO = value;
					this.SendPropertyChanged("COMPANYSERIALNO");
					this.OnCOMPANYSERIALNOChanged();
				}
			}
		}
		
		[Column(Storage="_DISCHARGETO", DbType="VarChar(60)")]
		public string DISCHARGETO
		{
			get
			{
				return this._DISCHARGETO;
			}
			set
			{
				if ((this._DISCHARGETO != value))
				{
					this.OnDISCHARGETOChanging(value);
					this.SendPropertyChanging();
					this._DISCHARGETO = value;
					this.SendPropertyChanged("DISCHARGETO");
					this.OnDISCHARGETOChanged();
				}
			}
		}
		
		[Column(Storage="_SUPPLANT", DbType="Int")]
		public System.Nullable<int> SUPPLANT
		{
			get
			{
				return this._SUPPLANT;
			}
			set
			{
				if ((this._SUPPLANT != value))
				{
					this.OnSUPPLANTChanging(value);
					this.SendPropertyChanging();
					this._SUPPLANT = value;
					this.SendPropertyChanged("SUPPLANT");
					this.OnSUPPLANTChanged();
				}
			}
		}
		
		[Column(Storage="_LOCATREMARK", DbType="VarChar(2000)")]
		public string LOCATREMARK
		{
			get
			{
				return this._LOCATREMARK;
			}
			set
			{
				if ((this._LOCATREMARK != value))
				{
					this.OnLOCATREMARKChanging(value);
					this.SendPropertyChanging();
					this._LOCATREMARK = value;
					this.SendPropertyChanged("LOCATREMARK");
					this.OnLOCATREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_STARTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_ENDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[Column(Storage="_VERTICAREF", DbType="VarChar(7)")]
		public string VERTICAREF
		{
			get
			{
				return this._VERTICAREF;
			}
			set
			{
				if ((this._VERTICAREF != value))
				{
					this.OnVERTICAREFChanging(value);
					this.SendPropertyChanging();
					this._VERTICAREF = value;
					this.SendPropertyChanged("VERTICAREF");
					this.OnVERTICAREFChanged();
				}
			}
		}
		
		[Column(Storage="_GRIDTYPE", DbType="VarChar(3)")]
		public string GRIDTYPE
		{
			get
			{
				return this._GRIDTYPE;
			}
			set
			{
				if ((this._GRIDTYPE != value))
				{
					this.OnGRIDTYPEChanging(value);
					this.SendPropertyChanging();
					this._GRIDTYPE = value;
					this.SendPropertyChanged("GRIDTYPE");
					this.OnGRIDTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_LOCATMETHO", DbType="VarChar(4)")]
		public string LOCATMETHO
		{
			get
			{
				return this._LOCATMETHO;
			}
			set
			{
				if ((this._LOCATMETHO != value))
				{
					this.OnLOCATMETHOChanging(value);
					this.SendPropertyChanging();
					this._LOCATMETHO = value;
					this.SendPropertyChanged("LOCATMETHO");
					this.OnLOCATMETHOChanged();
				}
			}
		}
		
		[Column(Storage="_ELEVAMETHO", DbType="VarChar(2)")]
		public string ELEVAMETHO
		{
			get
			{
				return this._ELEVAMETHO;
			}
			set
			{
				if ((this._ELEVAMETHO != value))
				{
					this.OnELEVAMETHOChanging(value);
					this.SendPropertyChanging();
					this._ELEVAMETHO = value;
					this.SendPropertyChanged("ELEVAMETHO");
					this.OnELEVAMETHOChanged();
				}
			}
		}
		
		[Column(Storage="_AREAHA", DbType="Real")]
		public System.Nullable<float> AREAHA
		{
			get
			{
				return this._AREAHA;
			}
			set
			{
				if ((this._AREAHA != value))
				{
					this.OnAREAHAChanging(value);
					this.SendPropertyChanging();
					this._AREAHA = value;
					this.SendPropertyChanged("AREAHA");
					this.OnAREAHAChanged();
				}
			}
		}
		
		[Column(Storage="_XUTM32EUREF89", DbType="Float")]
		public System.Nullable<double> XUTM32EUREF89
		{
			get
			{
				return this._XUTM32EUREF89;
			}
			set
			{
				if ((this._XUTM32EUREF89 != value))
				{
					this.OnXUTM32EUREF89Changing(value);
					this.SendPropertyChanging();
					this._XUTM32EUREF89 = value;
					this.SendPropertyChanged("XUTM32EUREF89");
					this.OnXUTM32EUREF89Changed();
				}
			}
		}
		
		[Column(Storage="_YUTM32EUREF89", DbType="Float")]
		public System.Nullable<double> YUTM32EUREF89
		{
			get
			{
				return this._YUTM32EUREF89;
			}
			set
			{
				if ((this._YUTM32EUREF89 != value))
				{
					this.OnYUTM32EUREF89Changing(value);
					this.SendPropertyChanging();
					this._YUTM32EUREF89 = value;
					this.SendPropertyChanged("YUTM32EUREF89");
					this.OnYUTM32EUREF89Changed();
				}
			}
		}
		
		[Column(Storage="_PROPERTYNO", DbType="VarChar(9)")]
		public string PROPERTYNO
		{
			get
			{
				return this._PROPERTYNO;
			}
			set
			{
				if ((this._PROPERTYNO != value))
				{
					this.OnPROPERTYNOChanging(value);
					this.SendPropertyChanging();
					this._PROPERTYNO = value;
					this.SendPropertyChanged("PROPERTYNO");
					this.OnPROPERTYNOChanged();
				}
			}
		}
		
		[Column(Storage="_FEEDUTY", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string FEEDUTY
		{
			get
			{
				return this._FEEDUTY;
			}
			set
			{
				if ((this._FEEDUTY != value))
				{
					this.OnFEEDUTYChanging(value);
					this.SendPropertyChanging();
					this._FEEDUTY = value;
					this.SendPropertyChanged("FEEDUTY");
					this.OnFEEDUTYChanged();
				}
			}
		}
		
		[Column(Storage="_FEEDUTYAMOUNT", DbType="Float")]
		public System.Nullable<double> FEEDUTYAMOUNT
		{
			get
			{
				return this._FEEDUTYAMOUNT;
			}
			set
			{
				if ((this._FEEDUTYAMOUNT != value))
				{
					this.OnFEEDUTYAMOUNTChanging(value);
					this.SendPropertyChanging();
					this._FEEDUTYAMOUNT = value;
					this.SendPropertyChanged("FEEDUTYAMOUNT");
					this.OnFEEDUTYAMOUNTChanged();
				}
			}
		}
		
		[Column(Storage="_FEEADDRESSID", DbType="Int")]
		public System.Nullable<int> FEEADDRESSID
		{
			get
			{
				return this._FEEADDRESSID;
			}
			set
			{
				if ((this._FEEADDRESSID != value))
				{
					this.OnFEEADDRESSIDChanging(value);
					this.SendPropertyChanging();
					this._FEEADDRESSID = value;
					this.SendPropertyChanged("FEEADDRESSID");
					this.OnFEEADDRESSIDChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="DRWPLANT_DRWPLANTINTAKE", Storage="_DRWPLANTINTAKEs", ThisKey="PLANTID", OtherKey="PLANTID")]
		public EntitySet<DRWPLANTINTAKE> DRWPLANTINTAKEs
		{
			get
			{
				return this._DRWPLANTINTAKEs;
			}
			set
			{
				this._DRWPLANTINTAKEs.Assign(value);
			}
		}
		
		[Association(Name="DRWPLANT_WRRCATCHMENT", Storage="_WRRCATCHMENTs", ThisKey="PLANTID", OtherKey="PLANTID")]
		public EntitySet<WRRCATCHMENT> WRRCATCHMENTs
		{
			get
			{
				return this._WRRCATCHMENTs;
			}
			set
			{
				this._WRRCATCHMENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DRWPLANTINTAKEs(DRWPLANTINTAKE entity)
		{
			this.SendPropertyChanging();
			entity.DRWPLANT = this;
		}
		
		private void detach_DRWPLANTINTAKEs(DRWPLANTINTAKE entity)
		{
			this.SendPropertyChanging();
			entity.DRWPLANT = null;
		}
		
		private void attach_WRRCATCHMENTs(WRRCATCHMENT entity)
		{
			this.SendPropertyChanging();
			entity.DRWPLANT = this;
		}
		
		private void detach_WRRCATCHMENTs(WRRCATCHMENT entity)
		{
			this.SendPropertyChanging();
			entity.DRWPLANT = null;
		}
	}
	
	[Table(Name="dbo.INTAKE")]
	public partial class INTAKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BOREHOLENO;
		
		private int _INTAKENO;
		
		private System.Nullable<int> _STRINGNO;
		
		private System.Nullable<char> _WATERAGE;
		
		private string _DEPOSITNO;
		
		private System.Nullable<int> _DEPOSITTYPE;
		
		private System.Nullable<char> _MAINCLASS;
		
		private System.Nullable<int> _MONITORINGTYPE;
		
		private string _RESERVOIRROCK;
		
		private System.Nullable<int> _RESERVOIRTYPE;
		
		private System.Nullable<char> _SPECIALUSABLE;
		
		private System.Nullable<int> _WATERTABLETYPE;
		
		private string _SOUNDABILITY;
		
		private string _SOUNDABILITYREMARK;
		
		private System.Nullable<double> _SOUNDTUBEINSIDEDIAM;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntitySet<DRWPLANTINTAKE> _DRWPLANTINTAKEs;
		
		private EntitySet<SCREEN> _SCREENs;
		
		private EntitySet<WATLEVEL> _WATLEVELs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBOREHOLENOChanging(string value);
    partial void OnBOREHOLENOChanged();
    partial void OnINTAKENOChanging(int value);
    partial void OnINTAKENOChanged();
    partial void OnSTRINGNOChanging(System.Nullable<int> value);
    partial void OnSTRINGNOChanged();
    partial void OnWATERAGEChanging(System.Nullable<char> value);
    partial void OnWATERAGEChanged();
    partial void OnDEPOSITNOChanging(string value);
    partial void OnDEPOSITNOChanged();
    partial void OnDEPOSITTYPEChanging(System.Nullable<int> value);
    partial void OnDEPOSITTYPEChanged();
    partial void OnMAINCLASSChanging(System.Nullable<char> value);
    partial void OnMAINCLASSChanged();
    partial void OnMONITORINGTYPEChanging(System.Nullable<int> value);
    partial void OnMONITORINGTYPEChanged();
    partial void OnRESERVOIRROCKChanging(string value);
    partial void OnRESERVOIRROCKChanged();
    partial void OnRESERVOIRTYPEChanging(System.Nullable<int> value);
    partial void OnRESERVOIRTYPEChanged();
    partial void OnSPECIALUSABLEChanging(System.Nullable<char> value);
    partial void OnSPECIALUSABLEChanged();
    partial void OnWATERTABLETYPEChanging(System.Nullable<int> value);
    partial void OnWATERTABLETYPEChanged();
    partial void OnSOUNDABILITYChanging(string value);
    partial void OnSOUNDABILITYChanged();
    partial void OnSOUNDABILITYREMARKChanging(string value);
    partial void OnSOUNDABILITYREMARKChanged();
    partial void OnSOUNDTUBEINSIDEDIAMChanging(System.Nullable<double> value);
    partial void OnSOUNDTUBEINSIDEDIAMChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public INTAKE()
		{
			this._DRWPLANTINTAKEs = new EntitySet<DRWPLANTINTAKE>(new Action<DRWPLANTINTAKE>(this.attach_DRWPLANTINTAKEs), new Action<DRWPLANTINTAKE>(this.detach_DRWPLANTINTAKEs));
			this._SCREENs = new EntitySet<SCREEN>(new Action<SCREEN>(this.attach_SCREENs), new Action<SCREEN>(this.detach_SCREENs));
			this._WATLEVELs = new EntitySet<WATLEVEL>(new Action<WATLEVEL>(this.attach_WATLEVELs), new Action<WATLEVEL>(this.detach_WATLEVELs));
			OnCreated();
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					this.OnBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._BOREHOLENO = value;
					this.SendPropertyChanged("BOREHOLENO");
					this.OnBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_INTAKENO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int INTAKENO
		{
			get
			{
				return this._INTAKENO;
			}
			set
			{
				if ((this._INTAKENO != value))
				{
					this.OnINTAKENOChanging(value);
					this.SendPropertyChanging();
					this._INTAKENO = value;
					this.SendPropertyChanged("INTAKENO");
					this.OnINTAKENOChanged();
				}
			}
		}
		
		[Column(Storage="_STRINGNO", DbType="Int")]
		public System.Nullable<int> STRINGNO
		{
			get
			{
				return this._STRINGNO;
			}
			set
			{
				if ((this._STRINGNO != value))
				{
					this.OnSTRINGNOChanging(value);
					this.SendPropertyChanging();
					this._STRINGNO = value;
					this.SendPropertyChanged("STRINGNO");
					this.OnSTRINGNOChanged();
				}
			}
		}
		
		[Column(Storage="_WATERAGE", DbType="VarChar(1)")]
		public System.Nullable<char> WATERAGE
		{
			get
			{
				return this._WATERAGE;
			}
			set
			{
				if ((this._WATERAGE != value))
				{
					this.OnWATERAGEChanging(value);
					this.SendPropertyChanging();
					this._WATERAGE = value;
					this.SendPropertyChanged("WATERAGE");
					this.OnWATERAGEChanged();
				}
			}
		}
		
		[Column(Storage="_DEPOSITNO", DbType="VarChar(22)")]
		public string DEPOSITNO
		{
			get
			{
				return this._DEPOSITNO;
			}
			set
			{
				if ((this._DEPOSITNO != value))
				{
					this.OnDEPOSITNOChanging(value);
					this.SendPropertyChanging();
					this._DEPOSITNO = value;
					this.SendPropertyChanged("DEPOSITNO");
					this.OnDEPOSITNOChanged();
				}
			}
		}
		
		[Column(Storage="_DEPOSITTYPE", DbType="Int")]
		public System.Nullable<int> DEPOSITTYPE
		{
			get
			{
				return this._DEPOSITTYPE;
			}
			set
			{
				if ((this._DEPOSITTYPE != value))
				{
					this.OnDEPOSITTYPEChanging(value);
					this.SendPropertyChanging();
					this._DEPOSITTYPE = value;
					this.SendPropertyChanged("DEPOSITTYPE");
					this.OnDEPOSITTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_MAINCLASS", DbType="VarChar(1)")]
		public System.Nullable<char> MAINCLASS
		{
			get
			{
				return this._MAINCLASS;
			}
			set
			{
				if ((this._MAINCLASS != value))
				{
					this.OnMAINCLASSChanging(value);
					this.SendPropertyChanging();
					this._MAINCLASS = value;
					this.SendPropertyChanged("MAINCLASS");
					this.OnMAINCLASSChanged();
				}
			}
		}
		
		[Column(Storage="_MONITORINGTYPE", DbType="Int")]
		public System.Nullable<int> MONITORINGTYPE
		{
			get
			{
				return this._MONITORINGTYPE;
			}
			set
			{
				if ((this._MONITORINGTYPE != value))
				{
					this.OnMONITORINGTYPEChanging(value);
					this.SendPropertyChanging();
					this._MONITORINGTYPE = value;
					this.SendPropertyChanged("MONITORINGTYPE");
					this.OnMONITORINGTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_RESERVOIRROCK", DbType="VarChar(2)")]
		public string RESERVOIRROCK
		{
			get
			{
				return this._RESERVOIRROCK;
			}
			set
			{
				if ((this._RESERVOIRROCK != value))
				{
					this.OnRESERVOIRROCKChanging(value);
					this.SendPropertyChanging();
					this._RESERVOIRROCK = value;
					this.SendPropertyChanged("RESERVOIRROCK");
					this.OnRESERVOIRROCKChanged();
				}
			}
		}
		
		[Column(Storage="_RESERVOIRTYPE", DbType="Int")]
		public System.Nullable<int> RESERVOIRTYPE
		{
			get
			{
				return this._RESERVOIRTYPE;
			}
			set
			{
				if ((this._RESERVOIRTYPE != value))
				{
					this.OnRESERVOIRTYPEChanging(value);
					this.SendPropertyChanging();
					this._RESERVOIRTYPE = value;
					this.SendPropertyChanged("RESERVOIRTYPE");
					this.OnRESERVOIRTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_SPECIALUSABLE", DbType="VarChar(1)")]
		public System.Nullable<char> SPECIALUSABLE
		{
			get
			{
				return this._SPECIALUSABLE;
			}
			set
			{
				if ((this._SPECIALUSABLE != value))
				{
					this.OnSPECIALUSABLEChanging(value);
					this.SendPropertyChanging();
					this._SPECIALUSABLE = value;
					this.SendPropertyChanged("SPECIALUSABLE");
					this.OnSPECIALUSABLEChanged();
				}
			}
		}
		
		[Column(Storage="_WATERTABLETYPE", DbType="Int")]
		public System.Nullable<int> WATERTABLETYPE
		{
			get
			{
				return this._WATERTABLETYPE;
			}
			set
			{
				if ((this._WATERTABLETYPE != value))
				{
					this.OnWATERTABLETYPEChanging(value);
					this.SendPropertyChanging();
					this._WATERTABLETYPE = value;
					this.SendPropertyChanged("WATERTABLETYPE");
					this.OnWATERTABLETYPEChanged();
				}
			}
		}
		
		[Column(Storage="_SOUNDABILITY", DbType="VarChar(4)")]
		public string SOUNDABILITY
		{
			get
			{
				return this._SOUNDABILITY;
			}
			set
			{
				if ((this._SOUNDABILITY != value))
				{
					this.OnSOUNDABILITYChanging(value);
					this.SendPropertyChanging();
					this._SOUNDABILITY = value;
					this.SendPropertyChanged("SOUNDABILITY");
					this.OnSOUNDABILITYChanged();
				}
			}
		}
		
		[Column(Storage="_SOUNDABILITYREMARK", DbType="VarChar(255)")]
		public string SOUNDABILITYREMARK
		{
			get
			{
				return this._SOUNDABILITYREMARK;
			}
			set
			{
				if ((this._SOUNDABILITYREMARK != value))
				{
					this.OnSOUNDABILITYREMARKChanging(value);
					this.SendPropertyChanging();
					this._SOUNDABILITYREMARK = value;
					this.SendPropertyChanged("SOUNDABILITYREMARK");
					this.OnSOUNDABILITYREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_SOUNDTUBEINSIDEDIAM", DbType="Float")]
		public System.Nullable<double> SOUNDTUBEINSIDEDIAM
		{
			get
			{
				return this._SOUNDTUBEINSIDEDIAM;
			}
			set
			{
				if ((this._SOUNDTUBEINSIDEDIAM != value))
				{
					this.OnSOUNDTUBEINSIDEDIAMChanging(value);
					this.SendPropertyChanging();
					this._SOUNDTUBEINSIDEDIAM = value;
					this.SendPropertyChanged("SOUNDTUBEINSIDEDIAM");
					this.OnSOUNDTUBEINSIDEDIAMChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="INTAKE_DRWPLANTINTAKE", Storage="_DRWPLANTINTAKEs", ThisKey="BOREHOLENO,INTAKENO", OtherKey="BOREHOLENO,INTAKENO")]
		public EntitySet<DRWPLANTINTAKE> DRWPLANTINTAKEs
		{
			get
			{
				return this._DRWPLANTINTAKEs;
			}
			set
			{
				this._DRWPLANTINTAKEs.Assign(value);
			}
		}
		
		[Association(Name="INTAKE_SCREEN", Storage="_SCREENs", ThisKey="BOREHOLENO,INTAKENO", OtherKey="BOREHOLENO,INTAKENO")]
		public EntitySet<SCREEN> SCREENs
		{
			get
			{
				return this._SCREENs;
			}
			set
			{
				this._SCREENs.Assign(value);
			}
		}
		
		[Association(Name="INTAKE_WATLEVEL", Storage="_WATLEVELs", ThisKey="BOREHOLENO,INTAKENO", OtherKey="BOREHOLENO,INTAKENO")]
		public EntitySet<WATLEVEL> WATLEVELs
		{
			get
			{
				return this._WATLEVELs;
			}
			set
			{
				this._WATLEVELs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DRWPLANTINTAKEs(DRWPLANTINTAKE entity)
		{
			this.SendPropertyChanging();
			entity.INTAKE = this;
		}
		
		private void detach_DRWPLANTINTAKEs(DRWPLANTINTAKE entity)
		{
			this.SendPropertyChanging();
			entity.INTAKE = null;
		}
		
		private void attach_SCREENs(SCREEN entity)
		{
			this.SendPropertyChanging();
			entity.INTAKE = this;
		}
		
		private void detach_SCREENs(SCREEN entity)
		{
			this.SendPropertyChanging();
			entity.INTAKE = null;
		}
		
		private void attach_WATLEVELs(WATLEVEL entity)
		{
			this.SendPropertyChanging();
			entity.INTAKE = this;
		}
		
		private void detach_WATLEVELs(WATLEVEL entity)
		{
			this.SendPropertyChanging();
			entity.INTAKE = null;
		}
	}
	
	[Table(Name="dbo.INTAKECATCHMENT")]
	public partial class INTAKECATCHMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _STARTDATE;
		
		private int _INTAKEPLANTID;
		
		private System.Nullable<char> _ATTRIBUTE;
		
		private System.DateTime _ENDDATE;
		
		private System.Nullable<int> _VOLUME;
		
		private System.Nullable<int> _METHOD;
		
		private System.Nullable<int> _FLOWMETER;
		
		private System.Nullable<double> _FLOWMETERSTART;
		
		private System.Nullable<float> _CONVERSIONFACTOR;
		
		private string _REMARK;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntityRef<DRWPLANTINTAKE> _DRWPLANTINTAKE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnINTAKEPLANTIDChanging(int value);
    partial void OnINTAKEPLANTIDChanged();
    partial void OnATTRIBUTEChanging(System.Nullable<char> value);
    partial void OnATTRIBUTEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnVOLUMEChanging(System.Nullable<int> value);
    partial void OnVOLUMEChanged();
    partial void OnMETHODChanging(System.Nullable<int> value);
    partial void OnMETHODChanged();
    partial void OnFLOWMETERChanging(System.Nullable<int> value);
    partial void OnFLOWMETERChanged();
    partial void OnFLOWMETERSTARTChanging(System.Nullable<double> value);
    partial void OnFLOWMETERSTARTChanged();
    partial void OnCONVERSIONFACTORChanging(System.Nullable<float> value);
    partial void OnCONVERSIONFACTORChanged();
    partial void OnREMARKChanging(string value);
    partial void OnREMARKChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public INTAKECATCHMENT()
		{
			this._DRWPLANTINTAKE = default(EntityRef<DRWPLANTINTAKE>);
			OnCreated();
		}
		
		[Column(Storage="_STARTDATE", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INTAKEPLANTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int INTAKEPLANTID
		{
			get
			{
				return this._INTAKEPLANTID;
			}
			set
			{
				if ((this._INTAKEPLANTID != value))
				{
					if (this._DRWPLANTINTAKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINTAKEPLANTIDChanging(value);
					this.SendPropertyChanging();
					this._INTAKEPLANTID = value;
					this.SendPropertyChanged("INTAKEPLANTID");
					this.OnINTAKEPLANTIDChanged();
				}
			}
		}
		
		[Column(Storage="_ATTRIBUTE", DbType="VarChar(1)")]
		public System.Nullable<char> ATTRIBUTE
		{
			get
			{
				return this._ATTRIBUTE;
			}
			set
			{
				if ((this._ATTRIBUTE != value))
				{
					this.OnATTRIBUTEChanging(value);
					this.SendPropertyChanging();
					this._ATTRIBUTE = value;
					this.SendPropertyChanged("ATTRIBUTE");
					this.OnATTRIBUTEChanged();
				}
			}
		}
		
		[Column(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[Column(Storage="_VOLUME", DbType="Int")]
		public System.Nullable<int> VOLUME
		{
			get
			{
				return this._VOLUME;
			}
			set
			{
				if ((this._VOLUME != value))
				{
					this.OnVOLUMEChanging(value);
					this.SendPropertyChanging();
					this._VOLUME = value;
					this.SendPropertyChanged("VOLUME");
					this.OnVOLUMEChanged();
				}
			}
		}
		
		[Column(Storage="_METHOD", DbType="Int")]
		public System.Nullable<int> METHOD
		{
			get
			{
				return this._METHOD;
			}
			set
			{
				if ((this._METHOD != value))
				{
					this.OnMETHODChanging(value);
					this.SendPropertyChanging();
					this._METHOD = value;
					this.SendPropertyChanged("METHOD");
					this.OnMETHODChanged();
				}
			}
		}
		
		[Column(Storage="_FLOWMETER", DbType="Int")]
		public System.Nullable<int> FLOWMETER
		{
			get
			{
				return this._FLOWMETER;
			}
			set
			{
				if ((this._FLOWMETER != value))
				{
					this.OnFLOWMETERChanging(value);
					this.SendPropertyChanging();
					this._FLOWMETER = value;
					this.SendPropertyChanged("FLOWMETER");
					this.OnFLOWMETERChanged();
				}
			}
		}
		
		[Column(Storage="_FLOWMETERSTART", DbType="Float")]
		public System.Nullable<double> FLOWMETERSTART
		{
			get
			{
				return this._FLOWMETERSTART;
			}
			set
			{
				if ((this._FLOWMETERSTART != value))
				{
					this.OnFLOWMETERSTARTChanging(value);
					this.SendPropertyChanging();
					this._FLOWMETERSTART = value;
					this.SendPropertyChanged("FLOWMETERSTART");
					this.OnFLOWMETERSTARTChanged();
				}
			}
		}
		
		[Column(Storage="_CONVERSIONFACTOR", DbType="Real")]
		public System.Nullable<float> CONVERSIONFACTOR
		{
			get
			{
				return this._CONVERSIONFACTOR;
			}
			set
			{
				if ((this._CONVERSIONFACTOR != value))
				{
					this.OnCONVERSIONFACTORChanging(value);
					this.SendPropertyChanging();
					this._CONVERSIONFACTOR = value;
					this.SendPropertyChanged("CONVERSIONFACTOR");
					this.OnCONVERSIONFACTORChanged();
				}
			}
		}
		
		[Column(Storage="_REMARK", DbType="VarChar(255)")]
		public string REMARK
		{
			get
			{
				return this._REMARK;
			}
			set
			{
				if ((this._REMARK != value))
				{
					this.OnREMARKChanging(value);
					this.SendPropertyChanging();
					this._REMARK = value;
					this.SendPropertyChanged("REMARK");
					this.OnREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="DRWPLANTINTAKE_INTAKECATCHMENT", Storage="_DRWPLANTINTAKE", ThisKey="INTAKEPLANTID", OtherKey="INTAKEPLANTID", IsForeignKey=true)]
		public DRWPLANTINTAKE DRWPLANTINTAKE
		{
			get
			{
				return this._DRWPLANTINTAKE.Entity;
			}
			set
			{
				DRWPLANTINTAKE previousValue = this._DRWPLANTINTAKE.Entity;
				if (((previousValue != value) 
							|| (this._DRWPLANTINTAKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DRWPLANTINTAKE.Entity = null;
						previousValue.INTAKECATCHMENTs.Remove(this);
					}
					this._DRWPLANTINTAKE.Entity = value;
					if ((value != null))
					{
						value.INTAKECATCHMENTs.Add(this);
						this._INTAKEPLANTID = value.INTAKEPLANTID;
					}
					else
					{
						this._INTAKEPLANTID = default(int);
					}
					this.SendPropertyChanged("DRWPLANTINTAKE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LITHSAMP")]
	public partial class LITHSAMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BOREHOLENO;
		
		private int _SAMPLENO;
		
		private System.Nullable<int> _BAGNO;
		
		private System.Nullable<double> _TOP;
		
		private System.Nullable<double> _BOTTOM;
		
		private System.Nullable<double> _SAMPLEDEP;
		
		private System.Nullable<char> _SAMPLEKEPT;
		
		private System.Nullable<char> _DEPESTIM;
		
		private string _DRILLCOLOR;
		
		private string _DRILLROCKT;
		
		private string _DRILLCOLSB;
		
		private string _DRILLDESCR;
		
		private System.Nullable<int> _DRILLBAGNO;
		
		private string _DRILLREMRK;
		
		private string _ROCKTYPE;
		
		private string _TEXTURE;
		
		private string _COLOR;
		
		private string _STRUCTURE;
		
		private string _HARDNESS;
		
		private string _CEMENTATIO;
		
		private string _DIAGENESIS;
		
		private string _CALCAREOUS;
		
		private string _CLASSIFICA;
		
		private string _TRIVIALNAM;
		
		private string _ROCKSYMBOL;
		
		private string _SORTING;
		
		private string _ROUNDING;
		
		private string _REMARKS;
		
		private string _GRAINSHAPE;
		
		private string _MINORCOMPS;
		
		private string _ANALYSES;
		
		private string _MINERALS;
		
		private string _FOSSILS;
		
		private string _OLDCOLOR;
		
		private string _MUNSELLCOLOR;
		
		private string _TOTALDESCR;
		
		private string _OTHERDESCR;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBOREHOLENOChanging(string value);
    partial void OnBOREHOLENOChanged();
    partial void OnSAMPLENOChanging(int value);
    partial void OnSAMPLENOChanged();
    partial void OnBAGNOChanging(System.Nullable<int> value);
    partial void OnBAGNOChanged();
    partial void OnTOPChanging(System.Nullable<double> value);
    partial void OnTOPChanged();
    partial void OnBOTTOMChanging(System.Nullable<double> value);
    partial void OnBOTTOMChanged();
    partial void OnSAMPLEDEPChanging(System.Nullable<double> value);
    partial void OnSAMPLEDEPChanged();
    partial void OnSAMPLEKEPTChanging(System.Nullable<char> value);
    partial void OnSAMPLEKEPTChanged();
    partial void OnDEPESTIMChanging(System.Nullable<char> value);
    partial void OnDEPESTIMChanged();
    partial void OnDRILLCOLORChanging(string value);
    partial void OnDRILLCOLORChanged();
    partial void OnDRILLROCKTChanging(string value);
    partial void OnDRILLROCKTChanged();
    partial void OnDRILLCOLSBChanging(string value);
    partial void OnDRILLCOLSBChanged();
    partial void OnDRILLDESCRChanging(string value);
    partial void OnDRILLDESCRChanged();
    partial void OnDRILLBAGNOChanging(System.Nullable<int> value);
    partial void OnDRILLBAGNOChanged();
    partial void OnDRILLREMRKChanging(string value);
    partial void OnDRILLREMRKChanged();
    partial void OnROCKTYPEChanging(string value);
    partial void OnROCKTYPEChanged();
    partial void OnTEXTUREChanging(string value);
    partial void OnTEXTUREChanged();
    partial void OnCOLORChanging(string value);
    partial void OnCOLORChanged();
    partial void OnSTRUCTUREChanging(string value);
    partial void OnSTRUCTUREChanged();
    partial void OnHARDNESSChanging(string value);
    partial void OnHARDNESSChanged();
    partial void OnCEMENTATIOChanging(string value);
    partial void OnCEMENTATIOChanged();
    partial void OnDIAGENESISChanging(string value);
    partial void OnDIAGENESISChanged();
    partial void OnCALCAREOUSChanging(string value);
    partial void OnCALCAREOUSChanged();
    partial void OnCLASSIFICAChanging(string value);
    partial void OnCLASSIFICAChanged();
    partial void OnTRIVIALNAMChanging(string value);
    partial void OnTRIVIALNAMChanged();
    partial void OnROCKSYMBOLChanging(string value);
    partial void OnROCKSYMBOLChanged();
    partial void OnSORTINGChanging(string value);
    partial void OnSORTINGChanged();
    partial void OnROUNDINGChanging(string value);
    partial void OnROUNDINGChanged();
    partial void OnREMARKSChanging(string value);
    partial void OnREMARKSChanged();
    partial void OnGRAINSHAPEChanging(string value);
    partial void OnGRAINSHAPEChanged();
    partial void OnMINORCOMPSChanging(string value);
    partial void OnMINORCOMPSChanged();
    partial void OnANALYSESChanging(string value);
    partial void OnANALYSESChanged();
    partial void OnMINERALSChanging(string value);
    partial void OnMINERALSChanged();
    partial void OnFOSSILSChanging(string value);
    partial void OnFOSSILSChanged();
    partial void OnOLDCOLORChanging(string value);
    partial void OnOLDCOLORChanged();
    partial void OnMUNSELLCOLORChanging(string value);
    partial void OnMUNSELLCOLORChanged();
    partial void OnTOTALDESCRChanging(string value);
    partial void OnTOTALDESCRChanged();
    partial void OnOTHERDESCRChanging(string value);
    partial void OnOTHERDESCRChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public LITHSAMP()
		{
			OnCreated();
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					this.OnBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._BOREHOLENO = value;
					this.SendPropertyChanged("BOREHOLENO");
					this.OnBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_SAMPLENO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SAMPLENO
		{
			get
			{
				return this._SAMPLENO;
			}
			set
			{
				if ((this._SAMPLENO != value))
				{
					this.OnSAMPLENOChanging(value);
					this.SendPropertyChanging();
					this._SAMPLENO = value;
					this.SendPropertyChanged("SAMPLENO");
					this.OnSAMPLENOChanged();
				}
			}
		}
		
		[Column(Storage="_BAGNO", DbType="Int")]
		public System.Nullable<int> BAGNO
		{
			get
			{
				return this._BAGNO;
			}
			set
			{
				if ((this._BAGNO != value))
				{
					this.OnBAGNOChanging(value);
					this.SendPropertyChanging();
					this._BAGNO = value;
					this.SendPropertyChanged("BAGNO");
					this.OnBAGNOChanged();
				}
			}
		}
		
		[Column(Name="[TOP]", Storage="_TOP", DbType="Float")]
		public System.Nullable<double> TOP
		{
			get
			{
				return this._TOP;
			}
			set
			{
				if ((this._TOP != value))
				{
					this.OnTOPChanging(value);
					this.SendPropertyChanging();
					this._TOP = value;
					this.SendPropertyChanged("TOP");
					this.OnTOPChanged();
				}
			}
		}
		
		[Column(Storage="_BOTTOM", DbType="Float")]
		public System.Nullable<double> BOTTOM
		{
			get
			{
				return this._BOTTOM;
			}
			set
			{
				if ((this._BOTTOM != value))
				{
					this.OnBOTTOMChanging(value);
					this.SendPropertyChanging();
					this._BOTTOM = value;
					this.SendPropertyChanged("BOTTOM");
					this.OnBOTTOMChanged();
				}
			}
		}
		
		[Column(Storage="_SAMPLEDEP", DbType="Float")]
		public System.Nullable<double> SAMPLEDEP
		{
			get
			{
				return this._SAMPLEDEP;
			}
			set
			{
				if ((this._SAMPLEDEP != value))
				{
					this.OnSAMPLEDEPChanging(value);
					this.SendPropertyChanging();
					this._SAMPLEDEP = value;
					this.SendPropertyChanged("SAMPLEDEP");
					this.OnSAMPLEDEPChanged();
				}
			}
		}
		
		[Column(Storage="_SAMPLEKEPT", DbType="VarChar(1)")]
		public System.Nullable<char> SAMPLEKEPT
		{
			get
			{
				return this._SAMPLEKEPT;
			}
			set
			{
				if ((this._SAMPLEKEPT != value))
				{
					this.OnSAMPLEKEPTChanging(value);
					this.SendPropertyChanging();
					this._SAMPLEKEPT = value;
					this.SendPropertyChanged("SAMPLEKEPT");
					this.OnSAMPLEKEPTChanged();
				}
			}
		}
		
		[Column(Storage="_DEPESTIM", DbType="VarChar(1)")]
		public System.Nullable<char> DEPESTIM
		{
			get
			{
				return this._DEPESTIM;
			}
			set
			{
				if ((this._DEPESTIM != value))
				{
					this.OnDEPESTIMChanging(value);
					this.SendPropertyChanging();
					this._DEPESTIM = value;
					this.SendPropertyChanged("DEPESTIM");
					this.OnDEPESTIMChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLCOLOR", DbType="VarChar(5)")]
		public string DRILLCOLOR
		{
			get
			{
				return this._DRILLCOLOR;
			}
			set
			{
				if ((this._DRILLCOLOR != value))
				{
					this.OnDRILLCOLORChanging(value);
					this.SendPropertyChanging();
					this._DRILLCOLOR = value;
					this.SendPropertyChanged("DRILLCOLOR");
					this.OnDRILLCOLORChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLROCKT", DbType="VarChar(4)")]
		public string DRILLROCKT
		{
			get
			{
				return this._DRILLROCKT;
			}
			set
			{
				if ((this._DRILLROCKT != value))
				{
					this.OnDRILLROCKTChanging(value);
					this.SendPropertyChanging();
					this._DRILLROCKT = value;
					this.SendPropertyChanged("DRILLROCKT");
					this.OnDRILLROCKTChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLCOLSB", DbType="VarChar(2)")]
		public string DRILLCOLSB
		{
			get
			{
				return this._DRILLCOLSB;
			}
			set
			{
				if ((this._DRILLCOLSB != value))
				{
					this.OnDRILLCOLSBChanging(value);
					this.SendPropertyChanging();
					this._DRILLCOLSB = value;
					this.SendPropertyChanged("DRILLCOLSB");
					this.OnDRILLCOLSBChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLDESCR", DbType="VarChar(64)")]
		public string DRILLDESCR
		{
			get
			{
				return this._DRILLDESCR;
			}
			set
			{
				if ((this._DRILLDESCR != value))
				{
					this.OnDRILLDESCRChanging(value);
					this.SendPropertyChanging();
					this._DRILLDESCR = value;
					this.SendPropertyChanged("DRILLDESCR");
					this.OnDRILLDESCRChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLBAGNO", DbType="Int")]
		public System.Nullable<int> DRILLBAGNO
		{
			get
			{
				return this._DRILLBAGNO;
			}
			set
			{
				if ((this._DRILLBAGNO != value))
				{
					this.OnDRILLBAGNOChanging(value);
					this.SendPropertyChanging();
					this._DRILLBAGNO = value;
					this.SendPropertyChanged("DRILLBAGNO");
					this.OnDRILLBAGNOChanged();
				}
			}
		}
		
		[Column(Storage="_DRILLREMRK", DbType="VarChar(254)")]
		public string DRILLREMRK
		{
			get
			{
				return this._DRILLREMRK;
			}
			set
			{
				if ((this._DRILLREMRK != value))
				{
					this.OnDRILLREMRKChanging(value);
					this.SendPropertyChanging();
					this._DRILLREMRK = value;
					this.SendPropertyChanged("DRILLREMRK");
					this.OnDRILLREMRKChanged();
				}
			}
		}
		
		[Column(Storage="_ROCKTYPE", DbType="VarChar(3)")]
		public string ROCKTYPE
		{
			get
			{
				return this._ROCKTYPE;
			}
			set
			{
				if ((this._ROCKTYPE != value))
				{
					this.OnROCKTYPEChanging(value);
					this.SendPropertyChanging();
					this._ROCKTYPE = value;
					this.SendPropertyChanged("ROCKTYPE");
					this.OnROCKTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_TEXTURE", DbType="VarChar(3)")]
		public string TEXTURE
		{
			get
			{
				return this._TEXTURE;
			}
			set
			{
				if ((this._TEXTURE != value))
				{
					this.OnTEXTUREChanging(value);
					this.SendPropertyChanging();
					this._TEXTURE = value;
					this.SendPropertyChanged("TEXTURE");
					this.OnTEXTUREChanged();
				}
			}
		}
		
		[Column(Storage="_COLOR", DbType="VarChar(5)")]
		public string COLOR
		{
			get
			{
				return this._COLOR;
			}
			set
			{
				if ((this._COLOR != value))
				{
					this.OnCOLORChanging(value);
					this.SendPropertyChanging();
					this._COLOR = value;
					this.SendPropertyChanged("COLOR");
					this.OnCOLORChanged();
				}
			}
		}
		
		[Column(Storage="_STRUCTURE", DbType="VarChar(4)")]
		public string STRUCTURE
		{
			get
			{
				return this._STRUCTURE;
			}
			set
			{
				if ((this._STRUCTURE != value))
				{
					this.OnSTRUCTUREChanging(value);
					this.SendPropertyChanging();
					this._STRUCTURE = value;
					this.SendPropertyChanged("STRUCTURE");
					this.OnSTRUCTUREChanged();
				}
			}
		}
		
		[Column(Storage="_HARDNESS", DbType="VarChar(2)")]
		public string HARDNESS
		{
			get
			{
				return this._HARDNESS;
			}
			set
			{
				if ((this._HARDNESS != value))
				{
					this.OnHARDNESSChanging(value);
					this.SendPropertyChanging();
					this._HARDNESS = value;
					this.SendPropertyChanged("HARDNESS");
					this.OnHARDNESSChanged();
				}
			}
		}
		
		[Column(Storage="_CEMENTATIO", DbType="VarChar(2)")]
		public string CEMENTATIO
		{
			get
			{
				return this._CEMENTATIO;
			}
			set
			{
				if ((this._CEMENTATIO != value))
				{
					this.OnCEMENTATIOChanging(value);
					this.SendPropertyChanging();
					this._CEMENTATIO = value;
					this.SendPropertyChanged("CEMENTATIO");
					this.OnCEMENTATIOChanged();
				}
			}
		}
		
		[Column(Storage="_DIAGENESIS", DbType="VarChar(2)")]
		public string DIAGENESIS
		{
			get
			{
				return this._DIAGENESIS;
			}
			set
			{
				if ((this._DIAGENESIS != value))
				{
					this.OnDIAGENESISChanging(value);
					this.SendPropertyChanging();
					this._DIAGENESIS = value;
					this.SendPropertyChanged("DIAGENESIS");
					this.OnDIAGENESISChanged();
				}
			}
		}
		
		[Column(Storage="_CALCAREOUS", DbType="VarChar(4)")]
		public string CALCAREOUS
		{
			get
			{
				return this._CALCAREOUS;
			}
			set
			{
				if ((this._CALCAREOUS != value))
				{
					this.OnCALCAREOUSChanging(value);
					this.SendPropertyChanging();
					this._CALCAREOUS = value;
					this.SendPropertyChanged("CALCAREOUS");
					this.OnCALCAREOUSChanged();
				}
			}
		}
		
		[Column(Storage="_CLASSIFICA", DbType="VarChar(3)")]
		public string CLASSIFICA
		{
			get
			{
				return this._CLASSIFICA;
			}
			set
			{
				if ((this._CLASSIFICA != value))
				{
					this.OnCLASSIFICAChanging(value);
					this.SendPropertyChanging();
					this._CLASSIFICA = value;
					this.SendPropertyChanged("CLASSIFICA");
					this.OnCLASSIFICAChanged();
				}
			}
		}
		
		[Column(Storage="_TRIVIALNAM", DbType="VarChar(3)")]
		public string TRIVIALNAM
		{
			get
			{
				return this._TRIVIALNAM;
			}
			set
			{
				if ((this._TRIVIALNAM != value))
				{
					this.OnTRIVIALNAMChanging(value);
					this.SendPropertyChanging();
					this._TRIVIALNAM = value;
					this.SendPropertyChanged("TRIVIALNAM");
					this.OnTRIVIALNAMChanged();
				}
			}
		}
		
		[Column(Storage="_ROCKSYMBOL", DbType="VarChar(2)")]
		public string ROCKSYMBOL
		{
			get
			{
				return this._ROCKSYMBOL;
			}
			set
			{
				if ((this._ROCKSYMBOL != value))
				{
					this.OnROCKSYMBOLChanging(value);
					this.SendPropertyChanging();
					this._ROCKSYMBOL = value;
					this.SendPropertyChanged("ROCKSYMBOL");
					this.OnROCKSYMBOLChanged();
				}
			}
		}
		
		[Column(Storage="_SORTING", DbType="VarChar(4)")]
		public string SORTING
		{
			get
			{
				return this._SORTING;
			}
			set
			{
				if ((this._SORTING != value))
				{
					this.OnSORTINGChanging(value);
					this.SendPropertyChanging();
					this._SORTING = value;
					this.SendPropertyChanged("SORTING");
					this.OnSORTINGChanged();
				}
			}
		}
		
		[Column(Storage="_ROUNDING", DbType="VarChar(2)")]
		public string ROUNDING
		{
			get
			{
				return this._ROUNDING;
			}
			set
			{
				if ((this._ROUNDING != value))
				{
					this.OnROUNDINGChanging(value);
					this.SendPropertyChanging();
					this._ROUNDING = value;
					this.SendPropertyChanged("ROUNDING");
					this.OnROUNDINGChanged();
				}
			}
		}
		
		[Column(Storage="_REMARKS", DbType="VarChar(255)")]
		public string REMARKS
		{
			get
			{
				return this._REMARKS;
			}
			set
			{
				if ((this._REMARKS != value))
				{
					this.OnREMARKSChanging(value);
					this.SendPropertyChanging();
					this._REMARKS = value;
					this.SendPropertyChanged("REMARKS");
					this.OnREMARKSChanged();
				}
			}
		}
		
		[Column(Storage="_GRAINSHAPE", DbType="VarChar(2)")]
		public string GRAINSHAPE
		{
			get
			{
				return this._GRAINSHAPE;
			}
			set
			{
				if ((this._GRAINSHAPE != value))
				{
					this.OnGRAINSHAPEChanging(value);
					this.SendPropertyChanging();
					this._GRAINSHAPE = value;
					this.SendPropertyChanged("GRAINSHAPE");
					this.OnGRAINSHAPEChanged();
				}
			}
		}
		
		[Column(Storage="_MINORCOMPS", DbType="VarChar(255)")]
		public string MINORCOMPS
		{
			get
			{
				return this._MINORCOMPS;
			}
			set
			{
				if ((this._MINORCOMPS != value))
				{
					this.OnMINORCOMPSChanging(value);
					this.SendPropertyChanging();
					this._MINORCOMPS = value;
					this.SendPropertyChanged("MINORCOMPS");
					this.OnMINORCOMPSChanged();
				}
			}
		}
		
		[Column(Storage="_ANALYSES", DbType="VarChar(255)")]
		public string ANALYSES
		{
			get
			{
				return this._ANALYSES;
			}
			set
			{
				if ((this._ANALYSES != value))
				{
					this.OnANALYSESChanging(value);
					this.SendPropertyChanging();
					this._ANALYSES = value;
					this.SendPropertyChanged("ANALYSES");
					this.OnANALYSESChanged();
				}
			}
		}
		
		[Column(Storage="_MINERALS", DbType="VarChar(255)")]
		public string MINERALS
		{
			get
			{
				return this._MINERALS;
			}
			set
			{
				if ((this._MINERALS != value))
				{
					this.OnMINERALSChanging(value);
					this.SendPropertyChanging();
					this._MINERALS = value;
					this.SendPropertyChanged("MINERALS");
					this.OnMINERALSChanged();
				}
			}
		}
		
		[Column(Storage="_FOSSILS", DbType="VarChar(255)")]
		public string FOSSILS
		{
			get
			{
				return this._FOSSILS;
			}
			set
			{
				if ((this._FOSSILS != value))
				{
					this.OnFOSSILSChanging(value);
					this.SendPropertyChanging();
					this._FOSSILS = value;
					this.SendPropertyChanged("FOSSILS");
					this.OnFOSSILSChanged();
				}
			}
		}
		
		[Column(Storage="_OLDCOLOR", DbType="VarChar(5)")]
		public string OLDCOLOR
		{
			get
			{
				return this._OLDCOLOR;
			}
			set
			{
				if ((this._OLDCOLOR != value))
				{
					this.OnOLDCOLORChanging(value);
					this.SendPropertyChanging();
					this._OLDCOLOR = value;
					this.SendPropertyChanged("OLDCOLOR");
					this.OnOLDCOLORChanged();
				}
			}
		}
		
		[Column(Storage="_MUNSELLCOLOR", DbType="VarChar(20)")]
		public string MUNSELLCOLOR
		{
			get
			{
				return this._MUNSELLCOLOR;
			}
			set
			{
				if ((this._MUNSELLCOLOR != value))
				{
					this.OnMUNSELLCOLORChanging(value);
					this.SendPropertyChanging();
					this._MUNSELLCOLOR = value;
					this.SendPropertyChanged("MUNSELLCOLOR");
					this.OnMUNSELLCOLORChanged();
				}
			}
		}
		
		[Column(Storage="_TOTALDESCR", DbType="VarChar(254)")]
		public string TOTALDESCR
		{
			get
			{
				return this._TOTALDESCR;
			}
			set
			{
				if ((this._TOTALDESCR != value))
				{
					this.OnTOTALDESCRChanging(value);
					this.SendPropertyChanging();
					this._TOTALDESCR = value;
					this.SendPropertyChanged("TOTALDESCR");
					this.OnTOTALDESCRChanged();
				}
			}
		}
		
		[Column(Storage="_OTHERDESCR", DbType="VarChar(1024)")]
		public string OTHERDESCR
		{
			get
			{
				return this._OTHERDESCR;
			}
			set
			{
				if ((this._OTHERDESCR != value))
				{
					this.OnOTHERDESCRChanging(value);
					this.SendPropertyChanging();
					this._OTHERDESCR = value;
					this.SendPropertyChanged("OTHERDESCR");
					this.OnOTHERDESCRChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SCREEN")]
	public partial class SCREEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BOREHOLENO;
		
		private int _SCREENNO;
		
		private int _INTAKENO;
		
		private System.Nullable<double> _TOP;
		
		private System.Nullable<double> _BOTTOM;
		
		private System.Nullable<double> _DIAMETER;
		
		private string _UNIT;
		
		private System.Nullable<int> _DIAMETERMM;
		
		private string _MATERIAL;
		
		private System.Nullable<int> _STRENGTH;
		
		private System.Nullable<double> _SLOTOPENIN;
		
		private System.Nullable<System.DateTime> _STARTDATE;
		
		private System.Nullable<System.DateTime> _ENDDATE;
		
		private System.Nullable<int> _WALLTHICKN;
		
		private System.Nullable<char> _FITTING;
		
		private System.Nullable<char> _TOPBOTQUALI;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntityRef<INTAKE> _INTAKE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBOREHOLENOChanging(string value);
    partial void OnBOREHOLENOChanged();
    partial void OnSCREENNOChanging(int value);
    partial void OnSCREENNOChanged();
    partial void OnINTAKENOChanging(int value);
    partial void OnINTAKENOChanged();
    partial void OnTOPChanging(System.Nullable<double> value);
    partial void OnTOPChanged();
    partial void OnBOTTOMChanging(System.Nullable<double> value);
    partial void OnBOTTOMChanged();
    partial void OnDIAMETERChanging(System.Nullable<double> value);
    partial void OnDIAMETERChanged();
    partial void OnUNITChanging(string value);
    partial void OnUNITChanged();
    partial void OnDIAMETERMMChanging(System.Nullable<int> value);
    partial void OnDIAMETERMMChanged();
    partial void OnMATERIALChanging(string value);
    partial void OnMATERIALChanged();
    partial void OnSTRENGTHChanging(System.Nullable<int> value);
    partial void OnSTRENGTHChanged();
    partial void OnSLOTOPENINChanging(System.Nullable<double> value);
    partial void OnSLOTOPENINChanged();
    partial void OnSTARTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnENDDATEChanged();
    partial void OnWALLTHICKNChanging(System.Nullable<int> value);
    partial void OnWALLTHICKNChanged();
    partial void OnFITTINGChanging(System.Nullable<char> value);
    partial void OnFITTINGChanged();
    partial void OnTOPBOTQUALIChanging(System.Nullable<char> value);
    partial void OnTOPBOTQUALIChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public SCREEN()
		{
			this._INTAKE = default(EntityRef<INTAKE>);
			OnCreated();
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					if (this._INTAKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._BOREHOLENO = value;
					this.SendPropertyChanged("BOREHOLENO");
					this.OnBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_SCREENNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SCREENNO
		{
			get
			{
				return this._SCREENNO;
			}
			set
			{
				if ((this._SCREENNO != value))
				{
					this.OnSCREENNOChanging(value);
					this.SendPropertyChanging();
					this._SCREENNO = value;
					this.SendPropertyChanged("SCREENNO");
					this.OnSCREENNOChanged();
				}
			}
		}
		
		[Column(Storage="_INTAKENO", DbType="Int NOT NULL")]
		public int INTAKENO
		{
			get
			{
				return this._INTAKENO;
			}
			set
			{
				if ((this._INTAKENO != value))
				{
					if (this._INTAKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINTAKENOChanging(value);
					this.SendPropertyChanging();
					this._INTAKENO = value;
					this.SendPropertyChanged("INTAKENO");
					this.OnINTAKENOChanged();
				}
			}
		}
		
		[Column(Name="[TOP]", Storage="_TOP", DbType="Float")]
		public System.Nullable<double> TOP
		{
			get
			{
				return this._TOP;
			}
			set
			{
				if ((this._TOP != value))
				{
					this.OnTOPChanging(value);
					this.SendPropertyChanging();
					this._TOP = value;
					this.SendPropertyChanged("TOP");
					this.OnTOPChanged();
				}
			}
		}
		
		[Column(Storage="_BOTTOM", DbType="Float")]
		public System.Nullable<double> BOTTOM
		{
			get
			{
				return this._BOTTOM;
			}
			set
			{
				if ((this._BOTTOM != value))
				{
					this.OnBOTTOMChanging(value);
					this.SendPropertyChanging();
					this._BOTTOM = value;
					this.SendPropertyChanged("BOTTOM");
					this.OnBOTTOMChanged();
				}
			}
		}
		
		[Column(Storage="_DIAMETER", DbType="Float")]
		public System.Nullable<double> DIAMETER
		{
			get
			{
				return this._DIAMETER;
			}
			set
			{
				if ((this._DIAMETER != value))
				{
					this.OnDIAMETERChanging(value);
					this.SendPropertyChanging();
					this._DIAMETER = value;
					this.SendPropertyChanged("DIAMETER");
					this.OnDIAMETERChanged();
				}
			}
		}
		
		[Column(Storage="_UNIT", DbType="VarChar(2)")]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[Column(Storage="_DIAMETERMM", DbType="Int")]
		public System.Nullable<int> DIAMETERMM
		{
			get
			{
				return this._DIAMETERMM;
			}
			set
			{
				if ((this._DIAMETERMM != value))
				{
					this.OnDIAMETERMMChanging(value);
					this.SendPropertyChanging();
					this._DIAMETERMM = value;
					this.SendPropertyChanged("DIAMETERMM");
					this.OnDIAMETERMMChanged();
				}
			}
		}
		
		[Column(Storage="_MATERIAL", DbType="VarChar(2)")]
		public string MATERIAL
		{
			get
			{
				return this._MATERIAL;
			}
			set
			{
				if ((this._MATERIAL != value))
				{
					this.OnMATERIALChanging(value);
					this.SendPropertyChanging();
					this._MATERIAL = value;
					this.SendPropertyChanged("MATERIAL");
					this.OnMATERIALChanged();
				}
			}
		}
		
		[Column(Storage="_STRENGTH", DbType="Int")]
		public System.Nullable<int> STRENGTH
		{
			get
			{
				return this._STRENGTH;
			}
			set
			{
				if ((this._STRENGTH != value))
				{
					this.OnSTRENGTHChanging(value);
					this.SendPropertyChanging();
					this._STRENGTH = value;
					this.SendPropertyChanged("STRENGTH");
					this.OnSTRENGTHChanged();
				}
			}
		}
		
		[Column(Storage="_SLOTOPENIN", DbType="Float")]
		public System.Nullable<double> SLOTOPENIN
		{
			get
			{
				return this._SLOTOPENIN;
			}
			set
			{
				if ((this._SLOTOPENIN != value))
				{
					this.OnSLOTOPENINChanging(value);
					this.SendPropertyChanging();
					this._SLOTOPENIN = value;
					this.SendPropertyChanged("SLOTOPENIN");
					this.OnSLOTOPENINChanged();
				}
			}
		}
		
		[Column(Storage="_STARTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_ENDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[Column(Storage="_WALLTHICKN", DbType="Int")]
		public System.Nullable<int> WALLTHICKN
		{
			get
			{
				return this._WALLTHICKN;
			}
			set
			{
				if ((this._WALLTHICKN != value))
				{
					this.OnWALLTHICKNChanging(value);
					this.SendPropertyChanging();
					this._WALLTHICKN = value;
					this.SendPropertyChanged("WALLTHICKN");
					this.OnWALLTHICKNChanged();
				}
			}
		}
		
		[Column(Storage="_FITTING", DbType="VarChar(1)")]
		public System.Nullable<char> FITTING
		{
			get
			{
				return this._FITTING;
			}
			set
			{
				if ((this._FITTING != value))
				{
					this.OnFITTINGChanging(value);
					this.SendPropertyChanging();
					this._FITTING = value;
					this.SendPropertyChanged("FITTING");
					this.OnFITTINGChanged();
				}
			}
		}
		
		[Column(Storage="_TOPBOTQUALI", DbType="VarChar(1)")]
		public System.Nullable<char> TOPBOTQUALI
		{
			get
			{
				return this._TOPBOTQUALI;
			}
			set
			{
				if ((this._TOPBOTQUALI != value))
				{
					this.OnTOPBOTQUALIChanging(value);
					this.SendPropertyChanging();
					this._TOPBOTQUALI = value;
					this.SendPropertyChanged("TOPBOTQUALI");
					this.OnTOPBOTQUALIChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="INTAKE_SCREEN", Storage="_INTAKE", ThisKey="BOREHOLENO,INTAKENO", OtherKey="BOREHOLENO,INTAKENO", IsForeignKey=true)]
		public INTAKE INTAKE
		{
			get
			{
				return this._INTAKE.Entity;
			}
			set
			{
				INTAKE previousValue = this._INTAKE.Entity;
				if (((previousValue != value) 
							|| (this._INTAKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INTAKE.Entity = null;
						previousValue.SCREENs.Remove(this);
					}
					this._INTAKE.Entity = value;
					if ((value != null))
					{
						value.SCREENs.Add(this);
						this._BOREHOLENO = value.BOREHOLENO;
						this._INTAKENO = value.INTAKENO;
					}
					else
					{
						this._BOREHOLENO = default(string);
						this._INTAKENO = default(int);
					}
					this.SendPropertyChanged("INTAKE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WATLEVEL")]
	public partial class WATLEVEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BOREHOLENO;
		
		private int _WATLEVELNO;
		
		private System.Nullable<int> _INTAKENO;
		
		private System.Nullable<System.DateTime> _TIMEOFMEAS;
		
		private string _PROJECT;
		
		private System.Nullable<double> _WATERLEVEL;
		
		private System.Nullable<double> _WATLEVGRSU;
		
		private System.Nullable<double> _WATLEVMSL;
		
		private System.Nullable<double> _WATLEVMP;
		
		private System.Nullable<double> _HOURSNOPUM;
		
		private System.Nullable<char> _CATEGORY;
		
		private System.Nullable<char> _METHOD;
		
		private System.Nullable<char> _QUALITY;
		
		private System.Nullable<char> _REFPOINT;
		
		private string _REMARK;
		
		private string _VERTICAREF;
		
		private System.Nullable<float> _ATMOSPRESSHPA;
		
		private System.Nullable<char> _EXTREMES;
		
		private System.Nullable<int> _SITUATION;
		
		private System.Nullable<int> _WATLEVELROUNDNO;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private string _DATAOWNER;
		
		private EntityRef<INTAKE> _INTAKE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBOREHOLENOChanging(string value);
    partial void OnBOREHOLENOChanged();
    partial void OnWATLEVELNOChanging(int value);
    partial void OnWATLEVELNOChanged();
    partial void OnINTAKENOChanging(System.Nullable<int> value);
    partial void OnINTAKENOChanged();
    partial void OnTIMEOFMEASChanging(System.Nullable<System.DateTime> value);
    partial void OnTIMEOFMEASChanged();
    partial void OnPROJECTChanging(string value);
    partial void OnPROJECTChanged();
    partial void OnWATERLEVELChanging(System.Nullable<double> value);
    partial void OnWATERLEVELChanged();
    partial void OnWATLEVGRSUChanging(System.Nullable<double> value);
    partial void OnWATLEVGRSUChanged();
    partial void OnWATLEVMSLChanging(System.Nullable<double> value);
    partial void OnWATLEVMSLChanged();
    partial void OnWATLEVMPChanging(System.Nullable<double> value);
    partial void OnWATLEVMPChanged();
    partial void OnHOURSNOPUMChanging(System.Nullable<double> value);
    partial void OnHOURSNOPUMChanged();
    partial void OnCATEGORYChanging(System.Nullable<char> value);
    partial void OnCATEGORYChanged();
    partial void OnMETHODChanging(System.Nullable<char> value);
    partial void OnMETHODChanged();
    partial void OnQUALITYChanging(System.Nullable<char> value);
    partial void OnQUALITYChanged();
    partial void OnREFPOINTChanging(System.Nullable<char> value);
    partial void OnREFPOINTChanged();
    partial void OnREMARKChanging(string value);
    partial void OnREMARKChanged();
    partial void OnVERTICAREFChanging(string value);
    partial void OnVERTICAREFChanged();
    partial void OnATMOSPRESSHPAChanging(System.Nullable<float> value);
    partial void OnATMOSPRESSHPAChanged();
    partial void OnEXTREMESChanging(System.Nullable<char> value);
    partial void OnEXTREMESChanged();
    partial void OnSITUATIONChanging(System.Nullable<int> value);
    partial void OnSITUATIONChanged();
    partial void OnWATLEVELROUNDNOChanging(System.Nullable<int> value);
    partial void OnWATLEVELROUNDNOChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    partial void OnDATAOWNERChanging(string value);
    partial void OnDATAOWNERChanged();
    #endregion
		
		public WATLEVEL()
		{
			this._INTAKE = default(EntityRef<INTAKE>);
			OnCreated();
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					if (this._INTAKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._BOREHOLENO = value;
					this.SendPropertyChanged("BOREHOLENO");
					this.OnBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_WATLEVELNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WATLEVELNO
		{
			get
			{
				return this._WATLEVELNO;
			}
			set
			{
				if ((this._WATLEVELNO != value))
				{
					this.OnWATLEVELNOChanging(value);
					this.SendPropertyChanging();
					this._WATLEVELNO = value;
					this.SendPropertyChanged("WATLEVELNO");
					this.OnWATLEVELNOChanged();
				}
			}
		}
		
		[Column(Storage="_INTAKENO", DbType="Int")]
		public System.Nullable<int> INTAKENO
		{
			get
			{
				return this._INTAKENO;
			}
			set
			{
				if ((this._INTAKENO != value))
				{
					if (this._INTAKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINTAKENOChanging(value);
					this.SendPropertyChanging();
					this._INTAKENO = value;
					this.SendPropertyChanged("INTAKENO");
					this.OnINTAKENOChanged();
				}
			}
		}
		
		[Column(Storage="_TIMEOFMEAS", DbType="DateTime")]
		public System.Nullable<System.DateTime> TIMEOFMEAS
		{
			get
			{
				return this._TIMEOFMEAS;
			}
			set
			{
				if ((this._TIMEOFMEAS != value))
				{
					this.OnTIMEOFMEASChanging(value);
					this.SendPropertyChanging();
					this._TIMEOFMEAS = value;
					this.SendPropertyChanged("TIMEOFMEAS");
					this.OnTIMEOFMEASChanged();
				}
			}
		}
		
		[Column(Storage="_PROJECT", DbType="VarChar(5)")]
		public string PROJECT
		{
			get
			{
				return this._PROJECT;
			}
			set
			{
				if ((this._PROJECT != value))
				{
					this.OnPROJECTChanging(value);
					this.SendPropertyChanging();
					this._PROJECT = value;
					this.SendPropertyChanged("PROJECT");
					this.OnPROJECTChanged();
				}
			}
		}
		
		[Column(Storage="_WATERLEVEL", DbType="Float")]
		public System.Nullable<double> WATERLEVEL
		{
			get
			{
				return this._WATERLEVEL;
			}
			set
			{
				if ((this._WATERLEVEL != value))
				{
					this.OnWATERLEVELChanging(value);
					this.SendPropertyChanging();
					this._WATERLEVEL = value;
					this.SendPropertyChanged("WATERLEVEL");
					this.OnWATERLEVELChanged();
				}
			}
		}
		
		[Column(Storage="_WATLEVGRSU", DbType="Float")]
		public System.Nullable<double> WATLEVGRSU
		{
			get
			{
				return this._WATLEVGRSU;
			}
			set
			{
				if ((this._WATLEVGRSU != value))
				{
					this.OnWATLEVGRSUChanging(value);
					this.SendPropertyChanging();
					this._WATLEVGRSU = value;
					this.SendPropertyChanged("WATLEVGRSU");
					this.OnWATLEVGRSUChanged();
				}
			}
		}
		
		[Column(Storage="_WATLEVMSL", DbType="Float")]
		public System.Nullable<double> WATLEVMSL
		{
			get
			{
				return this._WATLEVMSL;
			}
			set
			{
				if ((this._WATLEVMSL != value))
				{
					this.OnWATLEVMSLChanging(value);
					this.SendPropertyChanging();
					this._WATLEVMSL = value;
					this.SendPropertyChanged("WATLEVMSL");
					this.OnWATLEVMSLChanged();
				}
			}
		}
		
		[Column(Storage="_WATLEVMP", DbType="Float")]
		public System.Nullable<double> WATLEVMP
		{
			get
			{
				return this._WATLEVMP;
			}
			set
			{
				if ((this._WATLEVMP != value))
				{
					this.OnWATLEVMPChanging(value);
					this.SendPropertyChanging();
					this._WATLEVMP = value;
					this.SendPropertyChanged("WATLEVMP");
					this.OnWATLEVMPChanged();
				}
			}
		}
		
		[Column(Storage="_HOURSNOPUM", DbType="Float")]
		public System.Nullable<double> HOURSNOPUM
		{
			get
			{
				return this._HOURSNOPUM;
			}
			set
			{
				if ((this._HOURSNOPUM != value))
				{
					this.OnHOURSNOPUMChanging(value);
					this.SendPropertyChanging();
					this._HOURSNOPUM = value;
					this.SendPropertyChanged("HOURSNOPUM");
					this.OnHOURSNOPUMChanged();
				}
			}
		}
		
		[Column(Storage="_CATEGORY", DbType="VarChar(1)")]
		public System.Nullable<char> CATEGORY
		{
			get
			{
				return this._CATEGORY;
			}
			set
			{
				if ((this._CATEGORY != value))
				{
					this.OnCATEGORYChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY = value;
					this.SendPropertyChanged("CATEGORY");
					this.OnCATEGORYChanged();
				}
			}
		}
		
		[Column(Storage="_METHOD", DbType="VarChar(1)")]
		public System.Nullable<char> METHOD
		{
			get
			{
				return this._METHOD;
			}
			set
			{
				if ((this._METHOD != value))
				{
					this.OnMETHODChanging(value);
					this.SendPropertyChanging();
					this._METHOD = value;
					this.SendPropertyChanged("METHOD");
					this.OnMETHODChanged();
				}
			}
		}
		
		[Column(Storage="_QUALITY", DbType="VarChar(1)")]
		public System.Nullable<char> QUALITY
		{
			get
			{
				return this._QUALITY;
			}
			set
			{
				if ((this._QUALITY != value))
				{
					this.OnQUALITYChanging(value);
					this.SendPropertyChanging();
					this._QUALITY = value;
					this.SendPropertyChanged("QUALITY");
					this.OnQUALITYChanged();
				}
			}
		}
		
		[Column(Storage="_REFPOINT", DbType="VarChar(1)")]
		public System.Nullable<char> REFPOINT
		{
			get
			{
				return this._REFPOINT;
			}
			set
			{
				if ((this._REFPOINT != value))
				{
					this.OnREFPOINTChanging(value);
					this.SendPropertyChanging();
					this._REFPOINT = value;
					this.SendPropertyChanged("REFPOINT");
					this.OnREFPOINTChanged();
				}
			}
		}
		
		[Column(Storage="_REMARK", DbType="VarChar(60)")]
		public string REMARK
		{
			get
			{
				return this._REMARK;
			}
			set
			{
				if ((this._REMARK != value))
				{
					this.OnREMARKChanging(value);
					this.SendPropertyChanging();
					this._REMARK = value;
					this.SendPropertyChanged("REMARK");
					this.OnREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_VERTICAREF", DbType="VarChar(7)")]
		public string VERTICAREF
		{
			get
			{
				return this._VERTICAREF;
			}
			set
			{
				if ((this._VERTICAREF != value))
				{
					this.OnVERTICAREFChanging(value);
					this.SendPropertyChanging();
					this._VERTICAREF = value;
					this.SendPropertyChanged("VERTICAREF");
					this.OnVERTICAREFChanged();
				}
			}
		}
		
		[Column(Storage="_ATMOSPRESSHPA", DbType="Real")]
		public System.Nullable<float> ATMOSPRESSHPA
		{
			get
			{
				return this._ATMOSPRESSHPA;
			}
			set
			{
				if ((this._ATMOSPRESSHPA != value))
				{
					this.OnATMOSPRESSHPAChanging(value);
					this.SendPropertyChanging();
					this._ATMOSPRESSHPA = value;
					this.SendPropertyChanged("ATMOSPRESSHPA");
					this.OnATMOSPRESSHPAChanged();
				}
			}
		}
		
		[Column(Storage="_EXTREMES", DbType="VarChar(1)")]
		public System.Nullable<char> EXTREMES
		{
			get
			{
				return this._EXTREMES;
			}
			set
			{
				if ((this._EXTREMES != value))
				{
					this.OnEXTREMESChanging(value);
					this.SendPropertyChanging();
					this._EXTREMES = value;
					this.SendPropertyChanged("EXTREMES");
					this.OnEXTREMESChanged();
				}
			}
		}
		
		[Column(Storage="_SITUATION", DbType="Int")]
		public System.Nullable<int> SITUATION
		{
			get
			{
				return this._SITUATION;
			}
			set
			{
				if ((this._SITUATION != value))
				{
					this.OnSITUATIONChanging(value);
					this.SendPropertyChanging();
					this._SITUATION = value;
					this.SendPropertyChanged("SITUATION");
					this.OnSITUATIONChanged();
				}
			}
		}
		
		[Column(Storage="_WATLEVELROUNDNO", DbType="Int")]
		public System.Nullable<int> WATLEVELROUNDNO
		{
			get
			{
				return this._WATLEVELROUNDNO;
			}
			set
			{
				if ((this._WATLEVELROUNDNO != value))
				{
					this.OnWATLEVELROUNDNOChanging(value);
					this.SendPropertyChanging();
					this._WATLEVELROUNDNO = value;
					this.SendPropertyChanged("WATLEVELROUNDNO");
					this.OnWATLEVELROUNDNOChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Column(Storage="_DATAOWNER", DbType="VarChar(2)")]
		public string DATAOWNER
		{
			get
			{
				return this._DATAOWNER;
			}
			set
			{
				if ((this._DATAOWNER != value))
				{
					this.OnDATAOWNERChanging(value);
					this.SendPropertyChanging();
					this._DATAOWNER = value;
					this.SendPropertyChanged("DATAOWNER");
					this.OnDATAOWNERChanged();
				}
			}
		}
		
		[Association(Name="INTAKE_WATLEVEL", Storage="_INTAKE", ThisKey="BOREHOLENO,INTAKENO", OtherKey="BOREHOLENO,INTAKENO", IsForeignKey=true)]
		public INTAKE INTAKE
		{
			get
			{
				return this._INTAKE.Entity;
			}
			set
			{
				INTAKE previousValue = this._INTAKE.Entity;
				if (((previousValue != value) 
							|| (this._INTAKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INTAKE.Entity = null;
						previousValue.WATLEVELs.Remove(this);
					}
					this._INTAKE.Entity = value;
					if ((value != null))
					{
						value.WATLEVELs.Add(this);
						this._BOREHOLENO = value.BOREHOLENO;
						this._INTAKENO = value.INTAKENO;
					}
					else
					{
						this._BOREHOLENO = default(string);
						this._INTAKENO = default(Nullable<int>);
					}
					this.SendPropertyChanged("INTAKE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GRWCHEMSAMPLE")]
	public partial class GRWCHEMSAMPLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SAMPLEID;
		
		private string _BOREHOLENO;
		
		private System.Nullable<int> _INTAKENO;
		
		private System.Nullable<double> _TOP;
		
		private System.Nullable<double> _BOTTOM;
		
		private System.Nullable<System.DateTime> _SAMPLEDATE;
		
		private string _PROJECT;
		
		private System.Nullable<int> _LABORATORY;
		
		private string _LABORATORIYREFNO;
		
		private System.Nullable<int> _PURPOSE;
		
		private System.Nullable<int> _EXTENT;
		
		private string _CAUSE;
		
		private System.Nullable<int> _SOURCETYPE;
		
		private System.Nullable<int> _WATERTYPE;
		
		private string _REMARK;
		
		private string _SAMPLELOCALITY;
		
		private System.Nullable<double> _SUMCATIONSCALCULATED;
		
		private System.Nullable<double> _SUMANOINSCALCULATED;
		
		private System.Nullable<int> _PREPROCESSING;
		
		private string _SAMPLEDBY;
		
		private System.Nullable<int> _CLIENT;
		
		private string _CLIENTNAME;
		
		private System.Nullable<System.DateTime> _SAMPLEREPORTDATE;
		
		private string _VALIDATEDBY;
		
		private System.Nullable<System.DateTime> _CLEANINGSTART;
		
		private System.Nullable<System.DateTime> _CLEANINGEND;
		
		private System.Nullable<double> _CLEANINGYIELD;
		
		private System.Nullable<int> _PARTOFSAMPLEID;
		
		private System.Nullable<double> _AMOUNT;
		
		private System.Nullable<int> _RESAMPLESTATUS;
		
		private System.Nullable<int> _UNIT;
		
		private System.Nullable<int> _PREVIOUSSAMPLEID;
		
		private System.Nullable<int> _QUALITYCONTROL;
		
		private string _LABREFERENCENAME;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntitySet<GRWCHEMANALYSI> _GRWCHEMANALYSIs;
		
		private EntityRef<BOREHOLE> _BOREHOLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSAMPLEIDChanging(int value);
    partial void OnSAMPLEIDChanged();
    partial void OnBOREHOLENOChanging(string value);
    partial void OnBOREHOLENOChanged();
    partial void OnINTAKENOChanging(System.Nullable<int> value);
    partial void OnINTAKENOChanged();
    partial void OnTOPChanging(System.Nullable<double> value);
    partial void OnTOPChanged();
    partial void OnBOTTOMChanging(System.Nullable<double> value);
    partial void OnBOTTOMChanged();
    partial void OnSAMPLEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSAMPLEDATEChanged();
    partial void OnPROJECTChanging(string value);
    partial void OnPROJECTChanged();
    partial void OnLABORATORYChanging(System.Nullable<int> value);
    partial void OnLABORATORYChanged();
    partial void OnLABORATORIYREFNOChanging(string value);
    partial void OnLABORATORIYREFNOChanged();
    partial void OnPURPOSEChanging(System.Nullable<int> value);
    partial void OnPURPOSEChanged();
    partial void OnEXTENTChanging(System.Nullable<int> value);
    partial void OnEXTENTChanged();
    partial void OnCAUSEChanging(string value);
    partial void OnCAUSEChanged();
    partial void OnSOURCETYPEChanging(System.Nullable<int> value);
    partial void OnSOURCETYPEChanged();
    partial void OnWATERTYPEChanging(System.Nullable<int> value);
    partial void OnWATERTYPEChanged();
    partial void OnREMARKChanging(string value);
    partial void OnREMARKChanged();
    partial void OnSAMPLELOCALITYChanging(string value);
    partial void OnSAMPLELOCALITYChanged();
    partial void OnSUMCATIONSCALCULATEDChanging(System.Nullable<double> value);
    partial void OnSUMCATIONSCALCULATEDChanged();
    partial void OnSUMANOINSCALCULATEDChanging(System.Nullable<double> value);
    partial void OnSUMANOINSCALCULATEDChanged();
    partial void OnPREPROCESSINGChanging(System.Nullable<int> value);
    partial void OnPREPROCESSINGChanged();
    partial void OnSAMPLEDBYChanging(string value);
    partial void OnSAMPLEDBYChanged();
    partial void OnCLIENTChanging(System.Nullable<int> value);
    partial void OnCLIENTChanged();
    partial void OnCLIENTNAMEChanging(string value);
    partial void OnCLIENTNAMEChanged();
    partial void OnSAMPLEREPORTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSAMPLEREPORTDATEChanged();
    partial void OnVALIDATEDBYChanging(string value);
    partial void OnVALIDATEDBYChanged();
    partial void OnCLEANINGSTARTChanging(System.Nullable<System.DateTime> value);
    partial void OnCLEANINGSTARTChanged();
    partial void OnCLEANINGENDChanging(System.Nullable<System.DateTime> value);
    partial void OnCLEANINGENDChanged();
    partial void OnCLEANINGYIELDChanging(System.Nullable<double> value);
    partial void OnCLEANINGYIELDChanged();
    partial void OnPARTOFSAMPLEIDChanging(System.Nullable<int> value);
    partial void OnPARTOFSAMPLEIDChanged();
    partial void OnAMOUNTChanging(System.Nullable<double> value);
    partial void OnAMOUNTChanged();
    partial void OnRESAMPLESTATUSChanging(System.Nullable<int> value);
    partial void OnRESAMPLESTATUSChanged();
    partial void OnUNITChanging(System.Nullable<int> value);
    partial void OnUNITChanged();
    partial void OnPREVIOUSSAMPLEIDChanging(System.Nullable<int> value);
    partial void OnPREVIOUSSAMPLEIDChanged();
    partial void OnQUALITYCONTROLChanging(System.Nullable<int> value);
    partial void OnQUALITYCONTROLChanged();
    partial void OnLABREFERENCENAMEChanging(string value);
    partial void OnLABREFERENCENAMEChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public GRWCHEMSAMPLE()
		{
			this._GRWCHEMANALYSIs = new EntitySet<GRWCHEMANALYSI>(new Action<GRWCHEMANALYSI>(this.attach_GRWCHEMANALYSIs), new Action<GRWCHEMANALYSI>(this.detach_GRWCHEMANALYSIs));
			this._BOREHOLE = default(EntityRef<BOREHOLE>);
			OnCreated();
		}
		
		[Column(Storage="_SAMPLEID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SAMPLEID
		{
			get
			{
				return this._SAMPLEID;
			}
			set
			{
				if ((this._SAMPLEID != value))
				{
					this.OnSAMPLEIDChanging(value);
					this.SendPropertyChanging();
					this._SAMPLEID = value;
					this.SendPropertyChanged("SAMPLEID");
					this.OnSAMPLEIDChanged();
				}
			}
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10)")]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					if (this._BOREHOLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOREHOLENOChanging(value);
					this.SendPropertyChanging();
					this._BOREHOLENO = value;
					this.SendPropertyChanged("BOREHOLENO");
					this.OnBOREHOLENOChanged();
				}
			}
		}
		
		[Column(Storage="_INTAKENO", DbType="Int")]
		public System.Nullable<int> INTAKENO
		{
			get
			{
				return this._INTAKENO;
			}
			set
			{
				if ((this._INTAKENO != value))
				{
					this.OnINTAKENOChanging(value);
					this.SendPropertyChanging();
					this._INTAKENO = value;
					this.SendPropertyChanged("INTAKENO");
					this.OnINTAKENOChanged();
				}
			}
		}
		
		[Column(Name="[TOP]", Storage="_TOP", DbType="Float")]
		public System.Nullable<double> TOP
		{
			get
			{
				return this._TOP;
			}
			set
			{
				if ((this._TOP != value))
				{
					this.OnTOPChanging(value);
					this.SendPropertyChanging();
					this._TOP = value;
					this.SendPropertyChanged("TOP");
					this.OnTOPChanged();
				}
			}
		}
		
		[Column(Storage="_BOTTOM", DbType="Float")]
		public System.Nullable<double> BOTTOM
		{
			get
			{
				return this._BOTTOM;
			}
			set
			{
				if ((this._BOTTOM != value))
				{
					this.OnBOTTOMChanging(value);
					this.SendPropertyChanging();
					this._BOTTOM = value;
					this.SendPropertyChanged("BOTTOM");
					this.OnBOTTOMChanged();
				}
			}
		}
		
		[Column(Storage="_SAMPLEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> SAMPLEDATE
		{
			get
			{
				return this._SAMPLEDATE;
			}
			set
			{
				if ((this._SAMPLEDATE != value))
				{
					this.OnSAMPLEDATEChanging(value);
					this.SendPropertyChanging();
					this._SAMPLEDATE = value;
					this.SendPropertyChanged("SAMPLEDATE");
					this.OnSAMPLEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_PROJECT", DbType="VarChar(6)")]
		public string PROJECT
		{
			get
			{
				return this._PROJECT;
			}
			set
			{
				if ((this._PROJECT != value))
				{
					this.OnPROJECTChanging(value);
					this.SendPropertyChanging();
					this._PROJECT = value;
					this.SendPropertyChanged("PROJECT");
					this.OnPROJECTChanged();
				}
			}
		}
		
		[Column(Storage="_LABORATORY", DbType="Int")]
		public System.Nullable<int> LABORATORY
		{
			get
			{
				return this._LABORATORY;
			}
			set
			{
				if ((this._LABORATORY != value))
				{
					this.OnLABORATORYChanging(value);
					this.SendPropertyChanging();
					this._LABORATORY = value;
					this.SendPropertyChanged("LABORATORY");
					this.OnLABORATORYChanged();
				}
			}
		}
		
		[Column(Storage="_LABORATORIYREFNO", DbType="VarChar(20)")]
		public string LABORATORIYREFNO
		{
			get
			{
				return this._LABORATORIYREFNO;
			}
			set
			{
				if ((this._LABORATORIYREFNO != value))
				{
					this.OnLABORATORIYREFNOChanging(value);
					this.SendPropertyChanging();
					this._LABORATORIYREFNO = value;
					this.SendPropertyChanged("LABORATORIYREFNO");
					this.OnLABORATORIYREFNOChanged();
				}
			}
		}
		
		[Column(Storage="_PURPOSE", DbType="Int")]
		public System.Nullable<int> PURPOSE
		{
			get
			{
				return this._PURPOSE;
			}
			set
			{
				if ((this._PURPOSE != value))
				{
					this.OnPURPOSEChanging(value);
					this.SendPropertyChanging();
					this._PURPOSE = value;
					this.SendPropertyChanged("PURPOSE");
					this.OnPURPOSEChanged();
				}
			}
		}
		
		[Column(Storage="_EXTENT", DbType="Int")]
		public System.Nullable<int> EXTENT
		{
			get
			{
				return this._EXTENT;
			}
			set
			{
				if ((this._EXTENT != value))
				{
					this.OnEXTENTChanging(value);
					this.SendPropertyChanging();
					this._EXTENT = value;
					this.SendPropertyChanged("EXTENT");
					this.OnEXTENTChanged();
				}
			}
		}
		
		[Column(Storage="_CAUSE", DbType="VarChar(2)")]
		public string CAUSE
		{
			get
			{
				return this._CAUSE;
			}
			set
			{
				if ((this._CAUSE != value))
				{
					this.OnCAUSEChanging(value);
					this.SendPropertyChanging();
					this._CAUSE = value;
					this.SendPropertyChanged("CAUSE");
					this.OnCAUSEChanged();
				}
			}
		}
		
		[Column(Storage="_SOURCETYPE", DbType="Int")]
		public System.Nullable<int> SOURCETYPE
		{
			get
			{
				return this._SOURCETYPE;
			}
			set
			{
				if ((this._SOURCETYPE != value))
				{
					this.OnSOURCETYPEChanging(value);
					this.SendPropertyChanging();
					this._SOURCETYPE = value;
					this.SendPropertyChanged("SOURCETYPE");
					this.OnSOURCETYPEChanged();
				}
			}
		}
		
		[Column(Storage="_WATERTYPE", DbType="Int")]
		public System.Nullable<int> WATERTYPE
		{
			get
			{
				return this._WATERTYPE;
			}
			set
			{
				if ((this._WATERTYPE != value))
				{
					this.OnWATERTYPEChanging(value);
					this.SendPropertyChanging();
					this._WATERTYPE = value;
					this.SendPropertyChanged("WATERTYPE");
					this.OnWATERTYPEChanged();
				}
			}
		}
		
		[Column(Storage="_REMARK", DbType="VarChar(60)")]
		public string REMARK
		{
			get
			{
				return this._REMARK;
			}
			set
			{
				if ((this._REMARK != value))
				{
					this.OnREMARKChanging(value);
					this.SendPropertyChanging();
					this._REMARK = value;
					this.SendPropertyChanged("REMARK");
					this.OnREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_SAMPLELOCALITY", DbType="VarChar(20)")]
		public string SAMPLELOCALITY
		{
			get
			{
				return this._SAMPLELOCALITY;
			}
			set
			{
				if ((this._SAMPLELOCALITY != value))
				{
					this.OnSAMPLELOCALITYChanging(value);
					this.SendPropertyChanging();
					this._SAMPLELOCALITY = value;
					this.SendPropertyChanged("SAMPLELOCALITY");
					this.OnSAMPLELOCALITYChanged();
				}
			}
		}
		
		[Column(Storage="_SUMCATIONSCALCULATED", DbType="Float")]
		public System.Nullable<double> SUMCATIONSCALCULATED
		{
			get
			{
				return this._SUMCATIONSCALCULATED;
			}
			set
			{
				if ((this._SUMCATIONSCALCULATED != value))
				{
					this.OnSUMCATIONSCALCULATEDChanging(value);
					this.SendPropertyChanging();
					this._SUMCATIONSCALCULATED = value;
					this.SendPropertyChanged("SUMCATIONSCALCULATED");
					this.OnSUMCATIONSCALCULATEDChanged();
				}
			}
		}
		
		[Column(Storage="_SUMANOINSCALCULATED", DbType="Float")]
		public System.Nullable<double> SUMANOINSCALCULATED
		{
			get
			{
				return this._SUMANOINSCALCULATED;
			}
			set
			{
				if ((this._SUMANOINSCALCULATED != value))
				{
					this.OnSUMANOINSCALCULATEDChanging(value);
					this.SendPropertyChanging();
					this._SUMANOINSCALCULATED = value;
					this.SendPropertyChanged("SUMANOINSCALCULATED");
					this.OnSUMANOINSCALCULATEDChanged();
				}
			}
		}
		
		[Column(Storage="_PREPROCESSING", DbType="Int")]
		public System.Nullable<int> PREPROCESSING
		{
			get
			{
				return this._PREPROCESSING;
			}
			set
			{
				if ((this._PREPROCESSING != value))
				{
					this.OnPREPROCESSINGChanging(value);
					this.SendPropertyChanging();
					this._PREPROCESSING = value;
					this.SendPropertyChanged("PREPROCESSING");
					this.OnPREPROCESSINGChanged();
				}
			}
		}
		
		[Column(Storage="_SAMPLEDBY", DbType="VarChar(40)")]
		public string SAMPLEDBY
		{
			get
			{
				return this._SAMPLEDBY;
			}
			set
			{
				if ((this._SAMPLEDBY != value))
				{
					this.OnSAMPLEDBYChanging(value);
					this.SendPropertyChanging();
					this._SAMPLEDBY = value;
					this.SendPropertyChanged("SAMPLEDBY");
					this.OnSAMPLEDBYChanged();
				}
			}
		}
		
		[Column(Storage="_CLIENT", DbType="Int")]
		public System.Nullable<int> CLIENT
		{
			get
			{
				return this._CLIENT;
			}
			set
			{
				if ((this._CLIENT != value))
				{
					this.OnCLIENTChanging(value);
					this.SendPropertyChanging();
					this._CLIENT = value;
					this.SendPropertyChanged("CLIENT");
					this.OnCLIENTChanged();
				}
			}
		}
		
		[Column(Storage="_CLIENTNAME", DbType="VarChar(60)")]
		public string CLIENTNAME
		{
			get
			{
				return this._CLIENTNAME;
			}
			set
			{
				if ((this._CLIENTNAME != value))
				{
					this.OnCLIENTNAMEChanging(value);
					this.SendPropertyChanging();
					this._CLIENTNAME = value;
					this.SendPropertyChanged("CLIENTNAME");
					this.OnCLIENTNAMEChanged();
				}
			}
		}
		
		[Column(Storage="_SAMPLEREPORTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> SAMPLEREPORTDATE
		{
			get
			{
				return this._SAMPLEREPORTDATE;
			}
			set
			{
				if ((this._SAMPLEREPORTDATE != value))
				{
					this.OnSAMPLEREPORTDATEChanging(value);
					this.SendPropertyChanging();
					this._SAMPLEREPORTDATE = value;
					this.SendPropertyChanged("SAMPLEREPORTDATE");
					this.OnSAMPLEREPORTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_VALIDATEDBY", DbType="VarChar(3)")]
		public string VALIDATEDBY
		{
			get
			{
				return this._VALIDATEDBY;
			}
			set
			{
				if ((this._VALIDATEDBY != value))
				{
					this.OnVALIDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._VALIDATEDBY = value;
					this.SendPropertyChanged("VALIDATEDBY");
					this.OnVALIDATEDBYChanged();
				}
			}
		}
		
		[Column(Storage="_CLEANINGSTART", DbType="DateTime")]
		public System.Nullable<System.DateTime> CLEANINGSTART
		{
			get
			{
				return this._CLEANINGSTART;
			}
			set
			{
				if ((this._CLEANINGSTART != value))
				{
					this.OnCLEANINGSTARTChanging(value);
					this.SendPropertyChanging();
					this._CLEANINGSTART = value;
					this.SendPropertyChanged("CLEANINGSTART");
					this.OnCLEANINGSTARTChanged();
				}
			}
		}
		
		[Column(Storage="_CLEANINGEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> CLEANINGEND
		{
			get
			{
				return this._CLEANINGEND;
			}
			set
			{
				if ((this._CLEANINGEND != value))
				{
					this.OnCLEANINGENDChanging(value);
					this.SendPropertyChanging();
					this._CLEANINGEND = value;
					this.SendPropertyChanged("CLEANINGEND");
					this.OnCLEANINGENDChanged();
				}
			}
		}
		
		[Column(Storage="_CLEANINGYIELD", DbType="Float")]
		public System.Nullable<double> CLEANINGYIELD
		{
			get
			{
				return this._CLEANINGYIELD;
			}
			set
			{
				if ((this._CLEANINGYIELD != value))
				{
					this.OnCLEANINGYIELDChanging(value);
					this.SendPropertyChanging();
					this._CLEANINGYIELD = value;
					this.SendPropertyChanged("CLEANINGYIELD");
					this.OnCLEANINGYIELDChanged();
				}
			}
		}
		
		[Column(Storage="_PARTOFSAMPLEID", DbType="Int")]
		public System.Nullable<int> PARTOFSAMPLEID
		{
			get
			{
				return this._PARTOFSAMPLEID;
			}
			set
			{
				if ((this._PARTOFSAMPLEID != value))
				{
					this.OnPARTOFSAMPLEIDChanging(value);
					this.SendPropertyChanging();
					this._PARTOFSAMPLEID = value;
					this.SendPropertyChanged("PARTOFSAMPLEID");
					this.OnPARTOFSAMPLEIDChanged();
				}
			}
		}
		
		[Column(Storage="_AMOUNT", DbType="Float")]
		public System.Nullable<double> AMOUNT
		{
			get
			{
				return this._AMOUNT;
			}
			set
			{
				if ((this._AMOUNT != value))
				{
					this.OnAMOUNTChanging(value);
					this.SendPropertyChanging();
					this._AMOUNT = value;
					this.SendPropertyChanged("AMOUNT");
					this.OnAMOUNTChanged();
				}
			}
		}
		
		[Column(Storage="_RESAMPLESTATUS", DbType="Int")]
		public System.Nullable<int> RESAMPLESTATUS
		{
			get
			{
				return this._RESAMPLESTATUS;
			}
			set
			{
				if ((this._RESAMPLESTATUS != value))
				{
					this.OnRESAMPLESTATUSChanging(value);
					this.SendPropertyChanging();
					this._RESAMPLESTATUS = value;
					this.SendPropertyChanged("RESAMPLESTATUS");
					this.OnRESAMPLESTATUSChanged();
				}
			}
		}
		
		[Column(Storage="_UNIT", DbType="Int")]
		public System.Nullable<int> UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[Column(Storage="_PREVIOUSSAMPLEID", DbType="Int")]
		public System.Nullable<int> PREVIOUSSAMPLEID
		{
			get
			{
				return this._PREVIOUSSAMPLEID;
			}
			set
			{
				if ((this._PREVIOUSSAMPLEID != value))
				{
					this.OnPREVIOUSSAMPLEIDChanging(value);
					this.SendPropertyChanging();
					this._PREVIOUSSAMPLEID = value;
					this.SendPropertyChanged("PREVIOUSSAMPLEID");
					this.OnPREVIOUSSAMPLEIDChanged();
				}
			}
		}
		
		[Column(Storage="_QUALITYCONTROL", DbType="Int")]
		public System.Nullable<int> QUALITYCONTROL
		{
			get
			{
				return this._QUALITYCONTROL;
			}
			set
			{
				if ((this._QUALITYCONTROL != value))
				{
					this.OnQUALITYCONTROLChanging(value);
					this.SendPropertyChanging();
					this._QUALITYCONTROL = value;
					this.SendPropertyChanged("QUALITYCONTROL");
					this.OnQUALITYCONTROLChanged();
				}
			}
		}
		
		[Column(Storage="_LABREFERENCENAME", DbType="VarChar(24)")]
		public string LABREFERENCENAME
		{
			get
			{
				return this._LABREFERENCENAME;
			}
			set
			{
				if ((this._LABREFERENCENAME != value))
				{
					this.OnLABREFERENCENAMEChanging(value);
					this.SendPropertyChanging();
					this._LABREFERENCENAME = value;
					this.SendPropertyChanged("LABREFERENCENAME");
					this.OnLABREFERENCENAMEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="GRWCHEMSAMPLE_GRWCHEMANALYSI", Storage="_GRWCHEMANALYSIs", ThisKey="SAMPLEID", OtherKey="SAMPLEID")]
		public EntitySet<GRWCHEMANALYSI> GRWCHEMANALYSIs
		{
			get
			{
				return this._GRWCHEMANALYSIs;
			}
			set
			{
				this._GRWCHEMANALYSIs.Assign(value);
			}
		}
		
		[Association(Name="BOREHOLE_GRWCHEMSAMPLE", Storage="_BOREHOLE", ThisKey="BOREHOLENO", OtherKey="BOREHOLENO", IsForeignKey=true)]
		public BOREHOLE BOREHOLE
		{
			get
			{
				return this._BOREHOLE.Entity;
			}
			set
			{
				BOREHOLE previousValue = this._BOREHOLE.Entity;
				if (((previousValue != value) 
							|| (this._BOREHOLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOREHOLE.Entity = null;
						previousValue.GRWCHEMSAMPLEs.Remove(this);
					}
					this._BOREHOLE.Entity = value;
					if ((value != null))
					{
						value.GRWCHEMSAMPLEs.Add(this);
						this._BOREHOLENO = value.BOREHOLENO;
					}
					else
					{
						this._BOREHOLENO = default(string);
					}
					this.SendPropertyChanged("BOREHOLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GRWCHEMANALYSIs(GRWCHEMANALYSI entity)
		{
			this.SendPropertyChanging();
			entity.GRWCHEMSAMPLE = this;
		}
		
		private void detach_GRWCHEMANALYSIs(GRWCHEMANALYSI entity)
		{
			this.SendPropertyChanging();
			entity.GRWCHEMSAMPLE = null;
		}
	}
	
	[Table(Name="dbo.GRWCHEMANALYSIS")]
	public partial class GRWCHEMANALYSI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SAMPLEID;
		
		private int _COMPOUNDNO;
		
		private int _ANALYSISNO;
		
		private int _ANALYSISSITE;
		
		private System.Nullable<int> _FIELDFILTRATION;
		
		private System.Nullable<char> _ATTRIBUTE;
		
		private System.Nullable<double> _AMOUNT;
		
		private System.Nullable<int> _UNIT;
		
		private System.Nullable<int> _REPORTEDCOMPOUNDNO;
		
		private System.Nullable<int> _REPORTEDUNIT;
		
		private System.Nullable<double> _REPORTEDAMOUNT;
		
		private System.Nullable<int> _LABORATORY;
		
		private string _LABORATORYREFNO;
		
		private System.Nullable<int> _ANALYSISMETHOD;
		
		private System.Nullable<int> _QUALITYCONTROL;
		
		private string _REMARK;
		
		private System.Nullable<int> _PREPROCESSING;
		
		private System.Nullable<int> _PRESERVATION;
		
		private System.Nullable<int> _PACKING;
		
		private System.Nullable<double> _DETECTIONLIMIT;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntityRef<GRWCHEMSAMPLE> _GRWCHEMSAMPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSAMPLEIDChanging(int value);
    partial void OnSAMPLEIDChanged();
    partial void OnCOMPOUNDNOChanging(int value);
    partial void OnCOMPOUNDNOChanged();
    partial void OnANALYSISNOChanging(int value);
    partial void OnANALYSISNOChanged();
    partial void OnANALYSISSITEChanging(int value);
    partial void OnANALYSISSITEChanged();
    partial void OnFIELDFILTRATIONChanging(System.Nullable<int> value);
    partial void OnFIELDFILTRATIONChanged();
    partial void OnATTRIBUTEChanging(System.Nullable<char> value);
    partial void OnATTRIBUTEChanged();
    partial void OnAMOUNTChanging(System.Nullable<double> value);
    partial void OnAMOUNTChanged();
    partial void OnUNITChanging(System.Nullable<int> value);
    partial void OnUNITChanged();
    partial void OnREPORTEDCOMPOUNDNOChanging(System.Nullable<int> value);
    partial void OnREPORTEDCOMPOUNDNOChanged();
    partial void OnREPORTEDUNITChanging(System.Nullable<int> value);
    partial void OnREPORTEDUNITChanged();
    partial void OnREPORTEDAMOUNTChanging(System.Nullable<double> value);
    partial void OnREPORTEDAMOUNTChanged();
    partial void OnLABORATORYChanging(System.Nullable<int> value);
    partial void OnLABORATORYChanged();
    partial void OnLABORATORYREFNOChanging(string value);
    partial void OnLABORATORYREFNOChanged();
    partial void OnANALYSISMETHODChanging(System.Nullable<int> value);
    partial void OnANALYSISMETHODChanged();
    partial void OnQUALITYCONTROLChanging(System.Nullable<int> value);
    partial void OnQUALITYCONTROLChanged();
    partial void OnREMARKChanging(string value);
    partial void OnREMARKChanged();
    partial void OnPREPROCESSINGChanging(System.Nullable<int> value);
    partial void OnPREPROCESSINGChanged();
    partial void OnPRESERVATIONChanging(System.Nullable<int> value);
    partial void OnPRESERVATIONChanged();
    partial void OnPACKINGChanging(System.Nullable<int> value);
    partial void OnPACKINGChanged();
    partial void OnDETECTIONLIMITChanging(System.Nullable<double> value);
    partial void OnDETECTIONLIMITChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public GRWCHEMANALYSI()
		{
			this._GRWCHEMSAMPLE = default(EntityRef<GRWCHEMSAMPLE>);
			OnCreated();
		}
		
		[Column(Storage="_SAMPLEID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SAMPLEID
		{
			get
			{
				return this._SAMPLEID;
			}
			set
			{
				if ((this._SAMPLEID != value))
				{
					if (this._GRWCHEMSAMPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSAMPLEIDChanging(value);
					this.SendPropertyChanging();
					this._SAMPLEID = value;
					this.SendPropertyChanged("SAMPLEID");
					this.OnSAMPLEIDChanged();
				}
			}
		}
		
		[Column(Storage="_COMPOUNDNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int COMPOUNDNO
		{
			get
			{
				return this._COMPOUNDNO;
			}
			set
			{
				if ((this._COMPOUNDNO != value))
				{
					this.OnCOMPOUNDNOChanging(value);
					this.SendPropertyChanging();
					this._COMPOUNDNO = value;
					this.SendPropertyChanged("COMPOUNDNO");
					this.OnCOMPOUNDNOChanged();
				}
			}
		}
		
		[Column(Storage="_ANALYSISNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ANALYSISNO
		{
			get
			{
				return this._ANALYSISNO;
			}
			set
			{
				if ((this._ANALYSISNO != value))
				{
					this.OnANALYSISNOChanging(value);
					this.SendPropertyChanging();
					this._ANALYSISNO = value;
					this.SendPropertyChanged("ANALYSISNO");
					this.OnANALYSISNOChanged();
				}
			}
		}
		
		[Column(Storage="_ANALYSISSITE", DbType="Int NOT NULL")]
		public int ANALYSISSITE
		{
			get
			{
				return this._ANALYSISSITE;
			}
			set
			{
				if ((this._ANALYSISSITE != value))
				{
					this.OnANALYSISSITEChanging(value);
					this.SendPropertyChanging();
					this._ANALYSISSITE = value;
					this.SendPropertyChanged("ANALYSISSITE");
					this.OnANALYSISSITEChanged();
				}
			}
		}
		
		[Column(Storage="_FIELDFILTRATION", DbType="Int")]
		public System.Nullable<int> FIELDFILTRATION
		{
			get
			{
				return this._FIELDFILTRATION;
			}
			set
			{
				if ((this._FIELDFILTRATION != value))
				{
					this.OnFIELDFILTRATIONChanging(value);
					this.SendPropertyChanging();
					this._FIELDFILTRATION = value;
					this.SendPropertyChanged("FIELDFILTRATION");
					this.OnFIELDFILTRATIONChanged();
				}
			}
		}
		
		[Column(Storage="_ATTRIBUTE", DbType="VarChar(1)")]
		public System.Nullable<char> ATTRIBUTE
		{
			get
			{
				return this._ATTRIBUTE;
			}
			set
			{
				if ((this._ATTRIBUTE != value))
				{
					this.OnATTRIBUTEChanging(value);
					this.SendPropertyChanging();
					this._ATTRIBUTE = value;
					this.SendPropertyChanged("ATTRIBUTE");
					this.OnATTRIBUTEChanged();
				}
			}
		}
		
		[Column(Storage="_AMOUNT", DbType="Float")]
		public System.Nullable<double> AMOUNT
		{
			get
			{
				return this._AMOUNT;
			}
			set
			{
				if ((this._AMOUNT != value))
				{
					this.OnAMOUNTChanging(value);
					this.SendPropertyChanging();
					this._AMOUNT = value;
					this.SendPropertyChanged("AMOUNT");
					this.OnAMOUNTChanged();
				}
			}
		}
		
		[Column(Storage="_UNIT", DbType="Int")]
		public System.Nullable<int> UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[Column(Storage="_REPORTEDCOMPOUNDNO", DbType="Int")]
		public System.Nullable<int> REPORTEDCOMPOUNDNO
		{
			get
			{
				return this._REPORTEDCOMPOUNDNO;
			}
			set
			{
				if ((this._REPORTEDCOMPOUNDNO != value))
				{
					this.OnREPORTEDCOMPOUNDNOChanging(value);
					this.SendPropertyChanging();
					this._REPORTEDCOMPOUNDNO = value;
					this.SendPropertyChanged("REPORTEDCOMPOUNDNO");
					this.OnREPORTEDCOMPOUNDNOChanged();
				}
			}
		}
		
		[Column(Storage="_REPORTEDUNIT", DbType="Int")]
		public System.Nullable<int> REPORTEDUNIT
		{
			get
			{
				return this._REPORTEDUNIT;
			}
			set
			{
				if ((this._REPORTEDUNIT != value))
				{
					this.OnREPORTEDUNITChanging(value);
					this.SendPropertyChanging();
					this._REPORTEDUNIT = value;
					this.SendPropertyChanged("REPORTEDUNIT");
					this.OnREPORTEDUNITChanged();
				}
			}
		}
		
		[Column(Storage="_REPORTEDAMOUNT", DbType="Float")]
		public System.Nullable<double> REPORTEDAMOUNT
		{
			get
			{
				return this._REPORTEDAMOUNT;
			}
			set
			{
				if ((this._REPORTEDAMOUNT != value))
				{
					this.OnREPORTEDAMOUNTChanging(value);
					this.SendPropertyChanging();
					this._REPORTEDAMOUNT = value;
					this.SendPropertyChanged("REPORTEDAMOUNT");
					this.OnREPORTEDAMOUNTChanged();
				}
			}
		}
		
		[Column(Storage="_LABORATORY", DbType="Int")]
		public System.Nullable<int> LABORATORY
		{
			get
			{
				return this._LABORATORY;
			}
			set
			{
				if ((this._LABORATORY != value))
				{
					this.OnLABORATORYChanging(value);
					this.SendPropertyChanging();
					this._LABORATORY = value;
					this.SendPropertyChanged("LABORATORY");
					this.OnLABORATORYChanged();
				}
			}
		}
		
		[Column(Storage="_LABORATORYREFNO", DbType="VarChar(20)")]
		public string LABORATORYREFNO
		{
			get
			{
				return this._LABORATORYREFNO;
			}
			set
			{
				if ((this._LABORATORYREFNO != value))
				{
					this.OnLABORATORYREFNOChanging(value);
					this.SendPropertyChanging();
					this._LABORATORYREFNO = value;
					this.SendPropertyChanged("LABORATORYREFNO");
					this.OnLABORATORYREFNOChanged();
				}
			}
		}
		
		[Column(Storage="_ANALYSISMETHOD", DbType="Int")]
		public System.Nullable<int> ANALYSISMETHOD
		{
			get
			{
				return this._ANALYSISMETHOD;
			}
			set
			{
				if ((this._ANALYSISMETHOD != value))
				{
					this.OnANALYSISMETHODChanging(value);
					this.SendPropertyChanging();
					this._ANALYSISMETHOD = value;
					this.SendPropertyChanged("ANALYSISMETHOD");
					this.OnANALYSISMETHODChanged();
				}
			}
		}
		
		[Column(Storage="_QUALITYCONTROL", DbType="Int")]
		public System.Nullable<int> QUALITYCONTROL
		{
			get
			{
				return this._QUALITYCONTROL;
			}
			set
			{
				if ((this._QUALITYCONTROL != value))
				{
					this.OnQUALITYCONTROLChanging(value);
					this.SendPropertyChanging();
					this._QUALITYCONTROL = value;
					this.SendPropertyChanged("QUALITYCONTROL");
					this.OnQUALITYCONTROLChanged();
				}
			}
		}
		
		[Column(Storage="_REMARK", DbType="VarChar(60)")]
		public string REMARK
		{
			get
			{
				return this._REMARK;
			}
			set
			{
				if ((this._REMARK != value))
				{
					this.OnREMARKChanging(value);
					this.SendPropertyChanging();
					this._REMARK = value;
					this.SendPropertyChanged("REMARK");
					this.OnREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_PREPROCESSING", DbType="Int")]
		public System.Nullable<int> PREPROCESSING
		{
			get
			{
				return this._PREPROCESSING;
			}
			set
			{
				if ((this._PREPROCESSING != value))
				{
					this.OnPREPROCESSINGChanging(value);
					this.SendPropertyChanging();
					this._PREPROCESSING = value;
					this.SendPropertyChanged("PREPROCESSING");
					this.OnPREPROCESSINGChanged();
				}
			}
		}
		
		[Column(Storage="_PRESERVATION", DbType="Int")]
		public System.Nullable<int> PRESERVATION
		{
			get
			{
				return this._PRESERVATION;
			}
			set
			{
				if ((this._PRESERVATION != value))
				{
					this.OnPRESERVATIONChanging(value);
					this.SendPropertyChanging();
					this._PRESERVATION = value;
					this.SendPropertyChanged("PRESERVATION");
					this.OnPRESERVATIONChanged();
				}
			}
		}
		
		[Column(Storage="_PACKING", DbType="Int")]
		public System.Nullable<int> PACKING
		{
			get
			{
				return this._PACKING;
			}
			set
			{
				if ((this._PACKING != value))
				{
					this.OnPACKINGChanging(value);
					this.SendPropertyChanging();
					this._PACKING = value;
					this.SendPropertyChanged("PACKING");
					this.OnPACKINGChanged();
				}
			}
		}
		
		[Column(Storage="_DETECTIONLIMIT", DbType="Float")]
		public System.Nullable<double> DETECTIONLIMIT
		{
			get
			{
				return this._DETECTIONLIMIT;
			}
			set
			{
				if ((this._DETECTIONLIMIT != value))
				{
					this.OnDETECTIONLIMITChanging(value);
					this.SendPropertyChanging();
					this._DETECTIONLIMIT = value;
					this.SendPropertyChanged("DETECTIONLIMIT");
					this.OnDETECTIONLIMITChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="GRWCHEMSAMPLE_GRWCHEMANALYSI", Storage="_GRWCHEMSAMPLE", ThisKey="SAMPLEID", OtherKey="SAMPLEID", IsForeignKey=true)]
		public GRWCHEMSAMPLE GRWCHEMSAMPLE
		{
			get
			{
				return this._GRWCHEMSAMPLE.Entity;
			}
			set
			{
				GRWCHEMSAMPLE previousValue = this._GRWCHEMSAMPLE.Entity;
				if (((previousValue != value) 
							|| (this._GRWCHEMSAMPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRWCHEMSAMPLE.Entity = null;
						previousValue.GRWCHEMANALYSIs.Remove(this);
					}
					this._GRWCHEMSAMPLE.Entity = value;
					if ((value != null))
					{
						value.GRWCHEMANALYSIs.Add(this);
						this._SAMPLEID = value.SAMPLEID;
					}
					else
					{
						this._SAMPLEID = default(int);
					}
					this.SendPropertyChanged("GRWCHEMSAMPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.COMPOUNDLIST")]
	public partial class COMPOUNDLIST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COMPOUNDNO;
		
		private string _LONG_TEXT;
		
		private string _SHORT_TEXT;
		
		private System.Nullable<int> _SORTNO;
		
		private System.Nullable<int> _CASNO;
		
		private System.Nullable<int> _EUNO;
		
		private System.Nullable<System.DateTime> _LIMITATIONDATE;
		
		private System.Nullable<double> _MOLARWEIGHT;
		
		private System.Nullable<double> _CHARGE;
		
		private string _REMARK;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOMPOUNDNOChanging(int value);
    partial void OnCOMPOUNDNOChanged();
    partial void OnLONG_TEXTChanging(string value);
    partial void OnLONG_TEXTChanged();
    partial void OnSHORT_TEXTChanging(string value);
    partial void OnSHORT_TEXTChanged();
    partial void OnSORTNOChanging(System.Nullable<int> value);
    partial void OnSORTNOChanged();
    partial void OnCASNOChanging(System.Nullable<int> value);
    partial void OnCASNOChanged();
    partial void OnEUNOChanging(System.Nullable<int> value);
    partial void OnEUNOChanged();
    partial void OnLIMITATIONDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnLIMITATIONDATEChanged();
    partial void OnMOLARWEIGHTChanging(System.Nullable<double> value);
    partial void OnMOLARWEIGHTChanged();
    partial void OnCHARGEChanging(System.Nullable<double> value);
    partial void OnCHARGEChanged();
    partial void OnREMARKChanging(string value);
    partial void OnREMARKChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    #endregion
		
		public COMPOUNDLIST()
		{
			OnCreated();
		}
		
		[Column(Storage="_COMPOUNDNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int COMPOUNDNO
		{
			get
			{
				return this._COMPOUNDNO;
			}
			set
			{
				if ((this._COMPOUNDNO != value))
				{
					this.OnCOMPOUNDNOChanging(value);
					this.SendPropertyChanging();
					this._COMPOUNDNO = value;
					this.SendPropertyChanged("COMPOUNDNO");
					this.OnCOMPOUNDNOChanged();
				}
			}
		}
		
		[Column(Storage="_LONG_TEXT", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string LONG_TEXT
		{
			get
			{
				return this._LONG_TEXT;
			}
			set
			{
				if ((this._LONG_TEXT != value))
				{
					this.OnLONG_TEXTChanging(value);
					this.SendPropertyChanging();
					this._LONG_TEXT = value;
					this.SendPropertyChanged("LONG_TEXT");
					this.OnLONG_TEXTChanged();
				}
			}
		}
		
		[Column(Storage="_SHORT_TEXT", DbType="VarChar(20)")]
		public string SHORT_TEXT
		{
			get
			{
				return this._SHORT_TEXT;
			}
			set
			{
				if ((this._SHORT_TEXT != value))
				{
					this.OnSHORT_TEXTChanging(value);
					this.SendPropertyChanging();
					this._SHORT_TEXT = value;
					this.SendPropertyChanged("SHORT_TEXT");
					this.OnSHORT_TEXTChanged();
				}
			}
		}
		
		[Column(Storage="_SORTNO", DbType="Int")]
		public System.Nullable<int> SORTNO
		{
			get
			{
				return this._SORTNO;
			}
			set
			{
				if ((this._SORTNO != value))
				{
					this.OnSORTNOChanging(value);
					this.SendPropertyChanging();
					this._SORTNO = value;
					this.SendPropertyChanged("SORTNO");
					this.OnSORTNOChanged();
				}
			}
		}
		
		[Column(Storage="_CASNO", DbType="Int")]
		public System.Nullable<int> CASNO
		{
			get
			{
				return this._CASNO;
			}
			set
			{
				if ((this._CASNO != value))
				{
					this.OnCASNOChanging(value);
					this.SendPropertyChanging();
					this._CASNO = value;
					this.SendPropertyChanged("CASNO");
					this.OnCASNOChanged();
				}
			}
		}
		
		[Column(Storage="_EUNO", DbType="Int")]
		public System.Nullable<int> EUNO
		{
			get
			{
				return this._EUNO;
			}
			set
			{
				if ((this._EUNO != value))
				{
					this.OnEUNOChanging(value);
					this.SendPropertyChanging();
					this._EUNO = value;
					this.SendPropertyChanged("EUNO");
					this.OnEUNOChanged();
				}
			}
		}
		
		[Column(Storage="_LIMITATIONDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> LIMITATIONDATE
		{
			get
			{
				return this._LIMITATIONDATE;
			}
			set
			{
				if ((this._LIMITATIONDATE != value))
				{
					this.OnLIMITATIONDATEChanging(value);
					this.SendPropertyChanging();
					this._LIMITATIONDATE = value;
					this.SendPropertyChanged("LIMITATIONDATE");
					this.OnLIMITATIONDATEChanged();
				}
			}
		}
		
		[Column(Storage="_MOLARWEIGHT", DbType="Float")]
		public System.Nullable<double> MOLARWEIGHT
		{
			get
			{
				return this._MOLARWEIGHT;
			}
			set
			{
				if ((this._MOLARWEIGHT != value))
				{
					this.OnMOLARWEIGHTChanging(value);
					this.SendPropertyChanging();
					this._MOLARWEIGHT = value;
					this.SendPropertyChanged("MOLARWEIGHT");
					this.OnMOLARWEIGHTChanged();
				}
			}
		}
		
		[Column(Storage="_CHARGE", DbType="Float")]
		public System.Nullable<double> CHARGE
		{
			get
			{
				return this._CHARGE;
			}
			set
			{
				if ((this._CHARGE != value))
				{
					this.OnCHARGEChanging(value);
					this.SendPropertyChanging();
					this._CHARGE = value;
					this.SendPropertyChanged("CHARGE");
					this.OnCHARGEChanged();
				}
			}
		}
		
		[Column(Storage="_REMARK", DbType="VarChar(305)")]
		public string REMARK
		{
			get
			{
				return this._REMARK;
			}
			set
			{
				if ((this._REMARK != value))
				{
					this.OnREMARKChanging(value);
					this.SendPropertyChanging();
					this._REMARK = value;
					this.SendPropertyChanged("REMARK");
					this.OnREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WRRCATCHMENT")]
	public partial class WRRCATCHMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PLANTCATCHMENTID;
		
		private System.Nullable<int> _PLANTID;
		
		private System.Nullable<int> _CATCHMENTNO;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private System.Nullable<char> _ATTRIBUTE;
		
		private System.Nullable<int> _AMOUNT;
		
		private System.Nullable<int> _METHOD;
		
		private System.Nullable<double> _FLOWMETERSTART;
		
		private System.Nullable<double> _FLOWMETEREND;
		
		private string _REMARK;
		
		private System.Nullable<float> _CONVERSIONFACTOR;
		
		private System.Nullable<int> _SURFACEWATERVOLUME;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private EntityRef<DRWPLANT> _DRWPLANT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPLANTCATCHMENTIDChanging(int value);
    partial void OnPLANTCATCHMENTIDChanged();
    partial void OnPLANTIDChanging(System.Nullable<int> value);
    partial void OnPLANTIDChanged();
    partial void OnCATCHMENTNOChanging(System.Nullable<int> value);
    partial void OnCATCHMENTNOChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnATTRIBUTEChanging(System.Nullable<char> value);
    partial void OnATTRIBUTEChanged();
    partial void OnAMOUNTChanging(System.Nullable<int> value);
    partial void OnAMOUNTChanged();
    partial void OnMETHODChanging(System.Nullable<int> value);
    partial void OnMETHODChanged();
    partial void OnFLOWMETERSTARTChanging(System.Nullable<double> value);
    partial void OnFLOWMETERSTARTChanged();
    partial void OnFLOWMETERENDChanging(System.Nullable<double> value);
    partial void OnFLOWMETERENDChanged();
    partial void OnREMARKChanging(string value);
    partial void OnREMARKChanged();
    partial void OnCONVERSIONFACTORChanging(System.Nullable<float> value);
    partial void OnCONVERSIONFACTORChanged();
    partial void OnSURFACEWATERVOLUMEChanging(System.Nullable<int> value);
    partial void OnSURFACEWATERVOLUMEChanged();
    partial void OnINSERTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINSERTDATEChanged();
    partial void OnUPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATEChanged();
    partial void OnINSERTUSERChanging(string value);
    partial void OnINSERTUSERChanged();
    partial void OnUPDATEUSERChanging(string value);
    partial void OnUPDATEUSERChanged();
    #endregion
		
		public WRRCATCHMENT()
		{
			this._DRWPLANT = default(EntityRef<DRWPLANT>);
			OnCreated();
		}
		
		[Column(Storage="_PLANTCATCHMENTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PLANTCATCHMENTID
		{
			get
			{
				return this._PLANTCATCHMENTID;
			}
			set
			{
				if ((this._PLANTCATCHMENTID != value))
				{
					this.OnPLANTCATCHMENTIDChanging(value);
					this.SendPropertyChanging();
					this._PLANTCATCHMENTID = value;
					this.SendPropertyChanged("PLANTCATCHMENTID");
					this.OnPLANTCATCHMENTIDChanged();
				}
			}
		}
		
		[Column(Storage="_PLANTID", DbType="Int")]
		public System.Nullable<int> PLANTID
		{
			get
			{
				return this._PLANTID;
			}
			set
			{
				if ((this._PLANTID != value))
				{
					if (this._DRWPLANT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPLANTIDChanging(value);
					this.SendPropertyChanging();
					this._PLANTID = value;
					this.SendPropertyChanged("PLANTID");
					this.OnPLANTIDChanged();
				}
			}
		}
		
		[Column(Storage="_CATCHMENTNO", DbType="Int")]
		public System.Nullable<int> CATCHMENTNO
		{
			get
			{
				return this._CATCHMENTNO;
			}
			set
			{
				if ((this._CATCHMENTNO != value))
				{
					this.OnCATCHMENTNOChanging(value);
					this.SendPropertyChanging();
					this._CATCHMENTNO = value;
					this.SendPropertyChanged("CATCHMENTNO");
					this.OnCATCHMENTNOChanged();
				}
			}
		}
		
		[Column(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[Column(Storage="_ATTRIBUTE", DbType="VarChar(1)")]
		public System.Nullable<char> ATTRIBUTE
		{
			get
			{
				return this._ATTRIBUTE;
			}
			set
			{
				if ((this._ATTRIBUTE != value))
				{
					this.OnATTRIBUTEChanging(value);
					this.SendPropertyChanging();
					this._ATTRIBUTE = value;
					this.SendPropertyChanged("ATTRIBUTE");
					this.OnATTRIBUTEChanged();
				}
			}
		}
		
		[Column(Storage="_AMOUNT", DbType="Int")]
		public System.Nullable<int> AMOUNT
		{
			get
			{
				return this._AMOUNT;
			}
			set
			{
				if ((this._AMOUNT != value))
				{
					this.OnAMOUNTChanging(value);
					this.SendPropertyChanging();
					this._AMOUNT = value;
					this.SendPropertyChanged("AMOUNT");
					this.OnAMOUNTChanged();
				}
			}
		}
		
		[Column(Storage="_METHOD", DbType="Int")]
		public System.Nullable<int> METHOD
		{
			get
			{
				return this._METHOD;
			}
			set
			{
				if ((this._METHOD != value))
				{
					this.OnMETHODChanging(value);
					this.SendPropertyChanging();
					this._METHOD = value;
					this.SendPropertyChanged("METHOD");
					this.OnMETHODChanged();
				}
			}
		}
		
		[Column(Storage="_FLOWMETERSTART", DbType="Float")]
		public System.Nullable<double> FLOWMETERSTART
		{
			get
			{
				return this._FLOWMETERSTART;
			}
			set
			{
				if ((this._FLOWMETERSTART != value))
				{
					this.OnFLOWMETERSTARTChanging(value);
					this.SendPropertyChanging();
					this._FLOWMETERSTART = value;
					this.SendPropertyChanged("FLOWMETERSTART");
					this.OnFLOWMETERSTARTChanged();
				}
			}
		}
		
		[Column(Storage="_FLOWMETEREND", DbType="Float")]
		public System.Nullable<double> FLOWMETEREND
		{
			get
			{
				return this._FLOWMETEREND;
			}
			set
			{
				if ((this._FLOWMETEREND != value))
				{
					this.OnFLOWMETERENDChanging(value);
					this.SendPropertyChanging();
					this._FLOWMETEREND = value;
					this.SendPropertyChanged("FLOWMETEREND");
					this.OnFLOWMETERENDChanged();
				}
			}
		}
		
		[Column(Storage="_REMARK", DbType="VarChar(255)")]
		public string REMARK
		{
			get
			{
				return this._REMARK;
			}
			set
			{
				if ((this._REMARK != value))
				{
					this.OnREMARKChanging(value);
					this.SendPropertyChanging();
					this._REMARK = value;
					this.SendPropertyChanged("REMARK");
					this.OnREMARKChanged();
				}
			}
		}
		
		[Column(Storage="_CONVERSIONFACTOR", DbType="Real")]
		public System.Nullable<float> CONVERSIONFACTOR
		{
			get
			{
				return this._CONVERSIONFACTOR;
			}
			set
			{
				if ((this._CONVERSIONFACTOR != value))
				{
					this.OnCONVERSIONFACTORChanging(value);
					this.SendPropertyChanging();
					this._CONVERSIONFACTOR = value;
					this.SendPropertyChanged("CONVERSIONFACTOR");
					this.OnCONVERSIONFACTORChanged();
				}
			}
		}
		
		[Column(Storage="_SURFACEWATERVOLUME", DbType="Int")]
		public System.Nullable<int> SURFACEWATERVOLUME
		{
			get
			{
				return this._SURFACEWATERVOLUME;
			}
			set
			{
				if ((this._SURFACEWATERVOLUME != value))
				{
					this.OnSURFACEWATERVOLUMEChanging(value);
					this.SendPropertyChanging();
					this._SURFACEWATERVOLUME = value;
					this.SendPropertyChanged("SURFACEWATERVOLUME");
					this.OnSURFACEWATERVOLUMEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this.OnINSERTDATEChanging(value);
					this.SendPropertyChanging();
					this._INSERTDATE = value;
					this.SendPropertyChanged("INSERTDATE");
					this.OnINSERTDATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this.OnINSERTUSERChanging(value);
					this.SendPropertyChanging();
					this._INSERTUSER = value;
					this.SendPropertyChanged("INSERTUSER");
					this.OnINSERTUSERChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this.OnUPDATEUSERChanging(value);
					this.SendPropertyChanging();
					this._UPDATEUSER = value;
					this.SendPropertyChanged("UPDATEUSER");
					this.OnUPDATEUSERChanged();
				}
			}
		}
		
		[Association(Name="DRWPLANT_WRRCATCHMENT", Storage="_DRWPLANT", ThisKey="PLANTID", OtherKey="PLANTID", IsForeignKey=true)]
		public DRWPLANT DRWPLANT
		{
			get
			{
				return this._DRWPLANT.Entity;
			}
			set
			{
				DRWPLANT previousValue = this._DRWPLANT.Entity;
				if (((previousValue != value) 
							|| (this._DRWPLANT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DRWPLANT.Entity = null;
						previousValue.WRRCATCHMENTs.Remove(this);
					}
					this._DRWPLANT.Entity = value;
					if ((value != null))
					{
						value.WRRCATCHMENTs.Add(this);
						this._PLANTID = value.PLANTID;
					}
					else
					{
						this._PLANTID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DRWPLANT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BorIntScre")]
	public partial class BorIntScre
	{
		
		private string _BOREHOLENO;
		
		private string _NAMINGSYS;
		
		private string _PURPOSE;
		
		private string _USE;
		
		private string _STATUS;
		
		private System.Nullable<double> _DRILLDEPTH;
		
		private System.Nullable<double> _ELEVATION;
		
		private System.Nullable<double> _CTRPELEVA;
		
		private string _VERTICAREF;
		
		private string _CTRPDESCR;
		
		private System.Nullable<float> _CTRPPRECIS;
		
		private System.Nullable<float> _CTRPZPRECIS;
		
		private System.Nullable<float> _CTRPHEIGHT;
		
		private string _ELEVAMETHO;
		
		private string _ELEVAQUALI;
		
		private System.Nullable<char> _ELEVASOURC;
		
		private string _LOCATION;
		
		private string _COMMENTS;
		
		private string _VARIOUS;
		
		private System.Nullable<double> _XUTM;
		
		private System.Nullable<double> _YUTM;
		
		private System.Nullable<int> _UTMZONE;
		
		private string _DATUM;
		
		private string _MAPSHEET;
		
		private System.Nullable<double> _MAPDISTX;
		
		private System.Nullable<double> _MAPDISTY;
		
		private System.Nullable<double> _SYS34X;
		
		private System.Nullable<double> _SYS34Y;
		
		private System.Nullable<int> _SYS34ZONE;
		
		private System.Nullable<double> _LATITUDE;
		
		private System.Nullable<double> _LONGITUDE;
		
		private string _LOCATMETHO;
		
		private string _LOCATQUALI;
		
		private string _LOCATSOURC;
		
		private System.Nullable<int> _BORHPOSTC;
		
		private System.Nullable<int> _BORHTOWNNO;
		
		private System.Nullable<int> _COUNTYNO;
		
		private string _MUNICIPAL;
		
		private System.Nullable<int> _HOUSEOWNAS;
		
		private string _LANDREGNO;
		
		private string _DRILLER;
		
		private string _DRILLLOGNO;
		
		private string _DRILLBORNO;
		
		private System.Nullable<char> _REPORTEDBY;
		
		private string _CONSULTANT;
		
		private string _CONSULOGNO;
		
		private string _CONSUBORNO;
		
		private string _DRILLEDFOR;
		
		private string _DRFORADRES;
		
		private System.Nullable<int> _DRFORPOSTC;
		
		private System.Nullable<System.DateTime> _DRILSTDATE;
		
		private System.Nullable<System.DateTime> _DRILENDATE;
		
		private System.Nullable<System.DateTime> _ABANDONDAT;
		
		private string _PREVBORHNO;
		
		private System.Nullable<int> _NUMSUPLBOR;
		
		private System.Nullable<System.DateTime> _SAMRECEDAT;
		
		private System.Nullable<System.DateTime> _SAMDESCDAT;
		
		private System.Nullable<int> _NUMOFSAMPL;
		
		private System.Nullable<int> _NUMSAMSTO;
		
		private string _LITHOLNOTE;
		
		private System.Nullable<System.DateTime> _TOGEUSDATE;
		
		private System.Nullable<int> _GRUMOCOUNTYNO;
		
		private System.Nullable<int> _GRUMOBORNO;
		
		private System.Nullable<int> _GRUMOBORTYPE;
		
		private System.Nullable<int> _GRUMOAREANO;
		
		private System.Nullable<int> _BORHTOWNNO2007;
		
		private string _LOCQUALI;
		
		private System.Nullable<int> _LOOPAREANO;
		
		private System.Nullable<int> _LOOPSTATION;
		
		private System.Nullable<int> _LOOPTYPE;
		
		private System.Nullable<System.DateTime> _USECHANGEDATE;
		
		private System.Nullable<int> _ENVCEN;
		
		private System.Nullable<char> _ABANDCAUSE;
		
		private string _ABANDCONTR;
		
		private string _STARTDAYUNKNOWN;
		
		private string _STARTMNTHUNKNWN;
		
		private string _WWBOREHOLENO;
		
		private System.Nullable<double> _XUTM32EUREF89;
		
		private System.Nullable<double> _YUTM32EUREF89;
		
		private System.Nullable<double> _ZDVR90;
		
		private string _INSTALLATION;
		
		private string _WORKINGCONDITIONS;
		
		private string _APPROACH;
		
		private string _ACCESSREMARK;
		
		private string _LOCATEPERSONEMAIL;
		
		private System.Nullable<int> _PRESERVATIONZONE;
		
		private System.Nullable<int> _PROTECTIONZONE;
		
		private System.Nullable<int> _REGION;
		
		private System.Nullable<int> _USECHANGECAUSE;
		
		private System.Nullable<System.DateTime> _INSERTDATE;
		
		private System.Nullable<System.DateTime> _UPDATEDATE;
		
		private string _INSERTUSER;
		
		private string _UPDATEUSER;
		
		private string _Expr1;
		
		private System.Nullable<int> _INTAKENO;
		
		private System.Nullable<int> _STRINGNO;
		
		private System.Nullable<char> _WATERAGE;
		
		private string _DEPOSITNO;
		
		private System.Nullable<int> _DEPOSITTYPE;
		
		private System.Nullable<char> _MAINCLASS;
		
		private System.Nullable<int> _MONITORINGTYPE;
		
		private string _RESERVOIRROCK;
		
		private System.Nullable<int> _RESERVOIRTYPE;
		
		private System.Nullable<char> _SPECIALUSABLE;
		
		private System.Nullable<int> _WATERTABLETYPE;
		
		private string _SOUNDABILITY;
		
		private string _SOUNDABILITYREMARK;
		
		private System.Nullable<double> _SOUNDTUBEINSIDEDIAM;
		
		private System.Nullable<System.DateTime> _Expr2;
		
		private System.Nullable<System.DateTime> _Expr3;
		
		private string _Expr4;
		
		private string _Expr5;
		
		private string _Expr6;
		
		private System.Nullable<int> _SCREENNO;
		
		private System.Nullable<int> _Expr7;
		
		private System.Nullable<double> _TOP;
		
		private System.Nullable<double> _BOTTOM;
		
		private System.Nullable<double> _DIAMETER;
		
		private string _UNIT;
		
		private System.Nullable<int> _DIAMETERMM;
		
		private string _MATERIAL;
		
		private System.Nullable<int> _STRENGTH;
		
		private System.Nullable<double> _SLOTOPENIN;
		
		private System.Nullable<System.DateTime> _STARTDATE;
		
		private System.Nullable<System.DateTime> _ENDDATE;
		
		private System.Nullable<int> _WALLTHICKN;
		
		private System.Nullable<char> _FITTING;
		
		private System.Nullable<char> _TOPBOTQUALI;
		
		private System.Nullable<System.DateTime> _Expr8;
		
		private System.Nullable<System.DateTime> _Expr9;
		
		private string _Expr10;
		
		private string _Expr11;
		
		public BorIntScre()
		{
		}
		
		[Column(Storage="_BOREHOLENO", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BOREHOLENO
		{
			get
			{
				return this._BOREHOLENO;
			}
			set
			{
				if ((this._BOREHOLENO != value))
				{
					this._BOREHOLENO = value;
				}
			}
		}
		
		[Column(Storage="_NAMINGSYS", DbType="VarChar(10)")]
		public string NAMINGSYS
		{
			get
			{
				return this._NAMINGSYS;
			}
			set
			{
				if ((this._NAMINGSYS != value))
				{
					this._NAMINGSYS = value;
				}
			}
		}
		
		[Column(Storage="_PURPOSE", DbType="VarChar(2)")]
		public string PURPOSE
		{
			get
			{
				return this._PURPOSE;
			}
			set
			{
				if ((this._PURPOSE != value))
				{
					this._PURPOSE = value;
				}
			}
		}
		
		[Column(Name="[USE]", Storage="_USE", DbType="VarChar(2)")]
		public string USE
		{
			get
			{
				return this._USE;
			}
			set
			{
				if ((this._USE != value))
				{
					this._USE = value;
				}
			}
		}
		
		[Column(Storage="_STATUS", DbType="VarChar(2)")]
		public string STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this._STATUS = value;
				}
			}
		}
		
		[Column(Storage="_DRILLDEPTH", DbType="Float")]
		public System.Nullable<double> DRILLDEPTH
		{
			get
			{
				return this._DRILLDEPTH;
			}
			set
			{
				if ((this._DRILLDEPTH != value))
				{
					this._DRILLDEPTH = value;
				}
			}
		}
		
		[Column(Storage="_ELEVATION", DbType="Float")]
		public System.Nullable<double> ELEVATION
		{
			get
			{
				return this._ELEVATION;
			}
			set
			{
				if ((this._ELEVATION != value))
				{
					this._ELEVATION = value;
				}
			}
		}
		
		[Column(Storage="_CTRPELEVA", DbType="Float")]
		public System.Nullable<double> CTRPELEVA
		{
			get
			{
				return this._CTRPELEVA;
			}
			set
			{
				if ((this._CTRPELEVA != value))
				{
					this._CTRPELEVA = value;
				}
			}
		}
		
		[Column(Storage="_VERTICAREF", DbType="VarChar(5)")]
		public string VERTICAREF
		{
			get
			{
				return this._VERTICAREF;
			}
			set
			{
				if ((this._VERTICAREF != value))
				{
					this._VERTICAREF = value;
				}
			}
		}
		
		[Column(Storage="_CTRPDESCR", DbType="VarChar(2)")]
		public string CTRPDESCR
		{
			get
			{
				return this._CTRPDESCR;
			}
			set
			{
				if ((this._CTRPDESCR != value))
				{
					this._CTRPDESCR = value;
				}
			}
		}
		
		[Column(Storage="_CTRPPRECIS", DbType="Real")]
		public System.Nullable<float> CTRPPRECIS
		{
			get
			{
				return this._CTRPPRECIS;
			}
			set
			{
				if ((this._CTRPPRECIS != value))
				{
					this._CTRPPRECIS = value;
				}
			}
		}
		
		[Column(Storage="_CTRPZPRECIS", DbType="Real")]
		public System.Nullable<float> CTRPZPRECIS
		{
			get
			{
				return this._CTRPZPRECIS;
			}
			set
			{
				if ((this._CTRPZPRECIS != value))
				{
					this._CTRPZPRECIS = value;
				}
			}
		}
		
		[Column(Storage="_CTRPHEIGHT", DbType="Real")]
		public System.Nullable<float> CTRPHEIGHT
		{
			get
			{
				return this._CTRPHEIGHT;
			}
			set
			{
				if ((this._CTRPHEIGHT != value))
				{
					this._CTRPHEIGHT = value;
				}
			}
		}
		
		[Column(Storage="_ELEVAMETHO", DbType="VarChar(2)")]
		public string ELEVAMETHO
		{
			get
			{
				return this._ELEVAMETHO;
			}
			set
			{
				if ((this._ELEVAMETHO != value))
				{
					this._ELEVAMETHO = value;
				}
			}
		}
		
		[Column(Storage="_ELEVAQUALI", DbType="VarChar(2)")]
		public string ELEVAQUALI
		{
			get
			{
				return this._ELEVAQUALI;
			}
			set
			{
				if ((this._ELEVAQUALI != value))
				{
					this._ELEVAQUALI = value;
				}
			}
		}
		
		[Column(Storage="_ELEVASOURC", DbType="VarChar(1)")]
		public System.Nullable<char> ELEVASOURC
		{
			get
			{
				return this._ELEVASOURC;
			}
			set
			{
				if ((this._ELEVASOURC != value))
				{
					this._ELEVASOURC = value;
				}
			}
		}
		
		[Column(Storage="_LOCATION", DbType="VarChar(128)")]
		public string LOCATION
		{
			get
			{
				return this._LOCATION;
			}
			set
			{
				if ((this._LOCATION != value))
				{
					this._LOCATION = value;
				}
			}
		}
		
		[Column(Storage="_COMMENTS", DbType="VarChar(60)")]
		public string COMMENTS
		{
			get
			{
				return this._COMMENTS;
			}
			set
			{
				if ((this._COMMENTS != value))
				{
					this._COMMENTS = value;
				}
			}
		}
		
		[Column(Storage="_VARIOUS", DbType="VarChar(20)")]
		public string VARIOUS
		{
			get
			{
				return this._VARIOUS;
			}
			set
			{
				if ((this._VARIOUS != value))
				{
					this._VARIOUS = value;
				}
			}
		}
		
		[Column(Storage="_XUTM", DbType="Float")]
		public System.Nullable<double> XUTM
		{
			get
			{
				return this._XUTM;
			}
			set
			{
				if ((this._XUTM != value))
				{
					this._XUTM = value;
				}
			}
		}
		
		[Column(Storage="_YUTM", DbType="Float")]
		public System.Nullable<double> YUTM
		{
			get
			{
				return this._YUTM;
			}
			set
			{
				if ((this._YUTM != value))
				{
					this._YUTM = value;
				}
			}
		}
		
		[Column(Storage="_UTMZONE", DbType="Int")]
		public System.Nullable<int> UTMZONE
		{
			get
			{
				return this._UTMZONE;
			}
			set
			{
				if ((this._UTMZONE != value))
				{
					this._UTMZONE = value;
				}
			}
		}
		
		[Column(Storage="_DATUM", DbType="VarChar(7)")]
		public string DATUM
		{
			get
			{
				return this._DATUM;
			}
			set
			{
				if ((this._DATUM != value))
				{
					this._DATUM = value;
				}
			}
		}
		
		[Column(Storage="_MAPSHEET", DbType="VarChar(9)")]
		public string MAPSHEET
		{
			get
			{
				return this._MAPSHEET;
			}
			set
			{
				if ((this._MAPSHEET != value))
				{
					this._MAPSHEET = value;
				}
			}
		}
		
		[Column(Storage="_MAPDISTX", DbType="Float")]
		public System.Nullable<double> MAPDISTX
		{
			get
			{
				return this._MAPDISTX;
			}
			set
			{
				if ((this._MAPDISTX != value))
				{
					this._MAPDISTX = value;
				}
			}
		}
		
		[Column(Storage="_MAPDISTY", DbType="Float")]
		public System.Nullable<double> MAPDISTY
		{
			get
			{
				return this._MAPDISTY;
			}
			set
			{
				if ((this._MAPDISTY != value))
				{
					this._MAPDISTY = value;
				}
			}
		}
		
		[Column(Storage="_SYS34X", DbType="Float")]
		public System.Nullable<double> SYS34X
		{
			get
			{
				return this._SYS34X;
			}
			set
			{
				if ((this._SYS34X != value))
				{
					this._SYS34X = value;
				}
			}
		}
		
		[Column(Storage="_SYS34Y", DbType="Float")]
		public System.Nullable<double> SYS34Y
		{
			get
			{
				return this._SYS34Y;
			}
			set
			{
				if ((this._SYS34Y != value))
				{
					this._SYS34Y = value;
				}
			}
		}
		
		[Column(Storage="_SYS34ZONE", DbType="Int")]
		public System.Nullable<int> SYS34ZONE
		{
			get
			{
				return this._SYS34ZONE;
			}
			set
			{
				if ((this._SYS34ZONE != value))
				{
					this._SYS34ZONE = value;
				}
			}
		}
		
		[Column(Storage="_LATITUDE", DbType="Float")]
		public System.Nullable<double> LATITUDE
		{
			get
			{
				return this._LATITUDE;
			}
			set
			{
				if ((this._LATITUDE != value))
				{
					this._LATITUDE = value;
				}
			}
		}
		
		[Column(Storage="_LONGITUDE", DbType="Float")]
		public System.Nullable<double> LONGITUDE
		{
			get
			{
				return this._LONGITUDE;
			}
			set
			{
				if ((this._LONGITUDE != value))
				{
					this._LONGITUDE = value;
				}
			}
		}
		
		[Column(Storage="_LOCATMETHO", DbType="VarChar(3)")]
		public string LOCATMETHO
		{
			get
			{
				return this._LOCATMETHO;
			}
			set
			{
				if ((this._LOCATMETHO != value))
				{
					this._LOCATMETHO = value;
				}
			}
		}
		
		[Column(Storage="_LOCATQUALI", DbType="VarChar(2)")]
		public string LOCATQUALI
		{
			get
			{
				return this._LOCATQUALI;
			}
			set
			{
				if ((this._LOCATQUALI != value))
				{
					this._LOCATQUALI = value;
				}
			}
		}
		
		[Column(Storage="_LOCATSOURC", DbType="VarChar(2)")]
		public string LOCATSOURC
		{
			get
			{
				return this._LOCATSOURC;
			}
			set
			{
				if ((this._LOCATSOURC != value))
				{
					this._LOCATSOURC = value;
				}
			}
		}
		
		[Column(Storage="_BORHPOSTC", DbType="Int")]
		public System.Nullable<int> BORHPOSTC
		{
			get
			{
				return this._BORHPOSTC;
			}
			set
			{
				if ((this._BORHPOSTC != value))
				{
					this._BORHPOSTC = value;
				}
			}
		}
		
		[Column(Storage="_BORHTOWNNO", DbType="Int")]
		public System.Nullable<int> BORHTOWNNO
		{
			get
			{
				return this._BORHTOWNNO;
			}
			set
			{
				if ((this._BORHTOWNNO != value))
				{
					this._BORHTOWNNO = value;
				}
			}
		}
		
		[Column(Storage="_COUNTYNO", DbType="Int")]
		public System.Nullable<int> COUNTYNO
		{
			get
			{
				return this._COUNTYNO;
			}
			set
			{
				if ((this._COUNTYNO != value))
				{
					this._COUNTYNO = value;
				}
			}
		}
		
		[Column(Storage="_MUNICIPAL", DbType="VarChar(25)")]
		public string MUNICIPAL
		{
			get
			{
				return this._MUNICIPAL;
			}
			set
			{
				if ((this._MUNICIPAL != value))
				{
					this._MUNICIPAL = value;
				}
			}
		}
		
		[Column(Storage="_HOUSEOWNAS", DbType="Int")]
		public System.Nullable<int> HOUSEOWNAS
		{
			get
			{
				return this._HOUSEOWNAS;
			}
			set
			{
				if ((this._HOUSEOWNAS != value))
				{
					this._HOUSEOWNAS = value;
				}
			}
		}
		
		[Column(Storage="_LANDREGNO", DbType="VarChar(10)")]
		public string LANDREGNO
		{
			get
			{
				return this._LANDREGNO;
			}
			set
			{
				if ((this._LANDREGNO != value))
				{
					this._LANDREGNO = value;
				}
			}
		}
		
		[Column(Storage="_DRILLER", DbType="VarChar(18)")]
		public string DRILLER
		{
			get
			{
				return this._DRILLER;
			}
			set
			{
				if ((this._DRILLER != value))
				{
					this._DRILLER = value;
				}
			}
		}
		
		[Column(Storage="_DRILLLOGNO", DbType="VarChar(20)")]
		public string DRILLLOGNO
		{
			get
			{
				return this._DRILLLOGNO;
			}
			set
			{
				if ((this._DRILLLOGNO != value))
				{
					this._DRILLLOGNO = value;
				}
			}
		}
		
		[Column(Storage="_DRILLBORNO", DbType="VarChar(20)")]
		public string DRILLBORNO
		{
			get
			{
				return this._DRILLBORNO;
			}
			set
			{
				if ((this._DRILLBORNO != value))
				{
					this._DRILLBORNO = value;
				}
			}
		}
		
		[Column(Storage="_REPORTEDBY", DbType="VarChar(1)")]
		public System.Nullable<char> REPORTEDBY
		{
			get
			{
				return this._REPORTEDBY;
			}
			set
			{
				if ((this._REPORTEDBY != value))
				{
					this._REPORTEDBY = value;
				}
			}
		}
		
		[Column(Storage="_CONSULTANT", DbType="VarChar(20)")]
		public string CONSULTANT
		{
			get
			{
				return this._CONSULTANT;
			}
			set
			{
				if ((this._CONSULTANT != value))
				{
					this._CONSULTANT = value;
				}
			}
		}
		
		[Column(Storage="_CONSULOGNO", DbType="VarChar(20)")]
		public string CONSULOGNO
		{
			get
			{
				return this._CONSULOGNO;
			}
			set
			{
				if ((this._CONSULOGNO != value))
				{
					this._CONSULOGNO = value;
				}
			}
		}
		
		[Column(Storage="_CONSUBORNO", DbType="VarChar(20)")]
		public string CONSUBORNO
		{
			get
			{
				return this._CONSUBORNO;
			}
			set
			{
				if ((this._CONSUBORNO != value))
				{
					this._CONSUBORNO = value;
				}
			}
		}
		
		[Column(Storage="_DRILLEDFOR", DbType="VarChar(50)")]
		public string DRILLEDFOR
		{
			get
			{
				return this._DRILLEDFOR;
			}
			set
			{
				if ((this._DRILLEDFOR != value))
				{
					this._DRILLEDFOR = value;
				}
			}
		}
		
		[Column(Storage="_DRFORADRES", DbType="VarChar(50)")]
		public string DRFORADRES
		{
			get
			{
				return this._DRFORADRES;
			}
			set
			{
				if ((this._DRFORADRES != value))
				{
					this._DRFORADRES = value;
				}
			}
		}
		
		[Column(Storage="_DRFORPOSTC", DbType="Int")]
		public System.Nullable<int> DRFORPOSTC
		{
			get
			{
				return this._DRFORPOSTC;
			}
			set
			{
				if ((this._DRFORPOSTC != value))
				{
					this._DRFORPOSTC = value;
				}
			}
		}
		
		[Column(Storage="_DRILSTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DRILSTDATE
		{
			get
			{
				return this._DRILSTDATE;
			}
			set
			{
				if ((this._DRILSTDATE != value))
				{
					this._DRILSTDATE = value;
				}
			}
		}
		
		[Column(Storage="_DRILENDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DRILENDATE
		{
			get
			{
				return this._DRILENDATE;
			}
			set
			{
				if ((this._DRILENDATE != value))
				{
					this._DRILENDATE = value;
				}
			}
		}
		
		[Column(Storage="_ABANDONDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> ABANDONDAT
		{
			get
			{
				return this._ABANDONDAT;
			}
			set
			{
				if ((this._ABANDONDAT != value))
				{
					this._ABANDONDAT = value;
				}
			}
		}
		
		[Column(Storage="_PREVBORHNO", DbType="VarChar(10)")]
		public string PREVBORHNO
		{
			get
			{
				return this._PREVBORHNO;
			}
			set
			{
				if ((this._PREVBORHNO != value))
				{
					this._PREVBORHNO = value;
				}
			}
		}
		
		[Column(Storage="_NUMSUPLBOR", DbType="Int")]
		public System.Nullable<int> NUMSUPLBOR
		{
			get
			{
				return this._NUMSUPLBOR;
			}
			set
			{
				if ((this._NUMSUPLBOR != value))
				{
					this._NUMSUPLBOR = value;
				}
			}
		}
		
		[Column(Storage="_SAMRECEDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> SAMRECEDAT
		{
			get
			{
				return this._SAMRECEDAT;
			}
			set
			{
				if ((this._SAMRECEDAT != value))
				{
					this._SAMRECEDAT = value;
				}
			}
		}
		
		[Column(Storage="_SAMDESCDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> SAMDESCDAT
		{
			get
			{
				return this._SAMDESCDAT;
			}
			set
			{
				if ((this._SAMDESCDAT != value))
				{
					this._SAMDESCDAT = value;
				}
			}
		}
		
		[Column(Storage="_NUMOFSAMPL", DbType="Int")]
		public System.Nullable<int> NUMOFSAMPL
		{
			get
			{
				return this._NUMOFSAMPL;
			}
			set
			{
				if ((this._NUMOFSAMPL != value))
				{
					this._NUMOFSAMPL = value;
				}
			}
		}
		
		[Column(Storage="_NUMSAMSTO", DbType="Int")]
		public System.Nullable<int> NUMSAMSTO
		{
			get
			{
				return this._NUMSAMSTO;
			}
			set
			{
				if ((this._NUMSAMSTO != value))
				{
					this._NUMSAMSTO = value;
				}
			}
		}
		
		[Column(Storage="_LITHOLNOTE", DbType="VarChar(255)")]
		public string LITHOLNOTE
		{
			get
			{
				return this._LITHOLNOTE;
			}
			set
			{
				if ((this._LITHOLNOTE != value))
				{
					this._LITHOLNOTE = value;
				}
			}
		}
		
		[Column(Storage="_TOGEUSDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> TOGEUSDATE
		{
			get
			{
				return this._TOGEUSDATE;
			}
			set
			{
				if ((this._TOGEUSDATE != value))
				{
					this._TOGEUSDATE = value;
				}
			}
		}
		
		[Column(Storage="_GRUMOCOUNTYNO", DbType="Int")]
		public System.Nullable<int> GRUMOCOUNTYNO
		{
			get
			{
				return this._GRUMOCOUNTYNO;
			}
			set
			{
				if ((this._GRUMOCOUNTYNO != value))
				{
					this._GRUMOCOUNTYNO = value;
				}
			}
		}
		
		[Column(Storage="_GRUMOBORNO", DbType="Int")]
		public System.Nullable<int> GRUMOBORNO
		{
			get
			{
				return this._GRUMOBORNO;
			}
			set
			{
				if ((this._GRUMOBORNO != value))
				{
					this._GRUMOBORNO = value;
				}
			}
		}
		
		[Column(Storage="_GRUMOBORTYPE", DbType="Int")]
		public System.Nullable<int> GRUMOBORTYPE
		{
			get
			{
				return this._GRUMOBORTYPE;
			}
			set
			{
				if ((this._GRUMOBORTYPE != value))
				{
					this._GRUMOBORTYPE = value;
				}
			}
		}
		
		[Column(Storage="_GRUMOAREANO", DbType="Int")]
		public System.Nullable<int> GRUMOAREANO
		{
			get
			{
				return this._GRUMOAREANO;
			}
			set
			{
				if ((this._GRUMOAREANO != value))
				{
					this._GRUMOAREANO = value;
				}
			}
		}
		
		[Column(Storage="_BORHTOWNNO2007", DbType="Int")]
		public System.Nullable<int> BORHTOWNNO2007
		{
			get
			{
				return this._BORHTOWNNO2007;
			}
			set
			{
				if ((this._BORHTOWNNO2007 != value))
				{
					this._BORHTOWNNO2007 = value;
				}
			}
		}
		
		[Column(Storage="_LOCQUALI", DbType="VarChar(2)")]
		public string LOCQUALI
		{
			get
			{
				return this._LOCQUALI;
			}
			set
			{
				if ((this._LOCQUALI != value))
				{
					this._LOCQUALI = value;
				}
			}
		}
		
		[Column(Storage="_LOOPAREANO", DbType="Int")]
		public System.Nullable<int> LOOPAREANO
		{
			get
			{
				return this._LOOPAREANO;
			}
			set
			{
				if ((this._LOOPAREANO != value))
				{
					this._LOOPAREANO = value;
				}
			}
		}
		
		[Column(Storage="_LOOPSTATION", DbType="Int")]
		public System.Nullable<int> LOOPSTATION
		{
			get
			{
				return this._LOOPSTATION;
			}
			set
			{
				if ((this._LOOPSTATION != value))
				{
					this._LOOPSTATION = value;
				}
			}
		}
		
		[Column(Storage="_LOOPTYPE", DbType="Int")]
		public System.Nullable<int> LOOPTYPE
		{
			get
			{
				return this._LOOPTYPE;
			}
			set
			{
				if ((this._LOOPTYPE != value))
				{
					this._LOOPTYPE = value;
				}
			}
		}
		
		[Column(Storage="_USECHANGEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> USECHANGEDATE
		{
			get
			{
				return this._USECHANGEDATE;
			}
			set
			{
				if ((this._USECHANGEDATE != value))
				{
					this._USECHANGEDATE = value;
				}
			}
		}
		
		[Column(Storage="_ENVCEN", DbType="Int")]
		public System.Nullable<int> ENVCEN
		{
			get
			{
				return this._ENVCEN;
			}
			set
			{
				if ((this._ENVCEN != value))
				{
					this._ENVCEN = value;
				}
			}
		}
		
		[Column(Storage="_ABANDCAUSE", DbType="VarChar(1)")]
		public System.Nullable<char> ABANDCAUSE
		{
			get
			{
				return this._ABANDCAUSE;
			}
			set
			{
				if ((this._ABANDCAUSE != value))
				{
					this._ABANDCAUSE = value;
				}
			}
		}
		
		[Column(Storage="_ABANDCONTR", DbType="VarChar(18)")]
		public string ABANDCONTR
		{
			get
			{
				return this._ABANDCONTR;
			}
			set
			{
				if ((this._ABANDCONTR != value))
				{
					this._ABANDCONTR = value;
				}
			}
		}
		
		[Column(Storage="_STARTDAYUNKNOWN", DbType="VarChar(4)")]
		public string STARTDAYUNKNOWN
		{
			get
			{
				return this._STARTDAYUNKNOWN;
			}
			set
			{
				if ((this._STARTDAYUNKNOWN != value))
				{
					this._STARTDAYUNKNOWN = value;
				}
			}
		}
		
		[Column(Storage="_STARTMNTHUNKNWN", DbType="VarChar(4)")]
		public string STARTMNTHUNKNWN
		{
			get
			{
				return this._STARTMNTHUNKNWN;
			}
			set
			{
				if ((this._STARTMNTHUNKNWN != value))
				{
					this._STARTMNTHUNKNWN = value;
				}
			}
		}
		
		[Column(Storage="_WWBOREHOLENO", DbType="VarChar(20)")]
		public string WWBOREHOLENO
		{
			get
			{
				return this._WWBOREHOLENO;
			}
			set
			{
				if ((this._WWBOREHOLENO != value))
				{
					this._WWBOREHOLENO = value;
				}
			}
		}
		
		[Column(Storage="_XUTM32EUREF89", DbType="Float")]
		public System.Nullable<double> XUTM32EUREF89
		{
			get
			{
				return this._XUTM32EUREF89;
			}
			set
			{
				if ((this._XUTM32EUREF89 != value))
				{
					this._XUTM32EUREF89 = value;
				}
			}
		}
		
		[Column(Storage="_YUTM32EUREF89", DbType="Float")]
		public System.Nullable<double> YUTM32EUREF89
		{
			get
			{
				return this._YUTM32EUREF89;
			}
			set
			{
				if ((this._YUTM32EUREF89 != value))
				{
					this._YUTM32EUREF89 = value;
				}
			}
		}
		
		[Column(Storage="_ZDVR90", DbType="Float")]
		public System.Nullable<double> ZDVR90
		{
			get
			{
				return this._ZDVR90;
			}
			set
			{
				if ((this._ZDVR90 != value))
				{
					this._ZDVR90 = value;
				}
			}
		}
		
		[Column(Storage="_INSTALLATION", DbType="VarChar(2)")]
		public string INSTALLATION
		{
			get
			{
				return this._INSTALLATION;
			}
			set
			{
				if ((this._INSTALLATION != value))
				{
					this._INSTALLATION = value;
				}
			}
		}
		
		[Column(Storage="_WORKINGCONDITIONS", DbType="VarChar(2)")]
		public string WORKINGCONDITIONS
		{
			get
			{
				return this._WORKINGCONDITIONS;
			}
			set
			{
				if ((this._WORKINGCONDITIONS != value))
				{
					this._WORKINGCONDITIONS = value;
				}
			}
		}
		
		[Column(Storage="_APPROACH", DbType="VarChar(2)")]
		public string APPROACH
		{
			get
			{
				return this._APPROACH;
			}
			set
			{
				if ((this._APPROACH != value))
				{
					this._APPROACH = value;
				}
			}
		}
		
		[Column(Storage="_ACCESSREMARK", DbType="VarChar(255)")]
		public string ACCESSREMARK
		{
			get
			{
				return this._ACCESSREMARK;
			}
			set
			{
				if ((this._ACCESSREMARK != value))
				{
					this._ACCESSREMARK = value;
				}
			}
		}
		
		[Column(Storage="_LOCATEPERSONEMAIL", DbType="VarChar(64)")]
		public string LOCATEPERSONEMAIL
		{
			get
			{
				return this._LOCATEPERSONEMAIL;
			}
			set
			{
				if ((this._LOCATEPERSONEMAIL != value))
				{
					this._LOCATEPERSONEMAIL = value;
				}
			}
		}
		
		[Column(Storage="_PRESERVATIONZONE", DbType="Int")]
		public System.Nullable<int> PRESERVATIONZONE
		{
			get
			{
				return this._PRESERVATIONZONE;
			}
			set
			{
				if ((this._PRESERVATIONZONE != value))
				{
					this._PRESERVATIONZONE = value;
				}
			}
		}
		
		[Column(Storage="_PROTECTIONZONE", DbType="Int")]
		public System.Nullable<int> PROTECTIONZONE
		{
			get
			{
				return this._PROTECTIONZONE;
			}
			set
			{
				if ((this._PROTECTIONZONE != value))
				{
					this._PROTECTIONZONE = value;
				}
			}
		}
		
		[Column(Storage="_REGION", DbType="Int")]
		public System.Nullable<int> REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this._REGION = value;
				}
			}
		}
		
		[Column(Storage="_USECHANGECAUSE", DbType="Int")]
		public System.Nullable<int> USECHANGECAUSE
		{
			get
			{
				return this._USECHANGECAUSE;
			}
			set
			{
				if ((this._USECHANGECAUSE != value))
				{
					this._USECHANGECAUSE = value;
				}
			}
		}
		
		[Column(Storage="_INSERTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INSERTDATE
		{
			get
			{
				return this._INSERTDATE;
			}
			set
			{
				if ((this._INSERTDATE != value))
				{
					this._INSERTDATE = value;
				}
			}
		}
		
		[Column(Storage="_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this._UPDATEDATE = value;
				}
			}
		}
		
		[Column(Storage="_INSERTUSER", DbType="VarChar(50)")]
		public string INSERTUSER
		{
			get
			{
				return this._INSERTUSER;
			}
			set
			{
				if ((this._INSERTUSER != value))
				{
					this._INSERTUSER = value;
				}
			}
		}
		
		[Column(Storage="_UPDATEUSER", DbType="VarChar(50)")]
		public string UPDATEUSER
		{
			get
			{
				return this._UPDATEUSER;
			}
			set
			{
				if ((this._UPDATEUSER != value))
				{
					this._UPDATEUSER = value;
				}
			}
		}
		
		[Column(Storage="_Expr1", DbType="VarChar(10)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[Column(Storage="_INTAKENO", DbType="Int")]
		public System.Nullable<int> INTAKENO
		{
			get
			{
				return this._INTAKENO;
			}
			set
			{
				if ((this._INTAKENO != value))
				{
					this._INTAKENO = value;
				}
			}
		}
		
		[Column(Storage="_STRINGNO", DbType="Int")]
		public System.Nullable<int> STRINGNO
		{
			get
			{
				return this._STRINGNO;
			}
			set
			{
				if ((this._STRINGNO != value))
				{
					this._STRINGNO = value;
				}
			}
		}
		
		[Column(Storage="_WATERAGE", DbType="VarChar(1)")]
		public System.Nullable<char> WATERAGE
		{
			get
			{
				return this._WATERAGE;
			}
			set
			{
				if ((this._WATERAGE != value))
				{
					this._WATERAGE = value;
				}
			}
		}
		
		[Column(Storage="_DEPOSITNO", DbType="VarChar(22)")]
		public string DEPOSITNO
		{
			get
			{
				return this._DEPOSITNO;
			}
			set
			{
				if ((this._DEPOSITNO != value))
				{
					this._DEPOSITNO = value;
				}
			}
		}
		
		[Column(Storage="_DEPOSITTYPE", DbType="Int")]
		public System.Nullable<int> DEPOSITTYPE
		{
			get
			{
				return this._DEPOSITTYPE;
			}
			set
			{
				if ((this._DEPOSITTYPE != value))
				{
					this._DEPOSITTYPE = value;
				}
			}
		}
		
		[Column(Storage="_MAINCLASS", DbType="VarChar(1)")]
		public System.Nullable<char> MAINCLASS
		{
			get
			{
				return this._MAINCLASS;
			}
			set
			{
				if ((this._MAINCLASS != value))
				{
					this._MAINCLASS = value;
				}
			}
		}
		
		[Column(Storage="_MONITORINGTYPE", DbType="Int")]
		public System.Nullable<int> MONITORINGTYPE
		{
			get
			{
				return this._MONITORINGTYPE;
			}
			set
			{
				if ((this._MONITORINGTYPE != value))
				{
					this._MONITORINGTYPE = value;
				}
			}
		}
		
		[Column(Storage="_RESERVOIRROCK", DbType="VarChar(2)")]
		public string RESERVOIRROCK
		{
			get
			{
				return this._RESERVOIRROCK;
			}
			set
			{
				if ((this._RESERVOIRROCK != value))
				{
					this._RESERVOIRROCK = value;
				}
			}
		}
		
		[Column(Storage="_RESERVOIRTYPE", DbType="Int")]
		public System.Nullable<int> RESERVOIRTYPE
		{
			get
			{
				return this._RESERVOIRTYPE;
			}
			set
			{
				if ((this._RESERVOIRTYPE != value))
				{
					this._RESERVOIRTYPE = value;
				}
			}
		}
		
		[Column(Storage="_SPECIALUSABLE", DbType="VarChar(1)")]
		public System.Nullable<char> SPECIALUSABLE
		{
			get
			{
				return this._SPECIALUSABLE;
			}
			set
			{
				if ((this._SPECIALUSABLE != value))
				{
					this._SPECIALUSABLE = value;
				}
			}
		}
		
		[Column(Storage="_WATERTABLETYPE", DbType="Int")]
		public System.Nullable<int> WATERTABLETYPE
		{
			get
			{
				return this._WATERTABLETYPE;
			}
			set
			{
				if ((this._WATERTABLETYPE != value))
				{
					this._WATERTABLETYPE = value;
				}
			}
		}
		
		[Column(Storage="_SOUNDABILITY", DbType="VarChar(4)")]
		public string SOUNDABILITY
		{
			get
			{
				return this._SOUNDABILITY;
			}
			set
			{
				if ((this._SOUNDABILITY != value))
				{
					this._SOUNDABILITY = value;
				}
			}
		}
		
		[Column(Storage="_SOUNDABILITYREMARK", DbType="VarChar(255)")]
		public string SOUNDABILITYREMARK
		{
			get
			{
				return this._SOUNDABILITYREMARK;
			}
			set
			{
				if ((this._SOUNDABILITYREMARK != value))
				{
					this._SOUNDABILITYREMARK = value;
				}
			}
		}
		
		[Column(Storage="_SOUNDTUBEINSIDEDIAM", DbType="Float")]
		public System.Nullable<double> SOUNDTUBEINSIDEDIAM
		{
			get
			{
				return this._SOUNDTUBEINSIDEDIAM;
			}
			set
			{
				if ((this._SOUNDTUBEINSIDEDIAM != value))
				{
					this._SOUNDTUBEINSIDEDIAM = value;
				}
			}
		}
		
		[Column(Storage="_Expr2", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expr2
		{
			get
			{
				return this._Expr2;
			}
			set
			{
				if ((this._Expr2 != value))
				{
					this._Expr2 = value;
				}
			}
		}
		
		[Column(Storage="_Expr3", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expr3
		{
			get
			{
				return this._Expr3;
			}
			set
			{
				if ((this._Expr3 != value))
				{
					this._Expr3 = value;
				}
			}
		}
		
		[Column(Storage="_Expr4", DbType="VarChar(50)")]
		public string Expr4
		{
			get
			{
				return this._Expr4;
			}
			set
			{
				if ((this._Expr4 != value))
				{
					this._Expr4 = value;
				}
			}
		}
		
		[Column(Storage="_Expr5", DbType="VarChar(50)")]
		public string Expr5
		{
			get
			{
				return this._Expr5;
			}
			set
			{
				if ((this._Expr5 != value))
				{
					this._Expr5 = value;
				}
			}
		}
		
		[Column(Storage="_Expr6", DbType="VarChar(10)")]
		public string Expr6
		{
			get
			{
				return this._Expr6;
			}
			set
			{
				if ((this._Expr6 != value))
				{
					this._Expr6 = value;
				}
			}
		}
		
		[Column(Storage="_SCREENNO", DbType="Int")]
		public System.Nullable<int> SCREENNO
		{
			get
			{
				return this._SCREENNO;
			}
			set
			{
				if ((this._SCREENNO != value))
				{
					this._SCREENNO = value;
				}
			}
		}
		
		[Column(Storage="_Expr7", DbType="Int")]
		public System.Nullable<int> Expr7
		{
			get
			{
				return this._Expr7;
			}
			set
			{
				if ((this._Expr7 != value))
				{
					this._Expr7 = value;
				}
			}
		}
		
		[Column(Name="[TOP]", Storage="_TOP", DbType="Float")]
		public System.Nullable<double> TOP
		{
			get
			{
				return this._TOP;
			}
			set
			{
				if ((this._TOP != value))
				{
					this._TOP = value;
				}
			}
		}
		
		[Column(Storage="_BOTTOM", DbType="Float")]
		public System.Nullable<double> BOTTOM
		{
			get
			{
				return this._BOTTOM;
			}
			set
			{
				if ((this._BOTTOM != value))
				{
					this._BOTTOM = value;
				}
			}
		}
		
		[Column(Storage="_DIAMETER", DbType="Float")]
		public System.Nullable<double> DIAMETER
		{
			get
			{
				return this._DIAMETER;
			}
			set
			{
				if ((this._DIAMETER != value))
				{
					this._DIAMETER = value;
				}
			}
		}
		
		[Column(Storage="_UNIT", DbType="VarChar(2)")]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this._UNIT = value;
				}
			}
		}
		
		[Column(Storage="_DIAMETERMM", DbType="Int")]
		public System.Nullable<int> DIAMETERMM
		{
			get
			{
				return this._DIAMETERMM;
			}
			set
			{
				if ((this._DIAMETERMM != value))
				{
					this._DIAMETERMM = value;
				}
			}
		}
		
		[Column(Storage="_MATERIAL", DbType="VarChar(2)")]
		public string MATERIAL
		{
			get
			{
				return this._MATERIAL;
			}
			set
			{
				if ((this._MATERIAL != value))
				{
					this._MATERIAL = value;
				}
			}
		}
		
		[Column(Storage="_STRENGTH", DbType="Int")]
		public System.Nullable<int> STRENGTH
		{
			get
			{
				return this._STRENGTH;
			}
			set
			{
				if ((this._STRENGTH != value))
				{
					this._STRENGTH = value;
				}
			}
		}
		
		[Column(Storage="_SLOTOPENIN", DbType="Float")]
		public System.Nullable<double> SLOTOPENIN
		{
			get
			{
				return this._SLOTOPENIN;
			}
			set
			{
				if ((this._SLOTOPENIN != value))
				{
					this._SLOTOPENIN = value;
				}
			}
		}
		
		[Column(Storage="_STARTDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this._STARTDATE = value;
				}
			}
		}
		
		[Column(Storage="_ENDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this._ENDDATE = value;
				}
			}
		}
		
		[Column(Storage="_WALLTHICKN", DbType="Int")]
		public System.Nullable<int> WALLTHICKN
		{
			get
			{
				return this._WALLTHICKN;
			}
			set
			{
				if ((this._WALLTHICKN != value))
				{
					this._WALLTHICKN = value;
				}
			}
		}
		
		[Column(Storage="_FITTING", DbType="VarChar(1)")]
		public System.Nullable<char> FITTING
		{
			get
			{
				return this._FITTING;
			}
			set
			{
				if ((this._FITTING != value))
				{
					this._FITTING = value;
				}
			}
		}
		
		[Column(Storage="_TOPBOTQUALI", DbType="VarChar(1)")]
		public System.Nullable<char> TOPBOTQUALI
		{
			get
			{
				return this._TOPBOTQUALI;
			}
			set
			{
				if ((this._TOPBOTQUALI != value))
				{
					this._TOPBOTQUALI = value;
				}
			}
		}
		
		[Column(Storage="_Expr8", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expr8
		{
			get
			{
				return this._Expr8;
			}
			set
			{
				if ((this._Expr8 != value))
				{
					this._Expr8 = value;
				}
			}
		}
		
		[Column(Storage="_Expr9", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expr9
		{
			get
			{
				return this._Expr9;
			}
			set
			{
				if ((this._Expr9 != value))
				{
					this._Expr9 = value;
				}
			}
		}
		
		[Column(Storage="_Expr10", DbType="VarChar(50)")]
		public string Expr10
		{
			get
			{
				return this._Expr10;
			}
			set
			{
				if ((this._Expr10 != value))
				{
					this._Expr10 = value;
				}
			}
		}
		
		[Column(Storage="_Expr11", DbType="VarChar(50)")]
		public string Expr11
		{
			get
			{
				return this._Expr11;
			}
			set
			{
				if ((this._Expr11 != value))
				{
					this._Expr11 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
