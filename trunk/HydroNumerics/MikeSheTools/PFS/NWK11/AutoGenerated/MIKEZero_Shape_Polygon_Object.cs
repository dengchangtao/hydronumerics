using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;
using HydroNumerics.MikeSheTools.PFS.SheFile;

namespace HydroNumerics.MikeSheTools.PFS.NWK11
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class MIKEZero_Shape_Polygon_Object: PFSMapper
  {


    internal MIKEZero_Shape_Polygon_Object(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }

      Text_Color = new Text_Color(_pfsHandle.GetKeyword("Text_Color", 1));
    }

    public MIKEZero_Shape_Polygon_Object(string pfsname)
    {
      _pfsHandle = new PFSSection(pfsname);

      _pfsHandle.AddKeyword(new PFSKeyword("Base_Title", PFSParameterType.String, ""));

      _pfsHandle.AddKeyword(new PFSKeyword("Base_Reg_Key", PFSParameterType.String, ""));

      _pfsHandle.AddKeyword(new PFSKeyword("Base_Col_Red", PFSParameterType.Integer, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("Base_Col_Green", PFSParameterType.Integer, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("Base_Col_Blue", PFSParameterType.Integer, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("Base_Display_On", PFSParameterType.Boolean, true));

      _pfsHandle.AddKeyword(new PFSKeyword("Line_Thickness", PFSParameterType.Double, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("Line_Style", PFSParameterType.Integer, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("Line_Polygon_Style", PFSParameterType.Integer, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("Draw_Text", PFSParameterType.Boolean, true));

      _pfsHandle.AddKeyword(new PFSKeyword("Text_Color_Style", PFSParameterType.Integer, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("Text_Bk_Mode", PFSParameterType.Integer, 0));

      Text_Color = new Text_Color("Text_Color");
      _pfsHandle.AddKeyword(Text_Color._keyword);
    }

    public Text_Color Text_Color{get; private set;}
    public string Base_Title
    {
      get
      {
        return _pfsHandle.GetKeyword("Base_Title", 1).GetParameter(1).ToString();
      }
      set
      {
        _pfsHandle.GetKeyword("Base_Title", 1).GetParameter(1).Value = value;
      }
    }

    public string Base_Reg_Key
    {
      get
      {
        return _pfsHandle.GetKeyword("Base_Reg_Key", 1).GetParameter(1).ToString();
      }
      set
      {
        _pfsHandle.GetKeyword("Base_Reg_Key", 1).GetParameter(1).Value = value;
      }
    }

    public int Base_Col_Red
    {
      get
      {
        return _pfsHandle.GetKeyword("Base_Col_Red", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Base_Col_Red", 1).GetParameter(1).Value = value;
      }
    }

    public int Base_Col_Green
    {
      get
      {
        return _pfsHandle.GetKeyword("Base_Col_Green", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Base_Col_Green", 1).GetParameter(1).Value = value;
      }
    }

    public int Base_Col_Blue
    {
      get
      {
        return _pfsHandle.GetKeyword("Base_Col_Blue", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Base_Col_Blue", 1).GetParameter(1).Value = value;
      }
    }

    public bool Base_Display_On
    {
      get
      {
        return _pfsHandle.GetKeyword("Base_Display_On", 1).GetParameter(1).ToBoolean();
      }
      set
      {
        _pfsHandle.GetKeyword("Base_Display_On", 1).GetParameter(1).Value = value;
      }
    }

    public double Line_Thickness
    {
      get
      {
        return _pfsHandle.GetKeyword("Line_Thickness", 1).GetParameter(1).ToDouble();
      }
      set
      {
        _pfsHandle.GetKeyword("Line_Thickness", 1).GetParameter(1).Value = value;
      }
    }

    public int Line_Style
    {
      get
      {
        return _pfsHandle.GetKeyword("Line_Style", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Line_Style", 1).GetParameter(1).Value = value;
      }
    }

    public int Line_Polygon_Style
    {
      get
      {
        return _pfsHandle.GetKeyword("Line_Polygon_Style", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Line_Polygon_Style", 1).GetParameter(1).Value = value;
      }
    }

    public bool Draw_Text
    {
      get
      {
        return _pfsHandle.GetKeyword("Draw_Text", 1).GetParameter(1).ToBoolean();
      }
      set
      {
        _pfsHandle.GetKeyword("Draw_Text", 1).GetParameter(1).Value = value;
      }
    }

    public int Text_Color_Style
    {
      get
      {
        return _pfsHandle.GetKeyword("Text_Color_Style", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Text_Color_Style", 1).GetParameter(1).Value = value;
      }
    }

    public int Text_Bk_Mode
    {
      get
      {
        return _pfsHandle.GetKeyword("Text_Bk_Mode", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Text_Bk_Mode", 1).GetParameter(1).Value = value;
      }
    }

  }
}
