using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;
using HydroNumerics.MikeSheTools.PFS.SheFile;

namespace HydroNumerics.MikeSheTools.PFS.Well
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class FILTERDATA: PFSMapper
  {


    internal FILTERDATA(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "FILTERITEM_1":
          FILTERITEM_1 = new FILTERITEM_1(sub);
          break;
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }

    }

    public FILTERDATA(string pfsname)
    {
      _pfsHandle = new PFSSection(pfsname);

      _pfsHandle.AddKeyword(new PFSKeyword("Touched", PFSParameterType.Integer, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("NoFilters", PFSParameterType.Integer, 0));

      FILTERITEM_1 = new FILTERITEM_1("FILTERITEM_1" );
      _pfsHandle.AddSection(FILTERITEM_1._pfsHandle);

    }

    public FILTERITEM_1 FILTERITEM_1{get; private set;}

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int NoFilters
    {
      get
      {
        return _pfsHandle.GetKeyword("NoFilters", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("NoFilters", 1).GetParameter(1).Value = value;
      }
    }

  }
}
