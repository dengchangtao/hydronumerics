using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;
using HydroNumerics.MikeSheTools.PFS.SheFile;

namespace HydroNumerics.MikeSheTools.PFS.Well
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class WELLFIELD: PFSMapper
  {


    internal WELLFIELD(PFSSection Section)
    {
      _pfsHandle = Section;

      WELLNO_1s = new List<WELLNO_11>();
      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
          default:
            if (sub.Name.Substring(0,6).Equals("WELLNO"))
            {
              WELLNO_1s.Add(new WELLNO_11(sub));
              break;
            }
            _unMappedSections.Add(sub.Name);
          break;
        }
      }

    }

    public WELLFIELD(string pfsname)
    {
      _pfsHandle = new PFSSection(pfsname);

      WELLNO_1s = new List<WELLNO_11>();
      _pfsHandle.AddKeyword(new PFSKeyword("Touched", PFSParameterType.Integer, 0));

      _pfsHandle.AddKeyword(new PFSKeyword("NoWellFields", PFSParameterType.Integer, 0));

    }

    public List<WELLNO_11> WELLNO_1s {get; private set;}

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int NoWellFields
    {
      get
      {
        return _pfsHandle.GetKeyword("NoWellFields", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("NoWellFields", 1).GetParameter(1).Value = value;
      }
    }

  }
}
