using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;
using HydroNumerics.MikeSheTools.PFS.SheFile;

namespace HydroNumerics.MikeSheTools.PFS.MEX
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class MEXFile: PFSMapper
  {


    internal MEXFile(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "MOUSE_NODES":
          MOUSE_NODES = new MOUSE_NODES(sub);
          break;
        case "MOUSE_HEADLOSS_PARAMETERS":
          MOUSE_HEADLOSS_PARAMETERS = new MOUSE_HEADLOSS_PARAMETERS(sub);
          break;
        case "MOUSE_LINKS":
          MOUSE_LINKS = new MOUSE_LINKS(sub);
          break;
        case "MOUSE_MATERIAL_PARAMETERS":
          MOUSE_MATERIAL_PARAMETERS = new MOUSE_MATERIAL_PARAMETERS(sub);
          break;
        case "MOUSE_WEIRS":
          MOUSE_WEIRS = new MOUSE_WEIRS(sub);
          break;
        case "MOUSE_PUMPS":
          MOUSE_PUMPS = new MOUSE_PUMPS(sub);
          break;
        case "MOUSE_CROSS_SECTIONS":
          MOUSE_CROSS_SECTIONS = new MOUSE_CROSS_SECTIONS(sub);
          break;
        case "MOUSE_TABULAR_DATA":
          MOUSE_TABULAR_DATA = new MOUSE_TABULAR_DATA(sub);
          break;
        case "MOUSE_PASSIVE_CONTROL":
          MOUSE_PASSIVE_CONTROL = new MOUSE_PASSIVE_CONTROL(sub);
          break;
        case "MOUSE_Catchments":
          MOUSE_Catchments = new MOUSE_Catchments(sub);
          break;
        case "Model_A":
          Model_A = new Model_A(sub);
          break;
        case "Model_B":
          Model_B = new Model_B(sub);
          break;
        case "Model_C":
          Model_C = new Model_C(sub);
          break;
        case "MOUSE_RDII":
          MOUSE_RDII = new MOUSE_RDII(sub);
          break;
        case "CALIBRATION_SPECIFICATION":
          CALIBRATION_SPECIFICATION = new CALIBRATION_SPECIFICATION(sub);
          break;
        case "MOUSE_Computation":
          MOUSE_Computation = new MOUSE_Computation(sub);
          break;
        case "MSM_BITEM":
          MSM_BITEM = new MSM_BITEM(sub);
          break;
        case "MSM_BBOUNDARY":
          MSM_BBOUNDARY = new MSM_BBOUNDARY(sub);
          break;
        case "MOUSE_RTC_SENSORS":
          MOUSE_RTC_SENSORS = new MOUSE_RTC_SENSORS(sub);
          break;
        case "MOUSE_T_Results":
          MOUSE_T_Results = new MOUSE_T_Results(sub);
          break;
        case "INITIAL_CONDITION_SELECTION":
          INITIAL_CONDITION_SELECTION = new INITIAL_CONDITION_SELECTION(sub);
          break;
        case "COMPUTATIONAL_ENGINE_CONTROL":
          COMPUTATIONAL_ENGINE_CONTROL = new COMPUTATIONAL_ENGINE_CONTROL(sub);
          break;
        case "msm_SRQ":
          msm_SRQ = new msm_SRQ(sub);
          break;
        case "msm_ADDispersion":
          msm_ADDispersion = new msm_ADDispersion(sub);
          break;
        case "msm_ST":
          msm_ST = new msm_ST(sub);
          break;
        case "msm_WQProcess":
          msm_WQProcess = new msm_WQProcess(sub);
          break;
        case "msm_SWQLocTreat_Coeff":
          msm_SWQLocTreat_Coeff = new msm_SWQLocTreat_Coeff(sub);
          break;
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }

    }

    public MEXFile()
    {
      _pfsHandle = new PFSSection("MEXFile");

      MOUSE_NODES = new MOUSE_NODES();
      _pfsHandle.AddSection(MOUSE_NODES._pfsHandle);

      MOUSE_HEADLOSS_PARAMETERS = new MOUSE_HEADLOSS_PARAMETERS();
      _pfsHandle.AddSection(MOUSE_HEADLOSS_PARAMETERS._pfsHandle);

      MOUSE_LINKS = new MOUSE_LINKS();
      _pfsHandle.AddSection(MOUSE_LINKS._pfsHandle);

      MOUSE_MATERIAL_PARAMETERS = new MOUSE_MATERIAL_PARAMETERS();
      _pfsHandle.AddSection(MOUSE_MATERIAL_PARAMETERS._pfsHandle);

      MOUSE_WEIRS = new MOUSE_WEIRS();
      _pfsHandle.AddSection(MOUSE_WEIRS._pfsHandle);

      MOUSE_PUMPS = new MOUSE_PUMPS();
      _pfsHandle.AddSection(MOUSE_PUMPS._pfsHandle);

      MOUSE_CROSS_SECTIONS = new MOUSE_CROSS_SECTIONS();
      _pfsHandle.AddSection(MOUSE_CROSS_SECTIONS._pfsHandle);

      MOUSE_TABULAR_DATA = new MOUSE_TABULAR_DATA();
      _pfsHandle.AddSection(MOUSE_TABULAR_DATA._pfsHandle);

      MOUSE_PASSIVE_CONTROL = new MOUSE_PASSIVE_CONTROL();
      _pfsHandle.AddSection(MOUSE_PASSIVE_CONTROL._pfsHandle);

      MOUSE_Catchments = new MOUSE_Catchments();
      _pfsHandle.AddSection(MOUSE_Catchments._pfsHandle);

      Model_A = new Model_A();
      _pfsHandle.AddSection(Model_A._pfsHandle);

      Model_B = new Model_B();
      _pfsHandle.AddSection(Model_B._pfsHandle);

      Model_C = new Model_C();
      _pfsHandle.AddSection(Model_C._pfsHandle);

      MOUSE_RDII = new MOUSE_RDII();
      _pfsHandle.AddSection(MOUSE_RDII._pfsHandle);

      CALIBRATION_SPECIFICATION = new CALIBRATION_SPECIFICATION();
      _pfsHandle.AddSection(CALIBRATION_SPECIFICATION._pfsHandle);

      MOUSE_Computation = new MOUSE_Computation();
      _pfsHandle.AddSection(MOUSE_Computation._pfsHandle);

      MSM_BITEM = new MSM_BITEM();
      _pfsHandle.AddSection(MSM_BITEM._pfsHandle);

      MSM_BBOUNDARY = new MSM_BBOUNDARY();
      _pfsHandle.AddSection(MSM_BBOUNDARY._pfsHandle);

      MOUSE_RTC_SENSORS = new MOUSE_RTC_SENSORS();
      _pfsHandle.AddSection(MOUSE_RTC_SENSORS._pfsHandle);

      MOUSE_T_Results = new MOUSE_T_Results();
      _pfsHandle.AddSection(MOUSE_T_Results._pfsHandle);

      INITIAL_CONDITION_SELECTION = new INITIAL_CONDITION_SELECTION();
      _pfsHandle.AddSection(INITIAL_CONDITION_SELECTION._pfsHandle);

      COMPUTATIONAL_ENGINE_CONTROL = new COMPUTATIONAL_ENGINE_CONTROL();
      _pfsHandle.AddSection(COMPUTATIONAL_ENGINE_CONTROL._pfsHandle);

      msm_SRQ = new msm_SRQ();
      _pfsHandle.AddSection(msm_SRQ._pfsHandle);

      msm_ADDispersion = new msm_ADDispersion();
      _pfsHandle.AddSection(msm_ADDispersion._pfsHandle);

      msm_ST = new msm_ST();
      _pfsHandle.AddSection(msm_ST._pfsHandle);

      msm_WQProcess = new msm_WQProcess();
      _pfsHandle.AddSection(msm_WQProcess._pfsHandle);

      msm_SWQLocTreat_Coeff = new msm_SWQLocTreat_Coeff();
      _pfsHandle.AddSection(msm_SWQLocTreat_Coeff._pfsHandle);

    }

    public MOUSE_NODES MOUSE_NODES{get; private set;}

    public MOUSE_HEADLOSS_PARAMETERS MOUSE_HEADLOSS_PARAMETERS{get; private set;}

    public MOUSE_LINKS MOUSE_LINKS{get; private set;}

    public MOUSE_MATERIAL_PARAMETERS MOUSE_MATERIAL_PARAMETERS{get; private set;}

    public MOUSE_WEIRS MOUSE_WEIRS{get; private set;}

    public MOUSE_PUMPS MOUSE_PUMPS{get; private set;}

    public MOUSE_CROSS_SECTIONS MOUSE_CROSS_SECTIONS{get; private set;}

    public MOUSE_TABULAR_DATA MOUSE_TABULAR_DATA{get; private set;}

    public MOUSE_PASSIVE_CONTROL MOUSE_PASSIVE_CONTROL{get; private set;}

    public MOUSE_Catchments MOUSE_Catchments{get; private set;}

    public Model_A Model_A{get; private set;}

    public Model_B Model_B{get; private set;}

    public Model_C Model_C{get; private set;}

    public MOUSE_RDII MOUSE_RDII{get; private set;}

    public CALIBRATION_SPECIFICATION CALIBRATION_SPECIFICATION{get; private set;}

    public MOUSE_Computation MOUSE_Computation{get; private set;}

    public MSM_BITEM MSM_BITEM{get; private set;}

    public MSM_BBOUNDARY MSM_BBOUNDARY{get; private set;}

    public MOUSE_RTC_SENSORS MOUSE_RTC_SENSORS{get; private set;}

    public MOUSE_T_Results MOUSE_T_Results{get; private set;}

    public INITIAL_CONDITION_SELECTION INITIAL_CONDITION_SELECTION{get; private set;}

    public COMPUTATIONAL_ENGINE_CONTROL COMPUTATIONAL_ENGINE_CONTROL{get; private set;}

    public msm_SRQ msm_SRQ{get; private set;}

    public msm_ADDispersion msm_ADDispersion{get; private set;}

    public msm_ST msm_ST{get; private set;}

    public msm_WQProcess msm_WQProcess{get; private set;}

    public msm_SWQLocTreat_Coeff msm_SWQLocTreat_Coeff{get; private set;}

  }
}
