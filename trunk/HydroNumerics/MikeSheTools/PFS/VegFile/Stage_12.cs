using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;
using HydroNumerics.MikeSheTools.PFS.SheFile;

namespace HydroNumerics.MikeSheTools.PFS.VegetationFile
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class Stage_12: PFSMapper
  {


    internal Stage_12(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int MOISTURE_DEF_START
    {
      get
      {
        return _pfsHandle.GetKeyword("MOISTURE_DEF_START", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("MOISTURE_DEF_START", 1).GetParameter(1).Value = value;
      }
    }

    public int MOISTURE_DEF_STOP
    {
      get
      {
        return _pfsHandle.GetKeyword("MOISTURE_DEF_STOP", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("MOISTURE_DEF_STOP", 1).GetParameter(1).Value = value;
      }
    }

    public int REFERENCE
    {
      get
      {
        return _pfsHandle.GetKeyword("REFERENCE", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("REFERENCE", 1).GetParameter(1).Value = value;
      }
    }

    public int PRESCRIBED
    {
      get
      {
        return _pfsHandle.GetKeyword("PRESCRIBED", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("PRESCRIBED", 1).GetParameter(1).Value = value;
      }
    }

    public int CROPSTRESSFACTOR
    {
      get
      {
        return _pfsHandle.GetKeyword("CROPSTRESSFACTOR", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("CROPSTRESSFACTOR", 1).GetParameter(1).Value = value;
      }
    }

    public int PONDINGDEPTH
    {
      get
      {
        return _pfsHandle.GetKeyword("PONDINGDEPTH", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("PONDINGDEPTH", 1).GetParameter(1).Value = value;
      }
    }

  }
}
