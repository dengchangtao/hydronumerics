//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace SilverlightApplication1.TimeService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseTimeSeries", Namespace="http://schemas.datacontract.org/2004/07/HydroNumerics.Time.Core")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SilverlightApplication1.TimeService.TimestampSeries))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SilverlightApplication1.TimeService.TimespanSeries))]
    public partial class BaseTimeSeries : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AllowExtrapolationField;
        
        private string descriptionField;
        
        private int idField;
        
        private string nameField;
        
        private double relaxationFactorField;
        
        private SilverlightApplication1.TimeService.Unit unitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowExtrapolation {
            get {
                return this.AllowExtrapolationField;
            }
            set {
                if ((this.AllowExtrapolationField.Equals(value) != true)) {
                    this.AllowExtrapolationField = value;
                    this.RaisePropertyChanged("AllowExtrapolation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double relaxationFactor {
            get {
                return this.relaxationFactorField;
            }
            set {
                if ((this.relaxationFactorField.Equals(value) != true)) {
                    this.relaxationFactorField = value;
                    this.RaisePropertyChanged("relaxationFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SilverlightApplication1.TimeService.Unit unit {
            get {
                return this.unitField;
            }
            set {
                if ((object.ReferenceEquals(this.unitField, value) != true)) {
                    this.unitField = value;
                    this.RaisePropertyChanged("unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Unit", Namespace="http://schemas.datacontract.org/2004/07/HydroNumerics.Core")]
    public partial class Unit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double conversionFactorField;
        
        private double conversionOffsetField;
        
        private string descriptionField;
        
        private SilverlightApplication1.TimeService.Dimension dimensionField;
        
        private string idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double conversionFactor {
            get {
                return this.conversionFactorField;
            }
            set {
                if ((this.conversionFactorField.Equals(value) != true)) {
                    this.conversionFactorField = value;
                    this.RaisePropertyChanged("conversionFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double conversionOffset {
            get {
                return this.conversionOffsetField;
            }
            set {
                if ((this.conversionOffsetField.Equals(value) != true)) {
                    this.conversionOffsetField = value;
                    this.RaisePropertyChanged("conversionOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SilverlightApplication1.TimeService.Dimension dimension {
            get {
                return this.dimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.dimensionField, value) != true)) {
                    this.dimensionField = value;
                    this.RaisePropertyChanged("dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimestampSeries", Namespace="http://schemas.datacontract.org/2004/07/HydroNumerics.Time.Core")]
    public partial class TimestampSeries : SilverlightApplication1.TimeService.BaseTimeSeries {
        
        private System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.TimeService.TimestampValue> itemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.TimeService.TimestampValue> items {
            get {
                return this.itemsField;
            }
            set {
                if ((object.ReferenceEquals(this.itemsField, value) != true)) {
                    this.itemsField = value;
                    this.RaisePropertyChanged("items");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimespanSeries", Namespace="http://schemas.datacontract.org/2004/07/HydroNumerics.Time.Core")]
    public partial class TimespanSeries : SilverlightApplication1.TimeService.BaseTimeSeries {
        
        private System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.TimeService.TimespanValue> itemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.TimeService.TimespanValue> items {
            get {
                return this.itemsField;
            }
            set {
                if ((object.ReferenceEquals(this.itemsField, value) != true)) {
                    this.itemsField = value;
                    this.RaisePropertyChanged("items");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimespanValue", Namespace="http://schemas.datacontract.org/2004/07/HydroNumerics.Time.Core")]
    public partial class TimespanValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime endTimeField;
        
        private System.DateTime startTimeField;
        
        private double valField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                if ((this.endTimeField.Equals(value) != true)) {
                    this.endTimeField = value;
                    this.RaisePropertyChanged("endTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                if ((this.startTimeField.Equals(value) != true)) {
                    this.startTimeField = value;
                    this.RaisePropertyChanged("startTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double val {
            get {
                return this.valField;
            }
            set {
                if ((this.valField.Equals(value) != true)) {
                    this.valField = value;
                    this.RaisePropertyChanged("val");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dimension", Namespace="http://schemas.datacontract.org/2004/07/HydroNumerics.Core")]
    public partial class Dimension : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimestampValue", Namespace="http://schemas.datacontract.org/2004/07/HydroNumerics.Time.Core")]
    public partial class TimestampValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timeField;
        
        private double valField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double val {
            get {
                return this.valField;
            }
            set {
                if ((this.valField.Equals(value) != true)) {
                    this.valField = value;
                    this.RaisePropertyChanged("val");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="TimeService.TimeSeriesService")]
    public interface TimeSeriesService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TimeSeriesService/DoWork", ReplyAction="urn:TimeSeriesService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        SilverlightApplication1.TimeService.TimespanSeries EndDoWork(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface TimeSeriesServiceChannel : SilverlightApplication1.TimeService.TimeSeriesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DoWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightApplication1.TimeService.TimespanSeries Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightApplication1.TimeService.TimespanSeries)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class TimeSeriesServiceClient : System.ServiceModel.ClientBase<SilverlightApplication1.TimeService.TimeSeriesService>, SilverlightApplication1.TimeService.TimeSeriesService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TimeSeriesServiceClient() {
        }
        
        public TimeSeriesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimeSeriesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeSeriesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeSeriesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<DoWorkCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication1.TimeService.TimeSeriesService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightApplication1.TimeService.TimespanSeries SilverlightApplication1.TimeService.TimeSeriesService.EndDoWork(System.IAsyncResult result) {
            return base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightApplication1.TimeService.TimeSeriesService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            SilverlightApplication1.TimeService.TimespanSeries retVal = ((SilverlightApplication1.TimeService.TimeSeriesService)(this)).EndDoWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new DoWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightApplication1.TimeService.TimeSeriesService CreateChannel() {
            return new TimeSeriesServiceClientChannel(this);
        }
        
        private class TimeSeriesServiceClientChannel : ChannelBase<SilverlightApplication1.TimeService.TimeSeriesService>, SilverlightApplication1.TimeService.TimeSeriesService {
            
            public TimeSeriesServiceClientChannel(System.ServiceModel.ClientBase<SilverlightApplication1.TimeService.TimeSeriesService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightApplication1.TimeService.TimespanSeries EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightApplication1.TimeService.TimespanSeries _result = ((SilverlightApplication1.TimeService.TimespanSeries)(base.EndInvoke("DoWork", _args, result)));
                return _result;
            }
        }
    }
}
